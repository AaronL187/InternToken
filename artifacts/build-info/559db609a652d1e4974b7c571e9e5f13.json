{"id":"559db609a652d1e4974b7c571e9e5f13","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/Events.sol":{"content":"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\r\npragma solidity ^0.8.20;\r\n\r\nabstract contract TokenEvents {\r\n    event Mint(address indexed to, uint256 amount);\r\n    event TaxTransferred(address indexed from, address indexed to, uint256 amount);\r\n    event TokensBurned(address indexed from, uint256 amount);\r\n}"},"contracts/InternToken.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.20;\r\n\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport {ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport {ERC20Pausable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\r\nimport {ERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {TokenEvents} from \"./Events.sol\";\r\n\r\ncontract InternToken is ERC20, ERC20Burnable, ERC20Pausable, Ownable, ERC20Permit, TokenEvents {\r\n    uint256 public constant MAX_SUPPLY = 1000000 * 10 ** 18;\r\n    address public treasuryWallet;\r\n    constructor(address recipient, address initialOwner)\r\n        ERC20(\"InternToken\", \"INT\")\r\n        Ownable(initialOwner)\r\n        ERC20Permit(\"InternToken\")\r\n    {\r\n        _mint(recipient, 500000 * 10 ** 18);\r\n    }\r\n\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function setTreasuryWallet(address _treasuryWallet) public onlyOwner {\r\n        require(_treasuryWallet != address(0), \"InternToken: treasury wallet is the zero address\");\r\n        require(_treasuryWallet != address(this), \"InternToken: treasury wallet cannot be the contract itself\");\r\n\r\n        treasuryWallet = _treasuryWallet;\r\n        \r\n    }\r\n\r\n    /**\r\n     * @dev Mints `amount` tokens and assigns them to `to`, increasing the total supply.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `amount` must be greater than 0.\r\n     * - The total supply after minting must not exceed `MAX_SUPPLY`.\r\n     *\r\n     * Emits a {Mint} event.\r\n     *\r\n     * @param to The address to which the minted tokens will be assigned.\r\n     * @param amount The number of tokens to mint.\r\n     */\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        require(to != address(0), \"InternToken: mint to the zero address\");\r\n        require(amount > 0, \"InternToken: mint amount must be greater than 0\");\r\n        uint256 mintAmount = amount * 10 ** decimals();\r\n        require(totalSupply() + mintAmount <= MAX_SUPPLY, \"InternToken: mint amount exceeds total supply\");\r\n        _mint(to, mintAmount);\r\n        emit Mint(to, mintAmount);\r\n    }\r\n    \r\n    function transferToTreasury(address _from, uint256 _amount) private {\r\n        require(treasuryWallet != address(0), \"Treasury wallet not set\");\r\n        require(_amount > 0, \"InternToken: transfer amount must be greater than 0\");\r\n        require(balanceOf(_from) >= _amount, \"InternToken: transfer amount exceeds balance\");\r\n        super._transfer(_from, treasuryWallet, _amount);\r\n    }\r\n    \r\n    function transfer(address _from, address _to, uint256 _amount) internal {\r\n        require(_to != address(0), \"InternToken: transfer to the zero address\");\r\n        require(_amount > 0, \"InternToken: transfer amount must be greater than 0\");\r\n        require(balanceOf(_from) >= _amount, \"InternToken: transfer amount exceeds balance\");\r\n        require(!paused(), \"InternToken: Can not transfer while paused\");\r\n        uint256 _sendAmount = _amount * 2 / 100;     // 2% to treasury\r\n        transferToTreasury(_from, _sendAmount);\r\n        emit TaxTransferred(_from, treasuryWallet, _sendAmount);\r\n        uint256 _burnAmount = _amount * 1 / 100;  // 1% burned\r\n        emit TokensBurned(_from, _burnAmount);\r\n        _burn(_from, _burnAmount);\r\n        uint256 _finalAmount = _amount - _sendAmount - _burnAmount; // 97% to receiver\r\n        super._transfer(_from, _to, _finalAmount);\r\n    }\r\n\r\n\r\n    // The following functions are overrides required by Solidity.\r\n\r\n    function _update(address from, address to, uint256 value)\r\n        internal\r\n        override(ERC20, ERC20Pausable)\r\n    {\r\n        super._update(from, to, value);\r\n    }\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1228],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1229,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1228,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1228],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[172]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"IERC5267","nameLocation":"143:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"158:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":152,"name":"EIP712DomainChanged","nameLocation":"253:19:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"272:2:1"},"src":"247:28:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"281:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"447:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"fields","nameLocation":"517:6:1","nodeType":"VariableDeclaration","scope":171,"src":"510:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":155,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"name","nameLocation":"551:4:1","nodeType":"VariableDeclaration","scope":171,"src":"537:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":157,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"version","nameLocation":"583:7:1","nodeType":"VariableDeclaration","scope":171,"src":"569:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":159,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"chainId","nameLocation":"612:7:1","nodeType":"VariableDeclaration","scope":171,"src":"604:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:1","nodeType":"VariableDeclaration","scope":171,"src":"633:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"salt","nameLocation":"680:4:1","nodeType":"VariableDeclaration","scope":171,"src":"672:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"extensions","nameLocation":"715:10:1","nodeType":"VariableDeclaration","scope":171,"src":"698:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":168,"nodeType":"ArrayTypeName","src":"698:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:1"},"scope":172,"src":"426:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":173,"src":"133:605:1","usedErrors":[],"usedEvents":[152]}],"src":"107:632:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[309],"IERC20Errors":[214],"IERC721Errors":[262]},"id":310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"138:141:2","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":214,"linearizedBaseContracts":[214],"name":"IERC20Errors","nameLocation":"290:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"309:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":184,"name":"ERC20InsufficientBalance","nameLocation":"629:24:2","nodeType":"ErrorDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"sender","nameLocation":"662:6:2","nodeType":"VariableDeclaration","scope":184,"src":"654:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"balance","nameLocation":"678:7:2","nodeType":"VariableDeclaration","scope":184,"src":"670:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"needed","nameLocation":"695:6:2","nodeType":"VariableDeclaration","scope":184,"src":"687:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:2"},"src":"623:80:2"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"709:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":189,"name":"ERC20InvalidSender","nameLocation":"872:18:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"sender","nameLocation":"899:6:2","nodeType":"VariableDeclaration","scope":189,"src":"891:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:2"},"src":"866:41:2"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"913:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":194,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:2","nodeType":"ErrorDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:2","nodeType":"VariableDeclaration","scope":194,"src":"1104:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:2"},"src":"1077:45:2"},{"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1128:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":203,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:2","nodeType":"ErrorDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1519:7:2","nodeType":"VariableDeclaration","scope":203,"src":"1511:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:2","nodeType":"VariableDeclaration","scope":203,"src":"1528:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"needed","nameLocation":"1555:6:2","nodeType":"VariableDeclaration","scope":203,"src":"1547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:2"},"src":"1478:85:2"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1569:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":208,"name":"ERC20InvalidApprover","nameLocation":"1754:20:2","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"approver","nameLocation":"1783:8:2","nodeType":"VariableDeclaration","scope":208,"src":"1775:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:2"},"src":"1748:45:2"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"1799:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":213,"name":"ERC20InvalidSpender","nameLocation":"2005:19:2","nodeType":"ErrorDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"spender","nameLocation":"2033:7:2","nodeType":"VariableDeclaration","scope":213,"src":"2025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:2"},"src":"1999:43:2"}],"scope":310,"src":"280:1764:2","usedErrors":[184,189,194,203,208,213],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"2046:143:2","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":262,"linearizedBaseContracts":[262],"name":"IERC721Errors","nameLocation":"2200:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2220:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":220,"name":"ERC721InvalidOwner","nameLocation":"2450:18:2","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"owner","nameLocation":"2477:5:2","nodeType":"VariableDeclaration","scope":220,"src":"2469:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:2"},"src":"2444:40:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2490:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":225,"name":"ERC721NonexistentToken","nameLocation":"2633:22:2","nodeType":"ErrorDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:2","nodeType":"VariableDeclaration","scope":225,"src":"2656:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:2"},"src":"2627:46:2"},{"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"2679:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":234,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:2","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"sender","nameLocation":"3008:6:2","nodeType":"VariableDeclaration","scope":234,"src":"3000:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:2","nodeType":"VariableDeclaration","scope":234,"src":"3016:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"owner","nameLocation":"3041:5:2","nodeType":"VariableDeclaration","scope":234,"src":"3033:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:2"},"src":"2973:75:2"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3054:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":239,"name":"ERC721InvalidSender","nameLocation":"3217:19:2","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"sender","nameLocation":"3245:6:2","nodeType":"VariableDeclaration","scope":239,"src":"3237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:2"},"src":"3211:42:2"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3259:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":244,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:2","nodeType":"ErrorDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:2","nodeType":"VariableDeclaration","scope":244,"src":"3451:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:2"},"src":"3423:46:2"},{"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"3475:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":251,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:2","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"operator","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":251,"src":"3760:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:2","nodeType":"VariableDeclaration","scope":251,"src":"3778:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:2"},"src":"3727:68:2"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3801:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":256,"name":"ERC721InvalidApprover","nameLocation":"3986:21:2","nodeType":"ErrorDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"approver","nameLocation":"4016:8:2","nodeType":"VariableDeclaration","scope":256,"src":"4008:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:2"},"src":"3980:46:2"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"4032:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":261,"name":"ERC721InvalidOperator","nameLocation":"4240:21:2","nodeType":"ErrorDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"operator","nameLocation":"4270:8:2","nodeType":"VariableDeclaration","scope":261,"src":"4262:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:2"},"src":"4234:46:2"}],"scope":310,"src":"2190:2092:2","usedErrors":[220,225,234,239,244,251,256,261],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"4284:145:2","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":309,"linearizedBaseContracts":[309],"name":"IERC1155Errors","nameLocation":"4440:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4461:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":274,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:2","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"sender","nameLocation":"4868:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4860:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"balance","nameLocation":"4884:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4876:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"needed","nameLocation":"4901:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4893:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4909:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:2"},"src":"4827:99:2"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"4932:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":279,"name":"ERC1155InvalidSender","nameLocation":"5095:20:2","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"sender","nameLocation":"5124:6:2","nodeType":"VariableDeclaration","scope":279,"src":"5116:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:2"},"src":"5089:43:2"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5138:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":284,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:2","nodeType":"ErrorDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:2","nodeType":"VariableDeclaration","scope":284,"src":"5331:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:2"},"src":"5302:47:2"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"5355:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":291,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:2","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"operator","nameLocation":"5659:8:2","nodeType":"VariableDeclaration","scope":291,"src":"5651:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"5677:5:2","nodeType":"VariableDeclaration","scope":291,"src":"5669:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:2"},"src":"5616:68:2"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5690:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":296,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:2","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"approver","nameLocation":"5906:8:2","nodeType":"VariableDeclaration","scope":296,"src":"5898:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:2"},"src":"5869:47:2"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"5922:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":301,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:2","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"operator","nameLocation":"6161:8:2","nodeType":"VariableDeclaration","scope":301,"src":"6153:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:2"},"src":"6124:47:2"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"6177:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":308,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:2","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:2","nodeType":"VariableDeclaration","scope":308,"src":"6494:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:2","nodeType":"VariableDeclaration","scope":308,"src":"6513:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:2"},"src":"6462:73:2"}],"scope":310,"src":"4430:2107:2","usedErrors":[274,279,284,291,296,301,308],"usedEvents":[]}],"src":"112:6426:2"},"id":2},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1228],"ERC20":[824],"IERC20":[902],"IERC20Errors":[214],"IERC20Metadata":[1162]},"id":825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":311,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":903,"src":"131:36:3","symbolAliases":[{"foreign":{"id":312,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1163,"src":"168:63:3","symbolAliases":[{"foreign":{"id":314,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"176:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":1229,"src":"232:48:3","symbolAliases":[{"foreign":{"id":316,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"240:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":825,"sourceUnit":310,"src":"281:65:3","symbolAliases":[{"foreign":{"id":318,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"289:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":321,"name":"Context","nameLocations":["1133:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1228,"src":"1133:7:3"},"id":322,"nodeType":"InheritanceSpecifier","src":"1133:7:3"},{"baseName":{"id":323,"name":"IERC20","nameLocations":["1142:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"1142:6:3"},"id":324,"nodeType":"InheritanceSpecifier","src":"1142:6:3"},{"baseName":{"id":325,"name":"IERC20Metadata","nameLocations":["1150:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1162,"src":"1150:14:3"},"id":326,"nodeType":"InheritanceSpecifier","src":"1150:14:3"},{"baseName":{"id":327,"name":"IERC20Errors","nameLocations":["1166:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":214,"src":"1166:12:3"},"id":328,"nodeType":"InheritanceSpecifier","src":"1166:12:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"348:757:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":824,"linearizedBaseContracts":[824,214,1162,902,1228],"name":"ERC20","nameLocation":"1124:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":332,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:3","nodeType":"VariableDeclaration","scope":824,"src":"1185:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"1201:7:3","keyType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":338,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:3","nodeType":"VariableDeclaration","scope":824,"src":"1245:83:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":337,"keyName":"account","keyNameLocation":"1261:7:3","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":336,"keyName":"spender","keyNameLocation":"1288:7:3","keyType":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":340,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:3","nodeType":"VariableDeclaration","scope":824,"src":"1335:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":342,"mutability":"mutable","name":"_name","nameLocation":"1385:5:3","nodeType":"VariableDeclaration","scope":824,"src":"1370:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":344,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:3","nodeType":"VariableDeclaration","scope":824,"src":"1396:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":343,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":360,"nodeType":"Block","src":"1657:57:3","statements":[{"expression":{"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":352,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1667:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":353,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1675:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":355,"nodeType":"ExpressionStatement","src":"1667:13:3"},{"expression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":356,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1690:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":357,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1700:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":359,"nodeType":"ExpressionStatement","src":"1690:17:3"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"1425:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":361,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"name_","nameLocation":"1627:5:3","nodeType":"VariableDeclaration","scope":361,"src":"1613:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":346,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:3","nodeType":"VariableDeclaration","scope":361,"src":"1634:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:3"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"1657:0:3"},"scope":824,"src":"1601:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1149],"body":{"id":369,"nodeType":"Block","src":"1839:29:3","statements":[{"expression":{"id":367,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1856:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":366,"id":368,"nodeType":"Return","src":"1849:12:3"}]},"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"1720:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:3","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"1792:2:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"1824:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":364,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:3"},"scope":824,"src":"1779:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1155],"body":{"id":378,"nodeType":"Block","src":"2043:31:3","statements":[{"expression":{"id":376,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2060:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":375,"id":377,"nodeType":"Return","src":"2053:14:3"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"1874:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":379,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:3","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"1996:2:3"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":379,"src":"2028:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":373,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:3"},"scope":824,"src":"1981:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1161],"body":{"id":387,"nodeType":"Block","src":"2763:26:3","statements":[{"expression":{"hexValue":"3138","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":384,"id":386,"nodeType":"Return","src":"2773:9:3"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2080:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":388,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:3","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"2724:2:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"2756:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":382,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:3"},"scope":824,"src":"2707:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[851],"body":{"id":396,"nodeType":"Block","src":"2910:36:3","statements":[{"expression":{"id":394,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"2927:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":393,"id":395,"nodeType":"Return","src":"2920:19:3"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"2795:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":397,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:3","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"2869:2:3"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"2901:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:3"},"scope":824,"src":"2849:97:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[859],"body":{"id":409,"nodeType":"Block","src":"3078:42:3","statements":[{"expression":{"baseExpression":{"id":405,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3095:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":407,"indexExpression":{"id":406,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3105:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":404,"id":408,"nodeType":"Return","src":"3088:25:3"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"2952:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":410,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:3","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"account","nameLocation":"3031:7:3","nodeType":"VariableDeclaration","scope":410,"src":"3023:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"3069:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:3"},"scope":824,"src":"3004:116:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[869],"body":{"id":433,"nodeType":"Block","src":"3390:103:3","statements":[{"assignments":[421],"declarations":[{"constant":false,"id":421,"mutability":"mutable","name":"owner","nameLocation":"3408:5:3","nodeType":"VariableDeclaration","scope":433,"src":"3400:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":424,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3416:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:3"},{"expression":{"arguments":[{"id":426,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"3448:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"3455:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"3459:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":425,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3438:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"3438:27:3"},{"expression":{"hexValue":"74727565","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":419,"id":432,"nodeType":"Return","src":"3475:11:3"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"3126:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":434,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:3","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"to","nameLocation":"3341:2:3","nodeType":"VariableDeclaration","scope":434,"src":"3333:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"value","nameLocation":"3353:5:3","nodeType":"VariableDeclaration","scope":434,"src":"3345:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:3"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":434,"src":"3384:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:3"},"scope":824,"src":"3315:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[879],"body":{"id":450,"nodeType":"Block","src":"3640:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":444,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"3657:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":446,"indexExpression":{"id":445,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3669:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":448,"indexExpression":{"id":447,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"3676:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":443,"id":449,"nodeType":"Return","src":"3650:34:3"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"3499:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":451,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:3","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"3578:5:3","nodeType":"VariableDeclaration","scope":451,"src":"3570:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"spender","nameLocation":"3593:7:3","nodeType":"VariableDeclaration","scope":451,"src":"3585:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:3"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":451,"src":"3631:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:3"},"scope":824,"src":"3551:140:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[889],"body":{"id":474,"nodeType":"Block","src":"4077:107:3","statements":[{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"owner","nameLocation":"4095:5:3","nodeType":"VariableDeclaration","scope":474,"src":"4087:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":465,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":463,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"4103:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:3"},{"expression":{"arguments":[{"id":467,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4134:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4141:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"4150:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":466,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"4125:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"4125:31:3"},{"expression":{"hexValue":"74727565","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":460,"id":473,"nodeType":"Return","src":"4166:11:3"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"3697:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:3","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"spender","nameLocation":"4023:7:3","nodeType":"VariableDeclaration","scope":475,"src":"4015:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"value","nameLocation":"4040:5:3","nodeType":"VariableDeclaration","scope":475,"src":"4032:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:3"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"4071:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":458,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:3"},"scope":824,"src":"3998:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[901],"body":{"id":506,"nodeType":"Block","src":"4869:151:3","statements":[{"assignments":[488],"declarations":[{"constant":false,"id":488,"mutability":"mutable","name":"spender","nameLocation":"4887:7:3","nodeType":"VariableDeclaration","scope":506,"src":"4879:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":491,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":489,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"4897:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:3"},{"expression":{"arguments":[{"id":493,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4935:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"4941:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4950:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":492,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"4919:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"4919:37:3"},{"expression":{"arguments":[{"id":499,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4976:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"4982:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4986:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4966:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"4966:26:3"},{"expression":{"hexValue":"74727565","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":486,"id":505,"nodeType":"Return","src":"5002:11:3"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"4190:581:3","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:3","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"from","nameLocation":"4806:4:3","nodeType":"VariableDeclaration","scope":507,"src":"4798:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"to","nameLocation":"4820:2:3","nodeType":"VariableDeclaration","scope":507,"src":"4812:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"value","nameLocation":"4832:5:3","nodeType":"VariableDeclaration","scope":507,"src":"4824:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:3"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"4863:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":484,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:3"},"scope":824,"src":"4776:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":553,"nodeType":"Block","src":"5462:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":517,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5476:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:3","typeDescriptions":{}}},"id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":531,"nodeType":"IfStatement","src":"5472:86:3","trueBody":{"id":530,"nodeType":"Block","src":"5496:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:3","typeDescriptions":{}}},"id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":523,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"5517:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":529,"nodeType":"RevertStatement","src":"5510:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5571:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:3","typeDescriptions":{}}},"id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"5567:86:3","trueBody":{"id":545,"nodeType":"Block","src":"5589:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:3","typeDescriptions":{}}},"id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":538,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5610:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"RevertStatement","src":"5603:39:3"}]}},{"expression":{"arguments":[{"id":548,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5670:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":549,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5676:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5680:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":547,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5662:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"ExpressionStatement","src":"5662:24:3"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"5026:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":554,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:3","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"5420:4:3","nodeType":"VariableDeclaration","scope":554,"src":"5412:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"5434:2:3","nodeType":"VariableDeclaration","scope":554,"src":"5426:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"value","nameLocation":"5446:5:3","nodeType":"VariableDeclaration","scope":554,"src":"5438:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:3"},"returnParameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"5462:0:3"},"scope":824,"src":"5393:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"6083:1032:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6097:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:3","typeDescriptions":{}}},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":601,"nodeType":"Block","src":"6271:362:3","statements":[{"assignments":[576],"declarations":[{"constant":false,"id":576,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:3","nodeType":"VariableDeclaration","scope":601,"src":"6285:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":580,"initialValue":{"baseExpression":{"id":577,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6307:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":579,"indexExpression":{"id":578,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6317:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":581,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6340:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6354:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":591,"nodeType":"IfStatement","src":"6336:115:3","trueBody":{"id":590,"nodeType":"Block","src":"6361:90:3","statements":[{"errorCall":{"arguments":[{"id":585,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6411:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":586,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6417:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6430:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":584,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"6386:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":589,"nodeType":"RevertStatement","src":"6379:57:3"}]}},{"id":600,"nodeType":"UncheckedBlock","src":"6464:159:3","statements":[{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":592,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6571:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":594,"indexExpression":{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6581:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"6589:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6603:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":599,"nodeType":"ExpressionStatement","src":"6571:37:3"}]}]},"id":602,"nodeType":"IfStatement","src":"6093:540:3","trueBody":{"id":574,"nodeType":"Block","src":"6117:148:3","statements":[{"expression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":570,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6233:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6249:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":573,"nodeType":"ExpressionStatement","src":"6233:21:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6647:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:3","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":622,"nodeType":"Block","src":"6862:206:3","statements":[{"id":621,"nodeType":"UncheckedBlock","src":"6876:182:3","statements":[{"expression":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":615,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"7021:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":617,"indexExpression":{"id":616,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7031:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7038:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":620,"nodeType":"ExpressionStatement","src":"7021:22:3"}]}]},"id":623,"nodeType":"IfStatement","src":"6643:425:3","trueBody":{"id":614,"nodeType":"Block","src":"6665:191:3","statements":[{"id":613,"nodeType":"UncheckedBlock","src":"6679:167:3","statements":[{"expression":{"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":609,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6810:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6826:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":612,"nodeType":"ExpressionStatement","src":"6810:21:3"}]}]}},{"eventCall":{"arguments":[{"id":625,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"7092:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7098:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"7102:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":624,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"7083:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"EmitStatement","src":"7078:30:3"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"5699:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:3","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"from","nameLocation":"6033:4:3","nodeType":"VariableDeclaration","scope":631,"src":"6025:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"to","nameLocation":"6047:2:3","nodeType":"VariableDeclaration","scope":631,"src":"6039:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"value","nameLocation":"6059:5:3","nodeType":"VariableDeclaration","scope":631,"src":"6051:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:3"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[],"src":"6083:0:3"},"scope":824,"src":"6008:1107:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"7514:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7528:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:3","typeDescriptions":{}}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"IfStatement","src":"7524:91:3","trueBody":{"id":652,"nodeType":"Block","src":"7551:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:3","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"7572:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":651,"nodeType":"RevertStatement","src":"7565:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:3","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7644:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"7653:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7624:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"7624:35:3"}]},"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"7121:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:3","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"account","nameLocation":"7481:7:3","nodeType":"VariableDeclaration","scope":664,"src":"7473:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"value","nameLocation":"7498:5:3","nodeType":"VariableDeclaration","scope":664,"src":"7490:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"7514:0:3"},"scope":824,"src":"7458:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":696,"nodeType":"Block","src":"8040:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":672,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8054:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:3","typeDescriptions":{}}},"id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":686,"nodeType":"IfStatement","src":"8050:89:3","trueBody":{"id":685,"nodeType":"Block","src":"8077:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:3","typeDescriptions":{}}},"id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":678,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"8098:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"RevertStatement","src":"8091:37:3"}]}},{"expression":{"arguments":[{"id":688,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8156:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:3","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"8177:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":687,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8148:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"8148:35:3"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"7672:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":697,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:3","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"account","nameLocation":"8007:7:3","nodeType":"VariableDeclaration","scope":697,"src":"7999:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"value","nameLocation":"8024:5:3","nodeType":"VariableDeclaration","scope":697,"src":"8016:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"8040:0:3"},"scope":824,"src":"7984:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":714,"nodeType":"Block","src":"8800:54:3","statements":[{"expression":{"arguments":[{"id":708,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"8819:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":709,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"8826:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"8835:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":707,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"8810:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"8810:37:3"}]},"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"8196:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:3","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"owner","nameLocation":"8752:5:3","nodeType":"VariableDeclaration","scope":715,"src":"8744:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"spender","nameLocation":"8767:7:3","nodeType":"VariableDeclaration","scope":715,"src":"8759:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"value","nameLocation":"8784:5:3","nodeType":"VariableDeclaration","scope":715,"src":"8776:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"8800:0:3"},"scope":824,"src":"8726:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":774,"nodeType":"Block","src":"9799:334:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9813:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:3","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":741,"nodeType":"IfStatement","src":"9809:89:3","trueBody":{"id":740,"nodeType":"Block","src":"9834:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:3","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":733,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"9855:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"RevertStatement","src":"9848:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":742,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"9911:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:3","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":756,"nodeType":"IfStatement","src":"9907:90:3","trueBody":{"id":755,"nodeType":"Block","src":"9934:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:3","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":748,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"9955:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":754,"nodeType":"RevertStatement","src":"9948:38:3"}]}},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":757,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"10006:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":760,"indexExpression":{"id":758,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10018:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":761,"indexExpression":{"id":759,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10025:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10036:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"nodeType":"ExpressionStatement","src":"10006:35:3"},{"condition":{"id":765,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"10055:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"nodeType":"IfStatement","src":"10051:76:3","trueBody":{"id":772,"nodeType":"Block","src":"10066:61:3","statements":[{"eventCall":{"arguments":[{"id":767,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"10094:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10101:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10110:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":766,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10085:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"EmitStatement","src":"10080:36:3"}]}}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"8860:836:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":775,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:3","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"owner","nameLocation":"9727:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9719:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"spender","nameLocation":"9742:7:3","nodeType":"VariableDeclaration","scope":775,"src":"9734:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"value","nameLocation":"9759:5:3","nodeType":"VariableDeclaration","scope":775,"src":"9751:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:3","nodeType":"VariableDeclaration","scope":775,"src":"9766:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":723,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:3"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"9799:0:3"},"scope":824,"src":"9701:432:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"10504:387:3","statements":[{"assignments":[786],"declarations":[{"constant":false,"id":786,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:3","nodeType":"VariableDeclaration","scope":822,"src":"10514:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":791,"initialValue":{"arguments":[{"id":788,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10551:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10558:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":787,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"10541:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10580:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10604:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":793,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10599:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10599:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10613:3:3","memberName":"max","nodeType":"MemberAccess","src":"10599:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"IfStatement","src":"10576:309:3","trueBody":{"id":820,"nodeType":"Block","src":"10618:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":799,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10636:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10655:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10636:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"10632:130:3","trueBody":{"id":808,"nodeType":"Block","src":"10662:100:3","statements":[{"errorCall":{"arguments":[{"id":803,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10714:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10723:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10741:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":802,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"10687:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10687:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"RevertStatement","src":"10680:67:3"}]}},{"id":819,"nodeType":"UncheckedBlock","src":"10775:100:3","statements":[{"expression":{"arguments":[{"id":811,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10812:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"10819:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"10828:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10847:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10854:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":810,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":775,"src":"10803:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"10803:57:3"}]}]}}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"10139:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:3","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"owner","nameLocation":"10448:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10440:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"spender","nameLocation":"10463:7:3","nodeType":"VariableDeclaration","scope":823,"src":"10455:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"value","nameLocation":"10480:5:3","nodeType":"VariableDeclaration","scope":823,"src":"10472:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:3"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"10504:0:3"},"scope":824,"src":"10415:476:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":825,"src":"1106:9787:3","usedErrors":[184,189,194,203,208,213],"usedEvents":[836,845]}],"src":"105:10789:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[902]},"id":903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":826,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"132:71:4","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":902,"linearizedBaseContracts":[902],"name":"IERC20","nameLocation":"214:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"227:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":836,"name":"Transfer","nameLocation":"396:8:4","nodeType":"EventDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:4","nodeType":"VariableDeclaration","scope":836,"src":"405:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:4","nodeType":"VariableDeclaration","scope":836,"src":"427:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:4","nodeType":"VariableDeclaration","scope":836,"src":"447:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:4"},"src":"390:72:4"},{"anonymous":false,"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"468:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":845,"name":"Approval","nameLocation":"627:8:4","nodeType":"EventDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:4","nodeType":"VariableDeclaration","scope":845,"src":"636:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:4","nodeType":"VariableDeclaration","scope":845,"src":"659:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":843,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:4","nodeType":"VariableDeclaration","scope":845,"src":"684:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:4"},"src":"621:78:4"},{"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"705:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":851,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:4","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"795:2:4"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"821:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:4"},"scope":902,"src":"775:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"836:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":859,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":859,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":859,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":902,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"986:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":869,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:4","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"to","nameLocation":"1230:2:4","nodeType":"VariableDeclaration","scope":869,"src":"1222:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"value","nameLocation":"1242:5:4","nodeType":"VariableDeclaration","scope":869,"src":"1234:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:4"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":869,"src":"1267:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":866,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:4"},"scope":902,"src":"1204:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"1279:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":879,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:4","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"owner","nameLocation":"1575:5:4","nodeType":"VariableDeclaration","scope":879,"src":"1567:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"spender","nameLocation":"1590:7:4","nodeType":"VariableDeclaration","scope":879,"src":"1582:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:4"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"1622:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:4"},"scope":902,"src":"1548:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"1637:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:4","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"spender","nameLocation":"2334:7:4","nodeType":"VariableDeclaration","scope":889,"src":"2326:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"value","nameLocation":"2351:5:4","nodeType":"VariableDeclaration","scope":889,"src":"2343:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:4"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"2376:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":886,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:4"},"scope":902,"src":"2309:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"2388:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":901,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:4","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"from","nameLocation":"2720:4:4","nodeType":"VariableDeclaration","scope":901,"src":"2712:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"to","nameLocation":"2734:2:4","nodeType":"VariableDeclaration","scope":901,"src":"2726:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"value","nameLocation":"2746:5:4","nodeType":"VariableDeclaration","scope":901,"src":"2738:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:4"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"2771:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":898,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:4"},"scope":902,"src":"2690:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":903,"src":"204:2575:4","usedErrors":[],"usedEvents":[836,845]}],"src":"106:2674:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[1228],"ERC20":[824],"ERC20Burnable":[948]},"id":949,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":904,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":949,"sourceUnit":825,"src":"150:35:5","symbolAliases":[{"foreign":{"id":905,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"158:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":949,"sourceUnit":1229,"src":"186:51:5","symbolAliases":[{"foreign":{"id":907,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"194:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":910,"name":"Context","nameLocations":["483:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1228,"src":"483:7:5"},"id":911,"nodeType":"InheritanceSpecifier","src":"483:7:5"},{"baseName":{"id":912,"name":"ERC20","nameLocations":["492:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"492:5:5"},"id":913,"nodeType":"InheritanceSpecifier","src":"492:5:5"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"239:208:5","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":948,"linearizedBaseContracts":[948,824,214,1162,902,1228],"name":"ERC20Burnable","nameLocation":"466:13:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":925,"nodeType":"Block","src":"662:43:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":920,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"678:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"692:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":919,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"672:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"ExpressionStatement","src":"672:26:5"}]},"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"504:109:5","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":926,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:5","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"value","nameLocation":"640:5:5","nodeType":"VariableDeclaration","scope":926,"src":"632:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:5"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"662:0:5"},"scope":948,"src":"618:87:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":946,"nodeType":"Block","src":"1086:93:5","statements":[{"expression":{"arguments":[{"id":935,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"1112:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":936,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"1121:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"1135:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":934,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"1096:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"ExpressionStatement","src":"1096:45:5"},{"expression":{"arguments":[{"id":942,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"1157:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"1166:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":941,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"1151:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":945,"nodeType":"ExpressionStatement","src":"1151:21:5"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"711:305:5","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":947,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:5","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"account","nameLocation":"1047:7:5","nodeType":"VariableDeclaration","scope":947,"src":"1039:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"value","nameLocation":"1064:5:5","nodeType":"VariableDeclaration","scope":947,"src":"1056:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:5"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[],"src":"1086:0:5"},"scope":948,"src":"1021:158:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":949,"src":"448:733:5","usedErrors":[184,189,194,203,208,213],"usedEvents":[836,845]}],"src":"124:1058:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","exportedSymbols":{"ERC20":[824],"ERC20Pausable":[982],"Pausable":[1465]},"id":983,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":950,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":952,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":983,"sourceUnit":825,"src":"150:35:6","symbolAliases":[{"foreign":{"id":951,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"158:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"../../../utils/Pausable.sol","id":954,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":983,"sourceUnit":1466,"src":"186:53:6","symbolAliases":[{"foreign":{"id":953,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"194:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":956,"name":"ERC20","nameLocations":["965:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"965:5:6"},"id":957,"nodeType":"InheritanceSpecifier","src":"965:5:6"},{"baseName":{"id":958,"name":"Pausable","nameLocations":["972:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1465,"src":"972:8:6"},"id":959,"nodeType":"InheritanceSpecifier","src":"972:8:6"}],"canonicalName":"ERC20Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"241:688:6","text":" @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":982,"linearizedBaseContracts":[982,1465,824,214,1162,902,1228],"name":"ERC20Pausable","nameLocation":"948:13:6","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[631],"body":{"id":980,"nodeType":"Block","src":"1211:47:6","statements":[{"expression":{"arguments":[{"id":975,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1235:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":976,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"1241:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"1245:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":972,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1221:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Pausable_$982_$","typeString":"type(contract super ERC20Pausable)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1227:7:6","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":631,"src":"1221:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1221:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":979,"nodeType":"ExpressionStatement","src":"1221:30:6"}]},"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"987:121:6","text":" @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."},"id":981,"implemented":true,"kind":"function","modifiers":[{"id":970,"kind":"modifierInvocation","modifierName":{"id":969,"name":"whenNotPaused","nameLocations":["1197:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1390,"src":"1197:13:6"},"nodeType":"ModifierInvocation","src":"1197:13:6"}],"name":"_update","nameLocation":"1122:7:6","nodeType":"FunctionDefinition","overrides":{"id":968,"nodeType":"OverrideSpecifier","overrides":[],"src":"1188:8:6"},"parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"from","nameLocation":"1138:4:6","nodeType":"VariableDeclaration","scope":981,"src":"1130:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"1130:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"to","nameLocation":"1152:2:6","nodeType":"VariableDeclaration","scope":981,"src":"1144:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"value","nameLocation":"1164:5:6","nodeType":"VariableDeclaration","scope":981,"src":"1156:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1129:41:6"},"returnParameters":{"id":971,"nodeType":"ParameterList","parameters":[],"src":"1211:0:6"},"scope":982,"src":"1113:145:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":983,"src":"930:330:6","usedErrors":[184,189,194,203,208,213,1370,1373],"usedEvents":[836,845,1362,1367]}],"src":"124:1137:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3354],"EIP712":[3581],"ERC20":[824],"ERC20Permit":[1136],"IERC20Permit":[1198],"Nonces":[1296]},"id":1137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":984,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":986,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1137,"sourceUnit":1199,"src":"148:48:7","symbolAliases":[{"foreign":{"id":985,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"156:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":988,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1137,"sourceUnit":825,"src":"197:35:7","symbolAliases":[{"foreign":{"id":987,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"205:5:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":990,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1137,"sourceUnit":3355,"src":"233:60:7","symbolAliases":[{"foreign":{"id":989,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"241:5:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":992,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1137,"sourceUnit":3582,"src":"294:62:7","symbolAliases":[{"foreign":{"id":991,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"302:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":994,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1137,"sourceUnit":1297,"src":"357:49:7","symbolAliases":[{"foreign":{"id":993,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"365:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":996,"name":"ERC20","nameLocations":["931:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"931:5:7"},"id":997,"nodeType":"InheritanceSpecifier","src":"931:5:7"},{"baseName":{"id":998,"name":"IERC20Permit","nameLocations":["938:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":1198,"src":"938:12:7"},"id":999,"nodeType":"InheritanceSpecifier","src":"938:12:7"},{"baseName":{"id":1000,"name":"EIP712","nameLocations":["952:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":3581,"src":"952:6:7"},"id":1001,"nodeType":"InheritanceSpecifier","src":"952:6:7"},{"baseName":{"id":1002,"name":"Nonces","nameLocations":["960:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1296,"src":"960:6:7"},"id":1003,"nodeType":"InheritanceSpecifier","src":"960:6:7"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"408:489:7","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1136,"linearizedBaseContracts":[1136,1296,3581,172,1198,824,214,1162,902,1228],"name":"ERC20Permit","nameLocation":"916:11:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1008,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:7","nodeType":"VariableDeclaration","scope":1136,"src":"973:146:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1005,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"1126:52:7","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1013,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:7","nodeType":"ErrorDefinition","parameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:7","nodeType":"VariableDeclaration","scope":1013,"src":"1213:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:7"},"src":"1183:48:7"},{"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"1237:45:7","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1020,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:7","nodeType":"ErrorDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"signer","nameLocation":"1322:6:7","nodeType":"VariableDeclaration","scope":1020,"src":"1314:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"owner","nameLocation":"1338:5:7","nodeType":"VariableDeclaration","scope":1020,"src":"1330:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:7"},"src":"1287:58:7"},{"body":{"id":1030,"nodeType":"Block","src":"1627:2:7","statements":[]},"documentation":{"id":1021,"nodeType":"StructuredDocumentation","src":"1351:221:7","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1031,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1026,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1616:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1028,"kind":"baseConstructorSpecifier","modifierName":{"id":1025,"name":"EIP712","nameLocations":["1609:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":3581,"src":"1609:6:7"},"nodeType":"ModifierInvocation","src":"1609:17:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"name","nameLocation":"1603:4:7","nodeType":"VariableDeclaration","scope":1031,"src":"1589:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1022,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:7"},"returnParameters":{"id":1029,"nodeType":"ParameterList","parameters":[],"src":"1627:0:7"},"scope":1136,"src":"1577:52:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1183],"body":{"id":1107,"nodeType":"Block","src":"1872:483:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1049,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1886:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"1886:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1051,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"1904:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1058,"nodeType":"IfStatement","src":"1882:97:7","trueBody":{"id":1057,"nodeType":"Block","src":"1914:65:7","statements":[{"errorCall":{"arguments":[{"id":1054,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"1959:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1053,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"1935:23:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1056,"nodeType":"RevertStatement","src":"1928:40:7"}]}},{"assignments":[1060],"declarations":[{"constant":false,"id":1060,"mutability":"mutable","name":"structHash","nameLocation":"1997:10:7","nodeType":"VariableDeclaration","scope":1107,"src":"1989:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1074,"initialValue":{"arguments":[{"arguments":[{"id":1064,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"2031:15:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1065,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2048:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1066,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"2055:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"2064:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1069,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2081:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1068,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"2071:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1071,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"2089:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1062,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2020:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2024:6:7","memberName":"encode","nodeType":"MemberAccess","src":"2020:10:7","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1061,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2010:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:89:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1989:110:7"},{"assignments":[1076],"declarations":[{"constant":false,"id":1076,"mutability":"mutable","name":"hash","nameLocation":"2118:4:7","nodeType":"VariableDeclaration","scope":1107,"src":"2110:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1080,"initialValue":{"arguments":[{"id":1078,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"2142:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1077,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"2125:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2110:43:7"},{"assignments":[1082],"declarations":[{"constant":false,"id":1082,"mutability":"mutable","name":"signer","nameLocation":"2172:6:7","nodeType":"VariableDeclaration","scope":1107,"src":"2164:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1090,"initialValue":{"arguments":[{"id":1085,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"2195:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1086,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"2201:1:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1087,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2204:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1088,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2207:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1083,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"2181:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3354_$","typeString":"type(library ECDSA)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2187:7:7","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3304,"src":"2181:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2164:45:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1091,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"2223:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1092,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2233:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2223:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1100,"nodeType":"IfStatement","src":"2219:88:7","trueBody":{"id":1099,"nodeType":"Block","src":"2240:67:7","statements":[{"errorCall":{"arguments":[{"id":1095,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"2282:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1096,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2290:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1094,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"2261:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1098,"nodeType":"RevertStatement","src":"2254:42:7"}]}},{"expression":{"arguments":[{"id":1102,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2326:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1103,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"2333:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"2342:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1101,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[715,775],"referencedDeclaration":715,"src":"2317:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1106,"nodeType":"ExpressionStatement","src":"2317:31:7"}]},"documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"1635:43:7","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1692:6:7","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"owner","nameLocation":"1716:5:7","nodeType":"VariableDeclaration","scope":1108,"src":"1708:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"spender","nameLocation":"1739:7:7","nodeType":"VariableDeclaration","scope":1108,"src":"1731:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"value","nameLocation":"1764:5:7","nodeType":"VariableDeclaration","scope":1108,"src":"1756:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"deadline","nameLocation":"1787:8:7","nodeType":"VariableDeclaration","scope":1108,"src":"1779:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1039,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"v","nameLocation":"1811:1:7","nodeType":"VariableDeclaration","scope":1108,"src":"1805:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1041,"name":"uint8","nodeType":"ElementaryTypeName","src":"1805:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"r","nameLocation":"1830:1:7","nodeType":"VariableDeclaration","scope":1108,"src":"1822:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"s","nameLocation":"1849:1:7","nodeType":"VariableDeclaration","scope":1108,"src":"1841:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1698:158:7"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[],"src":"1872:0:7"},"scope":1136,"src":"1683:672:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1191,1255],"body":{"id":1124,"nodeType":"Block","src":"2509:43:7","statements":[{"expression":{"arguments":[{"id":1121,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"2539:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1119,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2526:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1136_$","typeString":"type(contract super ERC20Permit)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2532:6:7","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1255,"src":"2526:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1118,"id":1123,"nodeType":"Return","src":"2519:26:7"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"2361:43:7","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2418:6:7","nodeType":"FunctionDefinition","overrides":{"id":1115,"nodeType":"OverrideSpecifier","overrides":[{"id":1113,"name":"IERC20Permit","nameLocations":["2469:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":1198,"src":"2469:12:7"},{"id":1114,"name":"Nonces","nameLocations":["2483:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1296,"src":"2483:6:7"}],"src":"2460:30:7"},"parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"owner","nameLocation":"2433:5:7","nodeType":"VariableDeclaration","scope":1125,"src":"2425:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2424:15:7"},"returnParameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1125,"src":"2500:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2499:9:7"},"scope":1136,"src":"2409:143:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1197],"body":{"id":1134,"nodeType":"Block","src":"2727:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1131,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"2744:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1130,"id":1133,"nodeType":"Return","src":"2737:27:7"}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"2558:43:7","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1135,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2668:16:7","nodeType":"FunctionDefinition","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[],"src":"2684:2:7"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1135,"src":"2718:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2718:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2717:9:7"},"scope":1136,"src":"2659:112:7","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1137,"src":"898:1875:7","usedErrors":[184,189,194,203,208,213,1013,1020,1238,1479,1481,3017,3022,3027],"usedEvents":[152,836,845]}],"src":"122:2652:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[902],"IERC20Metadata":[1162]},"id":1163,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1163,"sourceUnit":903,"src":"151:37:8","symbolAliases":[{"foreign":{"id":1139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"159:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1142,"name":"IERC20","nameLocations":["306:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"306:6:8"},"id":1143,"nodeType":"InheritanceSpecifier","src":"306:6:8"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"190:87:8","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1162,"linearizedBaseContracts":[1162,902],"name":"IERC20Metadata","nameLocation":"288:14:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"319:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1149,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:8","nodeType":"FunctionDefinition","parameters":{"id":1145,"nodeType":"ParameterList","parameters":[],"src":"391:2:8"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1149,"src":"417:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1146,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:8"},"scope":1162,"src":"378:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"438:56:8","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1155,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:8","nodeType":"FunctionDefinition","parameters":{"id":1151,"nodeType":"ParameterList","parameters":[],"src":"514:2:8"},"returnParameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1155,"src":"540:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1152,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:8"},"scope":1162,"src":"499:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"561:65:8","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1161,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:8","nodeType":"FunctionDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[],"src":"648:2:8"},"returnParameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1161,"src":"674:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1158,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:8"},"scope":1162,"src":"631:50:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1163,"src":"278:405:8","usedErrors":[],"usedEvents":[836,845]}],"src":"125:559:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1198]},"id":1199,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1164,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"149:1965:9","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1198,"linearizedBaseContracts":[1198],"name":"IERC20Permit","nameLocation":"2125:12:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"2144:850:9","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1183,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3008:6:9","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"owner","nameLocation":"3032:5:9","nodeType":"VariableDeclaration","scope":1183,"src":"3024:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"spender","nameLocation":"3055:7:9","nodeType":"VariableDeclaration","scope":1183,"src":"3047:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"value","nameLocation":"3080:5:9","nodeType":"VariableDeclaration","scope":1183,"src":"3072:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"deadline","nameLocation":"3103:8:9","nodeType":"VariableDeclaration","scope":1183,"src":"3095:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"v","nameLocation":"3127:1:9","nodeType":"VariableDeclaration","scope":1183,"src":"3121:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1175,"name":"uint8","nodeType":"ElementaryTypeName","src":"3121:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"r","nameLocation":"3146:1:9","nodeType":"VariableDeclaration","scope":1183,"src":"3138:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3138:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"s","nameLocation":"3165:1:9","nodeType":"VariableDeclaration","scope":1183,"src":"3157:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:158:9"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[],"src":"3181:0:9"},"scope":1198,"src":"2999:183:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"3188:294:9","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1191,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3496:6:9","nodeType":"FunctionDefinition","parameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"owner","nameLocation":"3511:5:9","nodeType":"VariableDeclaration","scope":1191,"src":"3503:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3502:15:9"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1191,"src":"3541:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:9"},"scope":1198,"src":"3487:63:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1192,"nodeType":"StructuredDocumentation","src":"3556:128:9","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1197,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3751:16:9","nodeType":"FunctionDefinition","parameters":{"id":1193,"nodeType":"ParameterList","parameters":[],"src":"3767:2:9"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"3793:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:9"},"scope":1198,"src":"3742:60:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1199,"src":"2115:1689:9","usedErrors":[],"usedEvents":[]}],"src":"123:3682:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1228]},"id":1229,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1200,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1201,"nodeType":"StructuredDocumentation","src":"127:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1228,"linearizedBaseContracts":[1228],"name":"Context","nameLocation":"642:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1209,"nodeType":"Block","src":"718:34:10","statements":[{"expression":{"expression":{"id":1206,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:10","memberName":"sender","nodeType":"MemberAccess","src":"735:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1205,"id":1208,"nodeType":"Return","src":"728:17:10"}]},"id":1210,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:10","nodeType":"FunctionDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[],"src":"675:2:10"},"returnParameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1210,"src":"709:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:10"},"scope":1228,"src":"656:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1218,"nodeType":"Block","src":"825:32:10","statements":[{"expression":{"expression":{"id":1215,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:10","memberName":"data","nodeType":"MemberAccess","src":"842:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1214,"id":1217,"nodeType":"Return","src":"835:15:10"}]},"id":1219,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:10","nodeType":"FunctionDefinition","parameters":{"id":1211,"nodeType":"ParameterList","parameters":[],"src":"775:2:10"},"returnParameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1219,"src":"809:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1212,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:10"},"scope":1228,"src":"758:99:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1226,"nodeType":"Block","src":"935:25:10","statements":[{"expression":{"hexValue":"30","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1223,"id":1225,"nodeType":"Return","src":"945:8:10"}]},"id":1227,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:10","nodeType":"FunctionDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[],"src":"892:2:10"},"returnParameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1227,"src":"926:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:10"},"scope":1228,"src":"863:97:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1229,"src":"624:338:10","usedErrors":[],"usedEvents":[]}],"src":"101:862:10"},"id":10},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1296]},"id":1297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1230,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"125:83:11","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1296,"linearizedBaseContracts":[1296],"name":"Nonces","nameLocation":"227:6:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"240:90:11","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1238,"name":"InvalidAccountNonce","nameLocation":"341:19:11","nodeType":"ErrorDefinition","parameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"account","nameLocation":"369:7:11","nodeType":"VariableDeclaration","scope":1238,"src":"361:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:11","nodeType":"VariableDeclaration","scope":1238,"src":"378:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1235,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:11"},"src":"335:65:11"},{"constant":false,"id":1242,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:11","nodeType":"VariableDeclaration","scope":1296,"src":"406:51:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1241,"keyName":"account","keyNameLocation":"422:7:11","keyType":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1254,"nodeType":"Block","src":"607:38:11","statements":[{"expression":{"baseExpression":{"id":1250,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"624:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1252,"indexExpression":{"id":1251,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"632:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1249,"id":1253,"nodeType":"Return","src":"617:21:11"}]},"documentation":{"id":1243,"nodeType":"StructuredDocumentation","src":"464:69:11","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1255,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:11","nodeType":"FunctionDefinition","parameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"owner","nameLocation":"562:5:11","nodeType":"VariableDeclaration","scope":1255,"src":"554:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:11"},"returnParameters":{"id":1249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1255,"src":"598:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1247,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:11"},"scope":1296,"src":"538:107:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1269,"nodeType":"Block","src":"828:326:11","statements":[{"id":1268,"nodeType":"UncheckedBlock","src":"1031:117:11","statements":[{"expression":{"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:11","subExpression":{"baseExpression":{"id":1263,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"1121:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1265,"indexExpression":{"id":1264,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"1129:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1262,"id":1267,"nodeType":"Return","src":"1114:23:11"}]}]},"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"651:103:11","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1270,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:11","nodeType":"FunctionDefinition","parameters":{"id":1259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"owner","nameLocation":"786:5:11","nodeType":"VariableDeclaration","scope":1270,"src":"778:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:11"},"returnParameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1270,"src":"819:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:11"},"scope":1296,"src":"759:395:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1294,"nodeType":"Block","src":"1338:149:11","statements":[{"assignments":[1279],"declarations":[{"constant":false,"id":1279,"mutability":"mutable","name":"current","nameLocation":"1356:7:11","nodeType":"VariableDeclaration","scope":1294,"src":"1348:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1283,"initialValue":{"arguments":[{"id":1281,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"1376:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1280,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"1366:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1284,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"1396:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1285,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"1405:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1293,"nodeType":"IfStatement","src":"1392:89:11","trueBody":{"id":1292,"nodeType":"Block","src":"1414:67:11","statements":[{"errorCall":{"arguments":[{"id":1288,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"1455:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1289,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"1462:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1287,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"1435:19:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1291,"nodeType":"RevertStatement","src":"1428:42:11"}]}}]},"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"1160:100:11","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1295,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:11","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"owner","nameLocation":"1299:5:11","nodeType":"VariableDeclaration","scope":1295,"src":"1291:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:11","nodeType":"VariableDeclaration","scope":1295,"src":"1306:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:11"},"returnParameters":{"id":1277,"nodeType":"ParameterList","parameters":[],"src":"1338:0:11"},"scope":1296,"src":"1265:222:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1297,"src":"209:1280:11","usedErrors":[1238],"usedEvents":[]}],"src":"99:1391:11"},"id":11},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1348]},"id":1349,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1298,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"125:489:12","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1348,"linearizedBaseContracts":[1348],"name":"Panic","nameLocation":"665:5:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1300,"nodeType":"StructuredDocumentation","src":"677:36:12","text":"@dev generic / unspecified error"},"id":1303,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:12","nodeType":"VariableDeclaration","scope":1348,"src":"718:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"764:37:12","text":"@dev used by the assert() builtin"},"id":1307,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:12","nodeType":"VariableDeclaration","scope":1348,"src":"806:39:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"851:41:12","text":"@dev arithmetic underflow or overflow"},"id":1311,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:12","nodeType":"VariableDeclaration","scope":1348,"src":"897:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:12","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"950:35:12","text":"@dev division or modulo by zero"},"id":1315,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:12","nodeType":"VariableDeclaration","scope":1348,"src":"990:49:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:12","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"1045:30:12","text":"@dev enum conversion error"},"id":1319,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:12","nodeType":"VariableDeclaration","scope":1348,"src":"1080:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:12","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"1140:36:12","text":"@dev invalid encoding in storage"},"id":1323,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:12","nodeType":"VariableDeclaration","scope":1348,"src":"1181:55:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:12","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"1242:24:12","text":"@dev empty array pop"},"id":1327,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:12","nodeType":"VariableDeclaration","scope":1348,"src":"1271:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:12","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"1325:35:12","text":"@dev array out of bounds access"},"id":1331,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:12","nodeType":"VariableDeclaration","scope":1348,"src":"1365:52:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:12","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"1423:65:12","text":"@dev resource error (too large allocation or too large array)"},"id":1335,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:12","nodeType":"VariableDeclaration","scope":1348,"src":"1493:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:12","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"1546:42:12","text":"@dev calling invalid internal function"},"id":1339,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:12","nodeType":"VariableDeclaration","scope":1348,"src":"1593:58:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:12","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1346,"nodeType":"Block","src":"1819:151:12","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:12","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:12"},"nodeType":"YulFunctionCall","src":"1868:24:12"},"nodeType":"YulExpressionStatement","src":"1868:24:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:12","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:12"},"nodeType":"YulFunctionCall","src":"1905:18:12"},"nodeType":"YulExpressionStatement","src":"1905:18:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:12","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:12"},"nodeType":"YulFunctionCall","src":"1936:18:12"},"nodeType":"YulExpressionStatement","src":"1936:18:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1342,"isOffset":false,"isSlot":false,"src":"1918:4:12","valueSize":1}],"flags":["memory-safe"],"id":1345,"nodeType":"InlineAssembly","src":"1829:135:12"}]},"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"1658:113:12","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1347,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:12","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"code","nameLocation":"1799:4:12","nodeType":"VariableDeclaration","scope":1347,"src":"1791:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:12"},"returnParameters":{"id":1344,"nodeType":"ParameterList","parameters":[],"src":"1819:0:12"},"scope":1348,"src":"1776:194:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1349,"src":"657:1315:12","usedErrors":[],"usedEvents":[]}],"src":"99:1874:12"},"id":12},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[1228],"Pausable":[1465]},"id":1466,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1350,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1352,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1466,"sourceUnit":1229,"src":"128:45:13","symbolAliases":[{"foreign":{"id":1351,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"136:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1354,"name":"Context","nameLocations":["645:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1228,"src":"645:7:13"},"id":1355,"nodeType":"InheritanceSpecifier","src":"645:7:13"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1353,"nodeType":"StructuredDocumentation","src":"175:439:13","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1465,"linearizedBaseContracts":[1465,1228],"name":"Pausable","nameLocation":"633:8:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1357,"mutability":"mutable","name":"_paused","nameLocation":"672:7:13","nodeType":"VariableDeclaration","scope":1465,"src":"659:20:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1356,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1358,"nodeType":"StructuredDocumentation","src":"686:73:13","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1362,"name":"Paused","nameLocation":"770:6:13","nodeType":"EventDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:13","nodeType":"VariableDeclaration","scope":1362,"src":"777:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:13"},"src":"764:30:13"},{"anonymous":false,"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"800:70:13","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1367,"name":"Unpaused","nameLocation":"881:8:13","nodeType":"EventDefinition","parameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:13","nodeType":"VariableDeclaration","scope":1367,"src":"890:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:13"},"src":"875:32:13"},{"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"913:76:13","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1370,"name":"EnforcedPause","nameLocation":"1000:13:13","nodeType":"ErrorDefinition","parameters":{"id":1369,"nodeType":"ParameterList","parameters":[],"src":"1013:2:13"},"src":"994:22:13"},{"documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"1022:80:13","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1373,"name":"ExpectedPause","nameLocation":"1113:13:13","nodeType":"ErrorDefinition","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[],"src":"1126:2:13"},"src":"1107:22:13"},{"body":{"id":1381,"nodeType":"Block","src":"1221:32:13","statements":[{"expression":{"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1377,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"1231:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1231:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1380,"nodeType":"ExpressionStatement","src":"1231:15:13"}]},"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"1135:67:13","text":" @dev Initializes the contract in unpaused state."},"id":1382,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[],"src":"1218:2:13"},"returnParameters":{"id":1376,"nodeType":"ParameterList","parameters":[],"src":"1221:0:13"},"scope":1465,"src":"1207:46:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1389,"nodeType":"Block","src":"1464:47:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1385,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"1474:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1387,"nodeType":"ExpressionStatement","src":"1474:19:13"},{"id":1388,"nodeType":"PlaceholderStatement","src":"1503:1:13"}]},"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"1259:175:13","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1390,"name":"whenNotPaused","nameLocation":"1448:13:13","nodeType":"ModifierDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[],"src":"1461:2:13"},"src":"1439:72:13","virtual":false,"visibility":"internal"},{"body":{"id":1397,"nodeType":"Block","src":"1711:44:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1393,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"1721:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1395,"nodeType":"ExpressionStatement","src":"1721:16:13"},{"id":1396,"nodeType":"PlaceholderStatement","src":"1747:1:13"}]},"documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"1517:167:13","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1398,"name":"whenPaused","nameLocation":"1698:10:13","nodeType":"ModifierDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[],"src":"1708:2:13"},"src":"1689:66:13","virtual":false,"visibility":"internal"},{"body":{"id":1406,"nodeType":"Block","src":"1903:31:13","statements":[{"expression":{"id":1404,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"1920:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1403,"id":1405,"nodeType":"Return","src":"1913:14:13"}]},"documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"1761:84:13","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1407,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1859:6:13","nodeType":"FunctionDefinition","parameters":{"id":1400,"nodeType":"ParameterList","parameters":[],"src":"1865:2:13"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1407,"src":"1897:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1401,"name":"bool","nodeType":"ElementaryTypeName","src":"1897:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1896:6:13"},"scope":1465,"src":"1850:84:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1418,"nodeType":"Block","src":"2053:77:13","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1411,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2067:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1417,"nodeType":"IfStatement","src":"2063:61:13","trueBody":{"id":1416,"nodeType":"Block","src":"2077:47:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1413,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"2098:13:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1415,"nodeType":"RevertStatement","src":"2091:22:13"}]}}]},"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"1940:57:13","text":" @dev Throws if the contract is paused."},"id":1419,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2011:17:13","nodeType":"FunctionDefinition","parameters":{"id":1409,"nodeType":"ParameterList","parameters":[],"src":"2028:2:13"},"returnParameters":{"id":1410,"nodeType":"ParameterList","parameters":[],"src":"2053:0:13"},"scope":1465,"src":"2002:128:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1431,"nodeType":"Block","src":"2250:78:13","statements":[{"condition":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2264:9:13","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1423,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2265:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1430,"nodeType":"IfStatement","src":"2260:62:13","trueBody":{"id":1429,"nodeType":"Block","src":"2275:47:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1426,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"2296:13:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1428,"nodeType":"RevertStatement","src":"2289:22:13"}]}}]},"documentation":{"id":1420,"nodeType":"StructuredDocumentation","src":"2136:61:13","text":" @dev Throws if the contract is not paused."},"id":1432,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2211:14:13","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[],"src":"2225:2:13"},"returnParameters":{"id":1422,"nodeType":"ParameterList","parameters":[],"src":"2250:0:13"},"scope":1465,"src":"2202:126:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1447,"nodeType":"Block","src":"2512:66:13","statements":[{"expression":{"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1438,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"2522:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2532:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2522:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1441,"nodeType":"ExpressionStatement","src":"2522:14:13"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1443,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"2558:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1442,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"2551:6:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1446,"nodeType":"EmitStatement","src":"2546:25:13"}]},"documentation":{"id":1433,"nodeType":"StructuredDocumentation","src":"2334:124:13","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1448,"implemented":true,"kind":"function","modifiers":[{"id":1436,"kind":"modifierInvocation","modifierName":{"id":1435,"name":"whenNotPaused","nameLocations":["2498:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1390,"src":"2498:13:13"},"nodeType":"ModifierInvocation","src":"2498:13:13"}],"name":"_pause","nameLocation":"2472:6:13","nodeType":"FunctionDefinition","parameters":{"id":1434,"nodeType":"ParameterList","parameters":[],"src":"2478:2:13"},"returnParameters":{"id":1437,"nodeType":"ParameterList","parameters":[],"src":"2512:0:13"},"scope":1465,"src":"2463:115:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1463,"nodeType":"Block","src":"2758:69:13","statements":[{"expression":{"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1454,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"2768:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2778:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2768:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1457,"nodeType":"ExpressionStatement","src":"2768:15:13"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1459,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"2807:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2807:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1458,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"2798:8:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1462,"nodeType":"EmitStatement","src":"2793:27:13"}]},"documentation":{"id":1449,"nodeType":"StructuredDocumentation","src":"2584:121:13","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1464,"implemented":true,"kind":"function","modifiers":[{"id":1452,"kind":"modifierInvocation","modifierName":{"id":1451,"name":"whenPaused","nameLocations":["2747:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1398,"src":"2747:10:13"},"nodeType":"ModifierInvocation","src":"2747:10:13"}],"name":"_unpause","nameLocation":"2719:8:13","nodeType":"FunctionDefinition","parameters":{"id":1450,"nodeType":"ParameterList","parameters":[],"src":"2727:2:13"},"returnParameters":{"id":1453,"nodeType":"ParameterList","parameters":[],"src":"2758:0:13"},"scope":1465,"src":"2710:117:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1466,"src":"615:2214:13","usedErrors":[1370,1373],"usedEvents":[1362,1367]}],"src":"102:2728:13"},"id":13},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1471],"ShortStrings":[1682],"StorageSlot":[1806]},"id":1683,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1467,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1469,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1683,"sourceUnit":1807,"src":"132:46:14","symbolAliases":[{"foreign":{"id":1468,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"140:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1471,"name":"ShortString","nameLocation":"353:11:14","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:14","underlyingType":{"id":1470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1472,"nodeType":"StructuredDocumentation","src":"378:876:14","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1682,"linearizedBaseContracts":[1682],"name":"ShortStrings","nameLocation":"1263:12:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1475,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:14","nodeType":"VariableDeclaration","scope":1682,"src":"1345:111:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1479,"name":"StringTooLong","nameLocation":"1469:13:14","nodeType":"ErrorDefinition","parameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"str","nameLocation":"1490:3:14","nodeType":"VariableDeclaration","scope":1479,"src":"1483:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1476,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:14"},"src":"1463:32:14"},{"errorSelector":"b3512b0c","id":1481,"name":"InvalidShortString","nameLocation":"1506:18:14","nodeType":"ErrorDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[],"src":"1524:2:14"},"src":"1500:27:14"},{"body":{"id":1524,"nodeType":"Block","src":"1786:208:14","statements":[{"assignments":[1491],"declarations":[{"constant":false,"id":1491,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:14","nodeType":"VariableDeclaration","scope":1524,"src":"1796:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1490,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1496,"initialValue":{"arguments":[{"id":1494,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"1822:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1492,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:14","typeDescriptions":{}}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1497,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"1840:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:14","memberName":"length","nodeType":"MemberAccess","src":"1840:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:14","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1506,"nodeType":"IfStatement","src":"1836:72:14","trueBody":{"id":1505,"nodeType":"Block","src":"1858:50:14","statements":[{"errorCall":{"arguments":[{"id":1502,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"1893:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1501,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"1879:13:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1504,"nodeType":"RevertStatement","src":"1872:25:14"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1515,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"1965:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:14","typeDescriptions":{}}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:14","typeDescriptions":{}}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1518,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"1974:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:14","memberName":"length","nodeType":"MemberAccess","src":"1974:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1509,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:14","typeDescriptions":{}}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1507,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"1924:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1471_$","typeString":"type(ShortString)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:14","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:14","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1471_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"functionReturnParameters":1489,"id":1523,"nodeType":"Return","src":"1917:70:14"}]},"documentation":{"id":1482,"nodeType":"StructuredDocumentation","src":"1533:170:14","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1525,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:14","nodeType":"FunctionDefinition","parameters":{"id":1485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"str","nameLocation":"1745:3:14","nodeType":"VariableDeclaration","scope":1525,"src":"1731:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1483,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:14"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1525,"src":"1773:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"},"typeName":{"id":1487,"nodeType":"UserDefinedTypeName","pathNode":{"id":1486,"name":"ShortString","nameLocations":["1773:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1471,"src":"1773:11:14"},"referencedDeclaration":1471,"src":"1773:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:14"},"scope":1682,"src":"1708:286:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1550,"nodeType":"Block","src":"2152:304:14","statements":[{"assignments":[1535],"declarations":[{"constant":false,"id":1535,"mutability":"mutable","name":"len","nameLocation":"2170:3:14","nodeType":"VariableDeclaration","scope":1550,"src":"2162:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1539,"initialValue":{"arguments":[{"id":1537,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"2187:4:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}],"id":1536,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"2176:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1471_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:14"},{"assignments":[1541],"declarations":[{"constant":false,"id":1541,"mutability":"mutable","name":"str","nameLocation":"2294:3:14","nodeType":"VariableDeclaration","scope":1550,"src":"2280:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1540,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1546,"initialValue":{"arguments":[{"hexValue":"3332","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1542,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:14"},{"AST":{"nodeType":"YulBlock","src":"2349:81:14","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:14"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:14"},"nodeType":"YulFunctionCall","src":"2363:16:14"},"nodeType":"YulExpressionStatement","src":"2363:16:14"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:14"},"nodeType":"YulFunctionCall","src":"2399:14:14"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:14"},"nodeType":"YulFunctionCall","src":"2392:28:14"},"nodeType":"YulExpressionStatement","src":"2392:28:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1535,"isOffset":false,"isSlot":false,"src":"2375:3:14","valueSize":1},{"declaration":1529,"isOffset":false,"isSlot":false,"src":"2415:4:14","valueSize":1},{"declaration":1541,"isOffset":false,"isSlot":false,"src":"2370:3:14","valueSize":1},{"declaration":1541,"isOffset":false,"isSlot":false,"src":"2403:3:14","valueSize":1}],"flags":["memory-safe"],"id":1547,"nodeType":"InlineAssembly","src":"2324:106:14"},{"expression":{"id":1548,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2446:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1533,"id":1549,"nodeType":"Return","src":"2439:10:14"}]},"documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"2000:73:14","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1551,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:14","nodeType":"FunctionDefinition","parameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:14","nodeType":"VariableDeclaration","scope":1551,"src":"2096:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"},"typeName":{"id":1528,"nodeType":"UserDefinedTypeName","pathNode":{"id":1527,"name":"ShortString","nameLocations":["2096:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1471,"src":"2096:11:14"},"referencedDeclaration":1471,"src":"2096:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:14"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1551,"src":"2137:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1531,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:14"},"scope":1682,"src":"2078:378:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1582,"nodeType":"Block","src":"2598:175:14","statements":[{"assignments":[1561],"declarations":[{"constant":false,"id":1561,"mutability":"mutable","name":"result","nameLocation":"2616:6:14","nodeType":"VariableDeclaration","scope":1582,"src":"2608:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1560,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1571,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1566,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"2652:4:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}],"expression":{"id":1564,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2633:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1471_$","typeString":"type(ShortString)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1471_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1562,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:14","typeDescriptions":{}}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1572,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"2679:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:14","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1579,"nodeType":"IfStatement","src":"2675:69:14","trueBody":{"id":1578,"nodeType":"Block","src":"2692:52:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1575,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"2713:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1577,"nodeType":"RevertStatement","src":"2706:27:14"}]}},{"expression":{"id":1580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"2760:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1559,"id":1581,"nodeType":"Return","src":"2753:13:14"}]},"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"2462:61:14","text":" @dev Return the length of a `ShortString`."},"id":1583,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:14","nodeType":"FunctionDefinition","parameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:14","nodeType":"VariableDeclaration","scope":1583,"src":"2548:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"},"typeName":{"id":1554,"nodeType":"UserDefinedTypeName","pathNode":{"id":1553,"name":"ShortString","nameLocations":["2548:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1471,"src":"2548:11:14"},"referencedDeclaration":1471,"src":"2548:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:14"},"returnParameters":{"id":1559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1583,"src":"2589:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:14"},"scope":1682,"src":"2528:245:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1622,"nodeType":"Block","src":"2996:231:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"3016:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1594,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:14","typeDescriptions":{}}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:14","memberName":"length","nodeType":"MemberAccess","src":"3010:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1620,"nodeType":"Block","src":"3094:127:14","statements":[{"expression":{"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1609,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"3134:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1606,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"3108:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1806_$","typeString":"type(library StorageSlot)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:14","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1783,"src":"3108:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1703_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1703_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1702,"src":"3108:38:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"3149:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1614,"nodeType":"ExpressionStatement","src":"3108:46:14"},{"expression":{"arguments":[{"id":1617,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"3192:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1615,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"3175:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1471_$","typeString":"type(ShortString)"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:14","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:14","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1471_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"functionReturnParameters":1593,"id":1619,"nodeType":"Return","src":"3168:42:14"}]},"id":1621,"nodeType":"IfStatement","src":"3006:215:14","trueBody":{"id":1605,"nodeType":"Block","src":"3036:52:14","statements":[{"expression":{"arguments":[{"id":1602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"3071:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1601,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"3057:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1471_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"functionReturnParameters":1593,"id":1604,"nodeType":"Return","src":"3050:27:14"}]}}]},"documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"2779:103:14","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1623,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:14","nodeType":"FunctionDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"value","nameLocation":"2936:5:14","nodeType":"VariableDeclaration","scope":1623,"src":"2922:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1585,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"store","nameLocation":"2958:5:14","nodeType":"VariableDeclaration","scope":1623,"src":"2943:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1587,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:14"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1623,"src":"2983:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"},"typeName":{"id":1591,"nodeType":"UserDefinedTypeName","pathNode":{"id":1590,"name":"ShortString","nameLocations":["2983:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1471,"src":"2983:11:14"},"referencedDeclaration":1471,"src":"2983:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:14"},"scope":1682,"src":"2887:340:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1649,"nodeType":"Block","src":"3467:158:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"3500:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}],"expression":{"id":1634,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"3481:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1471_$","typeString":"type(ShortString)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1471_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1638,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"3510:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1647,"nodeType":"Block","src":"3582:37:14","statements":[{"expression":{"id":1645,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"3603:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1633,"id":1646,"nodeType":"Return","src":"3596:12:14"}]},"id":1648,"nodeType":"IfStatement","src":"3477:142:14","trueBody":{"id":1644,"nodeType":"Block","src":"3529:47:14","statements":[{"expression":{"arguments":[{"id":1641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"3559:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}],"id":1640,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"3550:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1471_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1633,"id":1643,"nodeType":"Return","src":"3543:22:14"}]}}]},"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"3233:120:14","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1650,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:14","nodeType":"FunctionDefinition","parameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"value","nameLocation":"3400:5:14","nodeType":"VariableDeclaration","scope":1650,"src":"3388:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"},"typeName":{"id":1626,"nodeType":"UserDefinedTypeName","pathNode":{"id":1625,"name":"ShortString","nameLocations":["3388:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1471,"src":"3388:11:14"},"referencedDeclaration":1471,"src":"3388:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1629,"mutability":"mutable","name":"store","nameLocation":"3422:5:14","nodeType":"VariableDeclaration","scope":1650,"src":"3407:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1628,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:14"},"returnParameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1650,"src":"3452:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1631,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:14"},"scope":1682,"src":"3358:267:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1680,"nodeType":"Block","src":"4105:174:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"4138:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}],"expression":{"id":1661,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"4119:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1471_$","typeString":"type(ShortString)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1471_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1665,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"4148:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1678,"nodeType":"Block","src":"4222:51:14","statements":[{"expression":{"expression":{"arguments":[{"id":1674,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"4249:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1672,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:14","typeDescriptions":{}}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:14","memberName":"length","nodeType":"MemberAccess","src":"4243:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1660,"id":1677,"nodeType":"Return","src":"4236:26:14"}]},"id":1679,"nodeType":"IfStatement","src":"4115:158:14","trueBody":{"id":1671,"nodeType":"Block","src":"4167:49:14","statements":[{"expression":{"arguments":[{"id":1668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"4199:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}],"id":1667,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"4188:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1471_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1660,"id":1670,"nodeType":"Return","src":"4181:24:14"}]}}]},"documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"3631:364:14","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1681,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:14","nodeType":"FunctionDefinition","parameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"value","nameLocation":"4044:5:14","nodeType":"VariableDeclaration","scope":1681,"src":"4032:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"},"typeName":{"id":1653,"nodeType":"UserDefinedTypeName","pathNode":{"id":1652,"name":"ShortString","nameLocations":["4032:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1471,"src":"4032:11:14"},"referencedDeclaration":1471,"src":"4032:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1656,"mutability":"mutable","name":"store","nameLocation":"4066:5:14","nodeType":"VariableDeclaration","scope":1681,"src":"4051:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1655,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:14"},"returnParameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1681,"src":"4096:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1658,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:14"},"scope":1682,"src":"4000:279:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1683,"src":"1255:3026:14","usedErrors":[1479,1481],"usedEvents":[]}],"src":"106:4176:14"},"id":14},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1806]},"id":1807,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1684,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1685,"nodeType":"StructuredDocumentation","src":"219:1187:15","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1806,"linearizedBaseContracts":[1806],"name":"StorageSlot","nameLocation":"1415:11:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1688,"members":[{"constant":false,"id":1687,"mutability":"mutable","name":"value","nameLocation":"1470:5:15","nodeType":"VariableDeclaration","scope":1688,"src":"1462:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:15","nodeType":"StructDefinition","scope":1806,"src":"1433:49:15","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1691,"members":[{"constant":false,"id":1690,"mutability":"mutable","name":"value","nameLocation":"1522:5:15","nodeType":"VariableDeclaration","scope":1691,"src":"1517:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1689,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:15","nodeType":"StructDefinition","scope":1806,"src":"1488:46:15","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1694,"members":[{"constant":false,"id":1693,"mutability":"mutable","name":"value","nameLocation":"1577:5:15","nodeType":"VariableDeclaration","scope":1694,"src":"1569:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:15","nodeType":"StructDefinition","scope":1806,"src":"1540:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1697,"members":[{"constant":false,"id":1696,"mutability":"mutable","name":"value","nameLocation":"1632:5:15","nodeType":"VariableDeclaration","scope":1697,"src":"1624:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:15","nodeType":"StructDefinition","scope":1806,"src":"1595:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1700,"members":[{"constant":false,"id":1699,"mutability":"mutable","name":"value","nameLocation":"1685:5:15","nodeType":"VariableDeclaration","scope":1700,"src":"1678:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1698,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:15","nodeType":"StructDefinition","scope":1806,"src":"1650:47:15","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1703,"members":[{"constant":false,"id":1702,"mutability":"mutable","name":"value","nameLocation":"1738:5:15","nodeType":"VariableDeclaration","scope":1703,"src":"1731:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1701,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:15","nodeType":"StructDefinition","scope":1806,"src":"1703:47:15","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1706,"members":[{"constant":false,"id":1705,"mutability":"mutable","name":"value","nameLocation":"1789:5:15","nodeType":"VariableDeclaration","scope":1706,"src":"1783:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1704,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:15","nodeType":"StructDefinition","scope":1806,"src":"1756:45:15","visibility":"public"},{"body":{"id":1716,"nodeType":"Block","src":"1983:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:15","statements":[{"nodeType":"YulAssignment","src":"2032:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1713,"isOffset":false,"isSlot":true,"src":"2032:6:15","suffix":"slot","valueSize":1},{"declaration":1709,"isOffset":false,"isSlot":false,"src":"2042:4:15","valueSize":1}],"flags":["memory-safe"],"id":1715,"nodeType":"InlineAssembly","src":"1993:63:15"}]},"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"1807:87:15","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1717,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:15","nodeType":"FunctionDefinition","parameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"slot","nameLocation":"1931:4:15","nodeType":"VariableDeclaration","scope":1717,"src":"1923:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:15"},"returnParameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"r","nameLocation":"1980:1:15","nodeType":"VariableDeclaration","scope":1717,"src":"1960:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1688_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1712,"nodeType":"UserDefinedTypeName","pathNode":{"id":1711,"name":"AddressSlot","nameLocations":["1960:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1688,"src":"1960:11:15"},"referencedDeclaration":1688,"src":"1960:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1688_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:15"},"scope":1806,"src":"1899:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1727,"nodeType":"Block","src":"2243:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:15","statements":[{"nodeType":"YulAssignment","src":"2292:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1724,"isOffset":false,"isSlot":true,"src":"2292:6:15","suffix":"slot","valueSize":1},{"declaration":1720,"isOffset":false,"isSlot":false,"src":"2302:4:15","valueSize":1}],"flags":["memory-safe"],"id":1726,"nodeType":"InlineAssembly","src":"2253:63:15"}]},"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"2068:86:15","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:15","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"slot","nameLocation":"2191:4:15","nodeType":"VariableDeclaration","scope":1728,"src":"2183:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:15"},"returnParameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"r","nameLocation":"2240:1:15","nodeType":"VariableDeclaration","scope":1728,"src":"2220:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1691_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1723,"nodeType":"UserDefinedTypeName","pathNode":{"id":1722,"name":"BooleanSlot","nameLocations":["2220:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1691,"src":"2220:11:15"},"referencedDeclaration":1691,"src":"2220:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1691_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:15"},"scope":1806,"src":"2159:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1738,"nodeType":"Block","src":"2503:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:15","statements":[{"nodeType":"YulAssignment","src":"2552:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1735,"isOffset":false,"isSlot":true,"src":"2552:6:15","suffix":"slot","valueSize":1},{"declaration":1731,"isOffset":false,"isSlot":false,"src":"2562:4:15","valueSize":1}],"flags":["memory-safe"],"id":1737,"nodeType":"InlineAssembly","src":"2513:63:15"}]},"documentation":{"id":1729,"nodeType":"StructuredDocumentation","src":"2328:86:15","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1739,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:15","nodeType":"FunctionDefinition","parameters":{"id":1732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"slot","nameLocation":"2451:4:15","nodeType":"VariableDeclaration","scope":1739,"src":"2443:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:15"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"r","nameLocation":"2500:1:15","nodeType":"VariableDeclaration","scope":1739,"src":"2480:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1694_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1734,"nodeType":"UserDefinedTypeName","pathNode":{"id":1733,"name":"Bytes32Slot","nameLocations":["2480:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"2480:11:15"},"referencedDeclaration":1694,"src":"2480:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1694_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:15"},"scope":1806,"src":"2419:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1749,"nodeType":"Block","src":"2763:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:15","statements":[{"nodeType":"YulAssignment","src":"2812:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1746,"isOffset":false,"isSlot":true,"src":"2812:6:15","suffix":"slot","valueSize":1},{"declaration":1742,"isOffset":false,"isSlot":false,"src":"2822:4:15","valueSize":1}],"flags":["memory-safe"],"id":1748,"nodeType":"InlineAssembly","src":"2773:63:15"}]},"documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"2588:86:15","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1750,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:15","nodeType":"FunctionDefinition","parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"slot","nameLocation":"2711:4:15","nodeType":"VariableDeclaration","scope":1750,"src":"2703:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:15"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"r","nameLocation":"2760:1:15","nodeType":"VariableDeclaration","scope":1750,"src":"2740:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1697_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1745,"nodeType":"UserDefinedTypeName","pathNode":{"id":1744,"name":"Uint256Slot","nameLocations":["2740:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1697,"src":"2740:11:15"},"referencedDeclaration":1697,"src":"2740:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1697_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:15"},"scope":1806,"src":"2679:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1760,"nodeType":"Block","src":"3020:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:15","statements":[{"nodeType":"YulAssignment","src":"3069:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1757,"isOffset":false,"isSlot":true,"src":"3069:6:15","suffix":"slot","valueSize":1},{"declaration":1753,"isOffset":false,"isSlot":false,"src":"3079:4:15","valueSize":1}],"flags":["memory-safe"],"id":1759,"nodeType":"InlineAssembly","src":"3030:63:15"}]},"documentation":{"id":1751,"nodeType":"StructuredDocumentation","src":"2848:85:15","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1761,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:15","nodeType":"FunctionDefinition","parameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"slot","nameLocation":"2969:4:15","nodeType":"VariableDeclaration","scope":1761,"src":"2961:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:15"},"returnParameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"r","nameLocation":"3017:1:15","nodeType":"VariableDeclaration","scope":1761,"src":"2998:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1700_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1756,"nodeType":"UserDefinedTypeName","pathNode":{"id":1755,"name":"Int256Slot","nameLocations":["2998:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1700,"src":"2998:10:15"},"referencedDeclaration":1700,"src":"2998:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1700_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:15"},"scope":1806,"src":"2938:161:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1771,"nodeType":"Block","src":"3277:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:15","statements":[{"nodeType":"YulAssignment","src":"3326:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1768,"isOffset":false,"isSlot":true,"src":"3326:6:15","suffix":"slot","valueSize":1},{"declaration":1764,"isOffset":false,"isSlot":false,"src":"3336:4:15","valueSize":1}],"flags":["memory-safe"],"id":1770,"nodeType":"InlineAssembly","src":"3287:63:15"}]},"documentation":{"id":1762,"nodeType":"StructuredDocumentation","src":"3105:85:15","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1772,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:15","nodeType":"FunctionDefinition","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"slot","nameLocation":"3226:4:15","nodeType":"VariableDeclaration","scope":1772,"src":"3218:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:15"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"r","nameLocation":"3274:1:15","nodeType":"VariableDeclaration","scope":1772,"src":"3255:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1703_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1767,"nodeType":"UserDefinedTypeName","pathNode":{"id":1766,"name":"StringSlot","nameLocations":["3255:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1703,"src":"3255:10:15"},"referencedDeclaration":1703,"src":"3255:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1703_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:15"},"scope":1806,"src":"3195:161:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1782,"nodeType":"Block","src":"3558:85:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:15","statements":[{"nodeType":"YulAssignment","src":"3607:20:15","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1779,"isOffset":false,"isSlot":true,"src":"3607:6:15","suffix":"slot","valueSize":1},{"declaration":1775,"isOffset":false,"isSlot":true,"src":"3617:10:15","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1781,"nodeType":"InlineAssembly","src":"3568:69:15"}]},"documentation":{"id":1773,"nodeType":"StructuredDocumentation","src":"3362:101:15","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:15","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1775,"mutability":"mutable","name":"store","nameLocation":"3506:5:15","nodeType":"VariableDeclaration","scope":1783,"src":"3491:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1774,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:15"},"returnParameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"r","nameLocation":"3555:1:15","nodeType":"VariableDeclaration","scope":1783,"src":"3536:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1703_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1778,"nodeType":"UserDefinedTypeName","pathNode":{"id":1777,"name":"StringSlot","nameLocations":["3536:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1703,"src":"3536:10:15"},"referencedDeclaration":1703,"src":"3536:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1703_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:15"},"scope":1806,"src":"3468:175:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1793,"nodeType":"Block","src":"3818:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:15","statements":[{"nodeType":"YulAssignment","src":"3867:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1790,"isOffset":false,"isSlot":true,"src":"3867:6:15","suffix":"slot","valueSize":1},{"declaration":1786,"isOffset":false,"isSlot":false,"src":"3877:4:15","valueSize":1}],"flags":["memory-safe"],"id":1792,"nodeType":"InlineAssembly","src":"3828:63:15"}]},"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"3649:84:15","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1794,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:15","nodeType":"FunctionDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"slot","nameLocation":"3768:4:15","nodeType":"VariableDeclaration","scope":1794,"src":"3760:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:15"},"returnParameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"r","nameLocation":"3815:1:15","nodeType":"VariableDeclaration","scope":1794,"src":"3797:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1706_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1789,"nodeType":"UserDefinedTypeName","pathNode":{"id":1788,"name":"BytesSlot","nameLocations":["3797:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":1706,"src":"3797:9:15"},"referencedDeclaration":1706,"src":"3797:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1706_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:15"},"scope":1806,"src":"3738:159:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1804,"nodeType":"Block","src":"4094:85:15","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:15","statements":[{"nodeType":"YulAssignment","src":"4143:20:15","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1801,"isOffset":false,"isSlot":true,"src":"4143:6:15","suffix":"slot","valueSize":1},{"declaration":1797,"isOffset":false,"isSlot":true,"src":"4153:10:15","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1803,"nodeType":"InlineAssembly","src":"4104:69:15"}]},"documentation":{"id":1795,"nodeType":"StructuredDocumentation","src":"3903:99:15","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1805,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:15","nodeType":"FunctionDefinition","parameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"store","nameLocation":"4043:5:15","nodeType":"VariableDeclaration","scope":1805,"src":"4029:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1796,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:15"},"returnParameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"r","nameLocation":"4091:1:15","nodeType":"VariableDeclaration","scope":1805,"src":"4073:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1706_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1800,"nodeType":"UserDefinedTypeName","pathNode":{"id":1799,"name":"BytesSlot","nameLocations":["4073:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":1706,"src":"4073:9:15"},"referencedDeclaration":1706,"src":"4073:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1706_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:15"},"scope":1806,"src":"4007:172:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1807,"src":"1407:2774:15","usedErrors":[],"usedEvents":[]}],"src":"193:3989:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5261],"SafeCast":[7026],"SignedMath":[7170],"Strings":[3006]},"id":3007,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1808,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1810,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3007,"sourceUnit":5262,"src":"127:37:16","symbolAliases":[{"foreign":{"id":1809,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"135:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1812,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3007,"sourceUnit":7027,"src":"165:45:16","symbolAliases":[{"foreign":{"id":1811,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"173:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1814,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3007,"sourceUnit":7171,"src":"211:49:16","symbolAliases":[{"foreign":{"id":1813,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"219:10:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1815,"nodeType":"StructuredDocumentation","src":"262:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":3006,"linearizedBaseContracts":[3006],"name":"Strings","nameLocation":"305:7:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1817,"libraryName":{"id":1816,"name":"SafeCast","nameLocations":["325:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":7026,"src":"325:8:16"},"nodeType":"UsingForDirective","src":"319:21:16"},{"constant":true,"id":1820,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:16","nodeType":"VariableDeclaration","scope":3006,"src":"346:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1818,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1823,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:16","nodeType":"VariableDeclaration","scope":3006,"src":"408:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1821,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1824,"nodeType":"StructuredDocumentation","src":"457:81:16","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1830,"name":"StringsInsufficientHexLength","nameLocation":"549:28:16","nodeType":"ErrorDefinition","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"value","nameLocation":"586:5:16","nodeType":"VariableDeclaration","scope":1830,"src":"578:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1828,"mutability":"mutable","name":"length","nameLocation":"601:6:16","nodeType":"VariableDeclaration","scope":1830,"src":"593:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:16"},"src":"543:66:16"},{"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"615:108:16","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1833,"name":"StringsInvalidChar","nameLocation":"734:18:16","nodeType":"ErrorDefinition","parameters":{"id":1832,"nodeType":"ParameterList","parameters":[],"src":"752:2:16"},"src":"728:27:16"},{"documentation":{"id":1834,"nodeType":"StructuredDocumentation","src":"761:84:16","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1836,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:16","nodeType":"ErrorDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[],"src":"883:2:16"},"src":"850:36:16"},{"body":{"id":1883,"nodeType":"Block","src":"1058:561:16","statements":[{"id":1882,"nodeType":"UncheckedBlock","src":"1068:545:16","statements":[{"assignments":[1845],"declarations":[{"constant":false,"id":1845,"mutability":"mutable","name":"length","nameLocation":"1100:6:16","nodeType":"VariableDeclaration","scope":1882,"src":"1092:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1852,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"1120:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1846,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"1109:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5261_$","typeString":"type(library Math)"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:16","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5033,"src":"1109:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:16"},{"assignments":[1854],"declarations":[{"constant":false,"id":1854,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:16","nodeType":"VariableDeclaration","scope":1882,"src":"1144:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1853,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1859,"initialValue":{"arguments":[{"id":1857,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"1178:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1855,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:16"},{"assignments":[1861],"declarations":[{"constant":false,"id":1861,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:16","nodeType":"VariableDeclaration","scope":1882,"src":"1199:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1862,"nodeType":"VariableDeclarationStatement","src":"1199:11:16"},{"AST":{"nodeType":"YulBlock","src":"1249:67:16","statements":[{"nodeType":"YulAssignment","src":"1267:35:16","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1278:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1290:2:16","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1294:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:16"},"nodeType":"YulFunctionCall","src":"1286:15:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1274:3:16"},"nodeType":"YulFunctionCall","src":"1274:28:16"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1267:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1854,"isOffset":false,"isSlot":false,"src":"1278:6:16","valueSize":1},{"declaration":1845,"isOffset":false,"isSlot":false,"src":"1294:6:16","valueSize":1},{"declaration":1861,"isOffset":false,"isSlot":false,"src":"1267:3:16","valueSize":1}],"flags":["memory-safe"],"id":1863,"nodeType":"InlineAssembly","src":"1224:92:16"},{"body":{"id":1878,"nodeType":"Block","src":"1342:234:16","statements":[{"expression":{"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:16","subExpression":{"id":1865,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"1360:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1867,"nodeType":"ExpressionStatement","src":"1360:5:16"},{"AST":{"nodeType":"YulBlock","src":"1408:86:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1438:3:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1459:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1448:3:16"},"nodeType":"YulFunctionCall","src":"1448:14:16"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1464:10:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1443:4:16"},"nodeType":"YulFunctionCall","src":"1443:32:16"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1430:7:16"},"nodeType":"YulFunctionCall","src":"1430:46:16"},"nodeType":"YulExpressionStatement","src":"1430:46:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":1820,"isOffset":false,"isSlot":false,"src":"1464:10:16","valueSize":1},{"declaration":1861,"isOffset":false,"isSlot":false,"src":"1438:3:16","valueSize":1},{"declaration":1839,"isOffset":false,"isSlot":false,"src":"1452:5:16","valueSize":1}],"flags":["memory-safe"],"id":1868,"nodeType":"InlineAssembly","src":"1383:111:16"},{"expression":{"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"1511:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1872,"nodeType":"ExpressionStatement","src":"1511:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"1544:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1877,"nodeType":"IfStatement","src":"1540:21:16","trueBody":{"id":1876,"nodeType":"Break","src":"1556:5:16"}}]},"condition":{"hexValue":"74727565","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1879,"nodeType":"WhileStatement","src":"1329:247:16"},{"expression":{"id":1880,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"1596:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1843,"id":1881,"nodeType":"Return","src":"1589:13:16"}]}]},"documentation":{"id":1837,"nodeType":"StructuredDocumentation","src":"892:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1884,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:16","nodeType":"FunctionDefinition","parameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"value","nameLocation":"1013:5:16","nodeType":"VariableDeclaration","scope":1884,"src":"1005:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:16"},"returnParameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1884,"src":"1043:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1841,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:16"},"scope":3006,"src":"987:632:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1909,"nodeType":"Block","src":"1795:92:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"1826:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:16","trueExpression":{"hexValue":"2d","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"1872:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1902,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"1857:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7170_$","typeString":"type(library SignedMath)"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:16","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7169,"src":"1857:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1901,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"1848:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1892,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:16","typeDescriptions":{}}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:16","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:16","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1891,"id":1908,"nodeType":"Return","src":"1805:75:16"}]},"documentation":{"id":1885,"nodeType":"StructuredDocumentation","src":"1625:89:16","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1910,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:16","nodeType":"FunctionDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"value","nameLocation":"1750:5:16","nodeType":"VariableDeclaration","scope":1910,"src":"1743:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1886,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:16"},"returnParameters":{"id":1891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1910,"src":"1780:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1889,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:16"},"scope":3006,"src":"1719:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1929,"nodeType":"Block","src":"2066:100:16","statements":[{"id":1928,"nodeType":"UncheckedBlock","src":"2076:84:16","statements":[{"expression":{"arguments":[{"id":1919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"2119:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"2138:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1920,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"2126:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5261_$","typeString":"type(library Math)"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:16","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5204,"src":"2126:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1918,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1930,2013,2033],"referencedDeclaration":2013,"src":"2107:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1917,"id":1927,"nodeType":"Return","src":"2100:49:16"}]}]},"documentation":{"id":1911,"nodeType":"StructuredDocumentation","src":"1893:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1930,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:16","nodeType":"FunctionDefinition","parameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"value","nameLocation":"2021:5:16","nodeType":"VariableDeclaration","scope":1930,"src":"2013:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1912,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:16"},"returnParameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1930,"src":"2051:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1915,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:16"},"scope":3006,"src":"1992:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2012,"nodeType":"Block","src":"2379:435:16","statements":[{"assignments":[1941],"declarations":[{"constant":false,"id":1941,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:16","nodeType":"VariableDeclaration","scope":2012,"src":"2389:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1943,"initialValue":{"id":1942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"2410:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:16"},{"assignments":[1945],"declarations":[{"constant":false,"id":1945,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:16","nodeType":"VariableDeclaration","scope":2012,"src":"2425:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1944,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1954,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1949,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"2461:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1946,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:16"},{"expression":{"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1955,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"2482:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1957,"indexExpression":{"hexValue":"30","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1960,"nodeType":"ExpressionStatement","src":"2482:15:16"},{"expression":{"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1961,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"2507:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1963,"indexExpression":{"hexValue":"31","id":1962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1966,"nodeType":"ExpressionStatement","src":"2507:15:16"},{"body":{"id":1995,"nodeType":"Block","src":"2577:95:16","statements":[{"expression":{"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1981,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"2591:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1983,"indexExpression":{"id":1982,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"2598:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1984,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2603:10:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1988,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1985,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"2614:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1990,"nodeType":"ExpressionStatement","src":"2591:40:16"},{"expression":{"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1991,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"2645:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1994,"nodeType":"ExpressionStatement","src":"2645:16:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1975,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"2565:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1996,"initializationExpression":{"assignments":[1968],"declarations":[{"constant":false,"id":1968,"mutability":"mutable","name":"i","nameLocation":"2545:1:16","nodeType":"VariableDeclaration","scope":1996,"src":"2537:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1974,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1970,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"2553:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:16"},"loopExpression":{"expression":{"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:16","subExpression":{"id":1978,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"2574:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1980,"nodeType":"ExpressionStatement","src":"2572:3:16"},"nodeType":"ForStatement","src":"2532:140:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1997,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"2685:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2006,"nodeType":"IfStatement","src":"2681:96:16","trueBody":{"id":2005,"nodeType":"Block","src":"2702:75:16","statements":[{"errorCall":{"arguments":[{"id":2001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"2752:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2002,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"2759:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2000,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"2723:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2004,"nodeType":"RevertStatement","src":"2716:50:16"}]}},{"expression":{"arguments":[{"id":2009,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"2800:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2007,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:16","typeDescriptions":{}}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1939,"id":2011,"nodeType":"Return","src":"2786:21:16"}]},"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"2172:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2013,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:16","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"value","nameLocation":"2318:5:16","nodeType":"VariableDeclaration","scope":2013,"src":"2310:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"length","nameLocation":"2333:6:16","nodeType":"VariableDeclaration","scope":2013,"src":"2325:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:16"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2013,"src":"2364:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1937,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:16"},"scope":3006,"src":"2289:525:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2032,"nodeType":"Block","src":"3046:75:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2026,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"3091:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2024,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:16","typeDescriptions":{}}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:16","typeDescriptions":{}}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2029,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"3099:14:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2021,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1930,2013,2033],"referencedDeclaration":2013,"src":"3063:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2020,"id":2031,"nodeType":"Return","src":"3056:58:16"}]},"documentation":{"id":2014,"nodeType":"StructuredDocumentation","src":"2820:148:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2033,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:16","nodeType":"FunctionDefinition","parameters":{"id":2017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2016,"mutability":"mutable","name":"addr","nameLocation":"3002:4:16","nodeType":"VariableDeclaration","scope":2033,"src":"2994:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2015,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:16"},"returnParameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2033,"src":"3031:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2018,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:16"},"scope":3006,"src":"2973:148:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2097,"nodeType":"Block","src":"3378:642:16","statements":[{"assignments":[2042],"declarations":[{"constant":false,"id":2042,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:16","nodeType":"VariableDeclaration","scope":2097,"src":"3388:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2041,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2049,"initialValue":{"arguments":[{"arguments":[{"id":2046,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"3428:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2045,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1930,2013,2033],"referencedDeclaration":2033,"src":"3416:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2043,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:16","typeDescriptions":{}}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:16"},{"assignments":[2051],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:16","nodeType":"VariableDeclaration","scope":2097,"src":"3519:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2052,"nodeType":"VariableDeclarationStatement","src":"3519:17:16"},{"AST":{"nodeType":"YulBlock","src":"3571:78:16","statements":[{"nodeType":"YulAssignment","src":"3585:54:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:2:16","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3620:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3628:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:16"},"nodeType":"YulFunctionCall","src":"3616:17:16"},{"kind":"number","nodeType":"YulLiteral","src":"3635:2:16","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3606:9:16"},"nodeType":"YulFunctionCall","src":"3606:32:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3598:3:16"},"nodeType":"YulFunctionCall","src":"3598:41:16"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3585:9:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2042,"isOffset":false,"isSlot":false,"src":"3620:6:16","valueSize":1},{"declaration":2051,"isOffset":false,"isSlot":false,"src":"3585:9:16","valueSize":1}],"flags":["memory-safe"],"id":2053,"nodeType":"InlineAssembly","src":"3546:103:16"},{"body":{"id":2090,"nodeType":"Block","src":"3692:291:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2064,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"3798:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2071,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"3827:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2073,"indexExpression":{"id":2072,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"3834:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2069,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:16","typeDescriptions":{}}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2085,"nodeType":"IfStatement","src":"3794:150:16","trueBody":{"id":2084,"nodeType":"Block","src":"3844:100:16","statements":[{"expression":{"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2078,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"3912:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2080,"indexExpression":{"id":2079,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"3919:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2083,"nodeType":"ExpressionStatement","src":"3912:17:16"}]}},{"expression":{"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2086,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"3957:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2089,"nodeType":"ExpressionStatement","src":"3957:15:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2058,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"3680:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2091,"initializationExpression":{"assignments":[2055],"declarations":[{"constant":false,"id":2055,"mutability":"mutable","name":"i","nameLocation":"3672:1:16","nodeType":"VariableDeclaration","scope":2091,"src":"3664:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2054,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2057,"initialValue":{"hexValue":"3431","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:16","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:16"},"loopExpression":{"expression":{"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:16","subExpression":{"id":2061,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"3689:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2063,"nodeType":"ExpressionStatement","src":"3687:3:16"},"nodeType":"ForStatement","src":"3659:324:16"},{"expression":{"arguments":[{"id":2094,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"4006:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2092,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:16","typeDescriptions":{}}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2040,"id":2096,"nodeType":"Return","src":"3992:21:16"}]},"documentation":{"id":2034,"nodeType":"StructuredDocumentation","src":"3127:165:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2098,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:16","nodeType":"FunctionDefinition","parameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"addr","nameLocation":"3334:4:16","nodeType":"VariableDeclaration","scope":2098,"src":"3326:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2035,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:16"},"returnParameters":{"id":2040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2098,"src":"3363:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2038,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:16"},"scope":3006,"src":"3297:723:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2134,"nodeType":"Block","src":"4175:104:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2110,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"4198:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2108,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:16","typeDescriptions":{}}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:16","memberName":"length","nodeType":"MemberAccess","src":"4192:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2115,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"4217:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2113,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:16","typeDescriptions":{}}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:16","memberName":"length","nodeType":"MemberAccess","src":"4211:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2122,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"4246:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2120,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:16","typeDescriptions":{}}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2119,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2128,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"4269:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2126,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:16","typeDescriptions":{}}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2125,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2107,"id":2133,"nodeType":"Return","src":"4185:87:16"}]},"documentation":{"id":2099,"nodeType":"StructuredDocumentation","src":"4026:66:16","text":" @dev Returns true if the two strings are equal."},"id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:16","nodeType":"FunctionDefinition","parameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"a","nameLocation":"4126:1:16","nodeType":"VariableDeclaration","scope":2135,"src":"4112:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2100,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2103,"mutability":"mutable","name":"b","nameLocation":"4143:1:16","nodeType":"VariableDeclaration","scope":2135,"src":"4129:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2102,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:16"},"returnParameters":{"id":2107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"4169:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2105,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:16"},"scope":3006,"src":"4097:182:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2153,"nodeType":"Block","src":"4576:64:16","statements":[{"expression":{"arguments":[{"id":2144,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"4603:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2148,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"4619:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2146,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:16","typeDescriptions":{}}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:16","memberName":"length","nodeType":"MemberAccess","src":"4613:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2143,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2154,2185],"referencedDeclaration":2185,"src":"4593:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2142,"id":2152,"nodeType":"Return","src":"4586:47:16"}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"4285:214:16","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2154,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:16","nodeType":"FunctionDefinition","parameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"input","nameLocation":"4537:5:16","nodeType":"VariableDeclaration","scope":2154,"src":"4523:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2137,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:16"},"returnParameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2154,"src":"4567:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2140,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:16"},"scope":3006,"src":"4504:136:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2184,"nodeType":"Block","src":"5038:153:16","statements":[{"assignments":[2167,2169],"declarations":[{"constant":false,"id":2167,"mutability":"mutable","name":"success","nameLocation":"5054:7:16","nodeType":"VariableDeclaration","scope":2184,"src":"5049:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2166,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2169,"mutability":"mutable","name":"value","nameLocation":"5071:5:16","nodeType":"VariableDeclaration","scope":2184,"src":"5063:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2175,"initialValue":{"arguments":[{"id":2171,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"5093:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2172,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"5100:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2173,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"5107:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2170,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2206,2243],"referencedDeclaration":2243,"src":"5080:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:16"},{"condition":{"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:16","subExpression":{"id":2176,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"5126:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2181,"nodeType":"IfStatement","src":"5121:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2178,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"5142:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2180,"nodeType":"RevertStatement","src":"5135:27:16"}},{"expression":{"id":2182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"5179:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2165,"id":2183,"nodeType":"Return","src":"5172:12:16"}]},"documentation":{"id":2155,"nodeType":"StructuredDocumentation","src":"4646:287:16","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2185,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:16","nodeType":"FunctionDefinition","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"input","nameLocation":"4971:5:16","nodeType":"VariableDeclaration","scope":2185,"src":"4957:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2156,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2159,"mutability":"mutable","name":"begin","nameLocation":"4986:5:16","nodeType":"VariableDeclaration","scope":2185,"src":"4978:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2161,"mutability":"mutable","name":"end","nameLocation":"5001:3:16","nodeType":"VariableDeclaration","scope":2185,"src":"4993:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:16"},"returnParameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2185,"src":"5029:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:16"},"scope":3006,"src":"4938:253:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2205,"nodeType":"Block","src":"5512:83:16","statements":[{"expression":{"arguments":[{"id":2196,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"5558:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2200,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"5574:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2198,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:16","typeDescriptions":{}}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:16","memberName":"length","nodeType":"MemberAccess","src":"5568:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2195,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"5529:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2194,"id":2204,"nodeType":"Return","src":"5522:66:16"}]},"documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"5197:215:16","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2206,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:16","nodeType":"FunctionDefinition","parameters":{"id":2189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"input","nameLocation":"5453:5:16","nodeType":"VariableDeclaration","scope":2206,"src":"5439:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2187,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:16"},"returnParameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2191,"mutability":"mutable","name":"success","nameLocation":"5488:7:16","nodeType":"VariableDeclaration","scope":2206,"src":"5483:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2190,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2193,"mutability":"mutable","name":"value","nameLocation":"5505:5:16","nodeType":"VariableDeclaration","scope":2206,"src":"5497:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:16"},"scope":3006,"src":"5417:178:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2242,"nodeType":"Block","src":"5997:144:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2220,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"6011:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2223,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"6023:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2221,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:16","typeDescriptions":{}}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:16","memberName":"length","nodeType":"MemberAccess","src":"6017:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2227,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"6040:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2228,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"6048:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2235,"nodeType":"IfStatement","src":"6007:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2233,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2219,"id":2234,"nodeType":"Return","src":"6053:17:16"}},{"expression":{"arguments":[{"id":2237,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"6116:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2238,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"6123:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2239,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"6130:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2236,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"6087:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2219,"id":2241,"nodeType":"Return","src":"6080:54:16"}]},"documentation":{"id":2207,"nodeType":"StructuredDocumentation","src":"5601:238:16","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2243,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:16","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"input","nameLocation":"5889:5:16","nodeType":"VariableDeclaration","scope":2243,"src":"5875:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2208,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"begin","nameLocation":"5912:5:16","nodeType":"VariableDeclaration","scope":2243,"src":"5904:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2210,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2213,"mutability":"mutable","name":"end","nameLocation":"5935:3:16","nodeType":"VariableDeclaration","scope":2243,"src":"5927:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:16"},"returnParameters":{"id":2219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"success","nameLocation":"5973:7:16","nodeType":"VariableDeclaration","scope":2243,"src":"5968:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2215,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2218,"mutability":"mutable","name":"value","nameLocation":"5990:5:16","nodeType":"VariableDeclaration","scope":2243,"src":"5982:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2217,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:16"},"scope":3006,"src":"5844:297:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2312,"nodeType":"Block","src":"6521:347:16","statements":[{"assignments":[2258],"declarations":[{"constant":false,"id":2258,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:16","nodeType":"VariableDeclaration","scope":2312,"src":"6531:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2257,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2263,"initialValue":{"arguments":[{"id":2261,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"6559:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2259,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:16","typeDescriptions":{}}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:16"},{"assignments":[2265],"declarations":[{"constant":false,"id":2265,"mutability":"mutable","name":"result","nameLocation":"6584:6:16","nodeType":"VariableDeclaration","scope":2312,"src":"6576:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2264,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2267,"initialValue":{"hexValue":"30","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:16"},{"body":{"id":2306,"nodeType":"Block","src":"6642:189:16","statements":[{"assignments":[2279],"declarations":[{"constant":false,"id":2279,"mutability":"mutable","name":"chr","nameLocation":"6662:3:16","nodeType":"VariableDeclaration","scope":2306,"src":"6656:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2278,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2289,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2284,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"6711:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2285,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"6719:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2283,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"6688:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2281,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:16","typeDescriptions":{}}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2280,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"6668:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2290,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"6741:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2297,"nodeType":"IfStatement","src":"6737:30:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2256,"id":2296,"nodeType":"Return","src":"6750:17:16"}},{"expression":{"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"6781:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2301,"nodeType":"ExpressionStatement","src":"6781:12:16"},{"expression":{"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2302,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"6807:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2303,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"6817:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2305,"nodeType":"ExpressionStatement","src":"6807:13:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2272,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"6628:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2273,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"6632:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2307,"initializationExpression":{"assignments":[2269],"declarations":[{"constant":false,"id":2269,"mutability":"mutable","name":"i","nameLocation":"6617:1:16","nodeType":"VariableDeclaration","scope":2307,"src":"6609:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2268,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2271,"initialValue":{"id":2270,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"6621:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:16"},"loopExpression":{"expression":{"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:16","subExpression":{"id":2275,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"6639:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2277,"nodeType":"ExpressionStatement","src":"6637:3:16"},"nodeType":"ForStatement","src":"6604:227:16"},{"expression":{"components":[{"hexValue":"74727565","id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2309,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"6854:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2256,"id":2311,"nodeType":"Return","src":"6840:21:16"}]},"documentation":{"id":2244,"nodeType":"StructuredDocumentation","src":"6147:201:16","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2313,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:16","nodeType":"FunctionDefinition","parameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"input","nameLocation":"6414:5:16","nodeType":"VariableDeclaration","scope":2313,"src":"6400:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2245,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2248,"mutability":"mutable","name":"begin","nameLocation":"6437:5:16","nodeType":"VariableDeclaration","scope":2313,"src":"6429:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"end","nameLocation":"6460:3:16","nodeType":"VariableDeclaration","scope":2313,"src":"6452:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:16"},"returnParameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"success","nameLocation":"6497:7:16","nodeType":"VariableDeclaration","scope":2313,"src":"6492:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2252,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"value","nameLocation":"6514:5:16","nodeType":"VariableDeclaration","scope":2313,"src":"6506:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2254,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:16"},"scope":3006,"src":"6353:515:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2331,"nodeType":"Block","src":"7165:63:16","statements":[{"expression":{"arguments":[{"id":2322,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"7191:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2326,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"7207:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2324,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:16","typeDescriptions":{}}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:16","memberName":"length","nodeType":"MemberAccess","src":"7201:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2321,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2332,2363],"referencedDeclaration":2363,"src":"7182:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2320,"id":2330,"nodeType":"Return","src":"7175:46:16"}]},"documentation":{"id":2314,"nodeType":"StructuredDocumentation","src":"6874:216:16","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2332,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:16","nodeType":"FunctionDefinition","parameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"input","nameLocation":"7127:5:16","nodeType":"VariableDeclaration","scope":2332,"src":"7113:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2315,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:16"},"returnParameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2332,"src":"7157:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2318,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:16"},"scope":3006,"src":"7095:133:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2362,"nodeType":"Block","src":"7633:151:16","statements":[{"assignments":[2345,2347],"declarations":[{"constant":false,"id":2345,"mutability":"mutable","name":"success","nameLocation":"7649:7:16","nodeType":"VariableDeclaration","scope":2362,"src":"7644:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2344,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2347,"mutability":"mutable","name":"value","nameLocation":"7665:5:16","nodeType":"VariableDeclaration","scope":2362,"src":"7658:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2346,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2353,"initialValue":{"arguments":[{"id":2349,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"7686:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2350,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"7693:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2351,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"7700:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2348,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2384,2426],"referencedDeclaration":2426,"src":"7674:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:16"},{"condition":{"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:16","subExpression":{"id":2354,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"7719:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2359,"nodeType":"IfStatement","src":"7714:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2356,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7735:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2358,"nodeType":"RevertStatement","src":"7728:27:16"}},{"expression":{"id":2360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"7772:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2343,"id":2361,"nodeType":"Return","src":"7765:12:16"}]},"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"7234:296:16","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2363,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:16","nodeType":"FunctionDefinition","parameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"input","nameLocation":"7567:5:16","nodeType":"VariableDeclaration","scope":2363,"src":"7553:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2334,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"begin","nameLocation":"7582:5:16","nodeType":"VariableDeclaration","scope":2363,"src":"7574:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"end","nameLocation":"7597:3:16","nodeType":"VariableDeclaration","scope":2363,"src":"7589:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2338,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:16"},"returnParameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2363,"src":"7625:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2341,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:16"},"scope":3006,"src":"7535:249:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2383,"nodeType":"Block","src":"8175:82:16","statements":[{"expression":{"arguments":[{"id":2374,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"8220:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2378,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"8236:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2376,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:16","typeDescriptions":{}}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:16","memberName":"length","nodeType":"MemberAccess","src":"8230:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2373,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"8192:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2372,"id":2382,"nodeType":"Return","src":"8185:65:16"}]},"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"7790:287:16","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2384,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:16","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"input","nameLocation":"8117:5:16","nodeType":"VariableDeclaration","scope":2384,"src":"8103:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2365,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:16"},"returnParameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"success","nameLocation":"8152:7:16","nodeType":"VariableDeclaration","scope":2384,"src":"8147:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2368,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"value","nameLocation":"8168:5:16","nodeType":"VariableDeclaration","scope":2384,"src":"8161:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2370,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:16"},"scope":3006,"src":"8082:175:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2389,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:16","nodeType":"VariableDeclaration","scope":3006,"src":"8263:50:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2385,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2425,"nodeType":"Block","src":"8779:143:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2403,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"8793:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2406,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"8805:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2404,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:16","typeDescriptions":{}}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:16","memberName":"length","nodeType":"MemberAccess","src":"8799:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"8822:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2411,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"8830:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2418,"nodeType":"IfStatement","src":"8789:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2402,"id":2417,"nodeType":"Return","src":"8835:17:16"}},{"expression":{"arguments":[{"id":2420,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"8897:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2421,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"8904:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2422,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"8911:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2419,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"8869:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2402,"id":2424,"nodeType":"Return","src":"8862:53:16"}]},"documentation":{"id":2390,"nodeType":"StructuredDocumentation","src":"8320:303:16","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2426,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:16","nodeType":"FunctionDefinition","parameters":{"id":2397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"input","nameLocation":"8672:5:16","nodeType":"VariableDeclaration","scope":2426,"src":"8658:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2391,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2394,"mutability":"mutable","name":"begin","nameLocation":"8695:5:16","nodeType":"VariableDeclaration","scope":2426,"src":"8687:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2396,"mutability":"mutable","name":"end","nameLocation":"8718:3:16","nodeType":"VariableDeclaration","scope":2426,"src":"8710:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:16"},"returnParameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2399,"mutability":"mutable","name":"success","nameLocation":"8756:7:16","nodeType":"VariableDeclaration","scope":2426,"src":"8751:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2398,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2401,"mutability":"mutable","name":"value","nameLocation":"8772:5:16","nodeType":"VariableDeclaration","scope":2426,"src":"8765:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2400,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:16"},"scope":3006,"src":"8628:294:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2546,"nodeType":"Block","src":"9299:812:16","statements":[{"assignments":[2441],"declarations":[{"constant":false,"id":2441,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:16","nodeType":"VariableDeclaration","scope":2546,"src":"9309:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2440,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2446,"initialValue":{"arguments":[{"id":2444,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"9337:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2442,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:16","typeDescriptions":{}}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:16"},{"assignments":[2448],"declarations":[{"constant":false,"id":2448,"mutability":"mutable","name":"sign","nameLocation":"9407:4:16","nodeType":"VariableDeclaration","scope":2546,"src":"9400:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2447,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2464,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2449,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"9414:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2450,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"9423:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2459,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"9471:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2460,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"9479:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2458,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"9448:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2456,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:16","typeDescriptions":{}}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:16","trueExpression":{"arguments":[{"hexValue":"30","id":2454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2452,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:16","typeDescriptions":{}}},"id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:16"},{"assignments":[2466],"declarations":[{"constant":false,"id":2466,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:16","nodeType":"VariableDeclaration","scope":2546,"src":"9567:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2465,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2473,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2467,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"9587:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2468,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:16","typeDescriptions":{}}},"id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:16"},{"assignments":[2475],"declarations":[{"constant":false,"id":2475,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:16","nodeType":"VariableDeclaration","scope":2546,"src":"9616:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2474,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2482,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2476,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"9636:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2477,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:16","typeDescriptions":{}}},"id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:16"},{"assignments":[2484],"declarations":[{"constant":false,"id":2484,"mutability":"mutable","name":"offset","nameLocation":"9673:6:16","nodeType":"VariableDeclaration","scope":2546,"src":"9665:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2483,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2491,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2485,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"9683:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2486,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"9699:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"9682:37:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:16"},{"assignments":[2493,2495],"declarations":[{"constant":false,"id":2493,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:16","nodeType":"VariableDeclaration","scope":2546,"src":"9733:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2492,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:16","nodeType":"VariableDeclaration","scope":2546,"src":"9750:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2503,"initialValue":{"arguments":[{"id":2497,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"9783:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2498,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"9790:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2499,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"9798:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2501,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"9806:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2496,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2206,2243],"referencedDeclaration":2243,"src":"9770:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2504,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"9825:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2505,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"9839:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2506,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"9850:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2524,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"9967:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2525,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"9981:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2527,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"9997:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2528,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"10009:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2542,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2439,"id":2543,"nodeType":"Return","src":"10087:17:16"},"id":2544,"nodeType":"IfStatement","src":"9963:141:16","trueBody":{"id":2539,"nodeType":"Block","src":"10025:56:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2533,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2532,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:16","memberName":"min","nodeType":"MemberAccess","src":"10053:16:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2439,"id":2538,"nodeType":"Return","src":"10039:31:16"}]}},"id":2545,"nodeType":"IfStatement","src":"9821:283:16","trueBody":{"id":2523,"nodeType":"Block","src":"9866:91:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2510,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"9894:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2518,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"9936:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2516,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:16","typeDescriptions":{}}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:16","trueExpression":{"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:16","subExpression":{"arguments":[{"id":2513,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"9917:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2511,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:16","typeDescriptions":{}}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2521,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2439,"id":2522,"nodeType":"Return","src":"9880:66:16"}]}}]},"documentation":{"id":2427,"nodeType":"StructuredDocumentation","src":"8928:200:16","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2547,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:16","nodeType":"FunctionDefinition","parameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2429,"mutability":"mutable","name":"input","nameLocation":"9193:5:16","nodeType":"VariableDeclaration","scope":2547,"src":"9179:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2428,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2431,"mutability":"mutable","name":"begin","nameLocation":"9216:5:16","nodeType":"VariableDeclaration","scope":2547,"src":"9208:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2430,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"end","nameLocation":"9239:3:16","nodeType":"VariableDeclaration","scope":2547,"src":"9231:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:16"},"returnParameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"success","nameLocation":"9276:7:16","nodeType":"VariableDeclaration","scope":2547,"src":"9271:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2435,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2438,"mutability":"mutable","name":"value","nameLocation":"9292:5:16","nodeType":"VariableDeclaration","scope":2547,"src":"9285:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2437,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:16"},"scope":3006,"src":"9133:978:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2565,"nodeType":"Block","src":"10456:67:16","statements":[{"expression":{"arguments":[{"id":2556,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"10486:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2560,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"10502:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2558,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:16","typeDescriptions":{}}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:16","memberName":"length","nodeType":"MemberAccess","src":"10496:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2555,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2566,2597],"referencedDeclaration":2597,"src":"10473:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2554,"id":2564,"nodeType":"Return","src":"10466:50:16"}]},"documentation":{"id":2548,"nodeType":"StructuredDocumentation","src":"10117:259:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2566,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:16","nodeType":"FunctionDefinition","parameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"input","nameLocation":"10417:5:16","nodeType":"VariableDeclaration","scope":2566,"src":"10403:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2549,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:16"},"returnParameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2566,"src":"10447:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:16"},"scope":3006,"src":"10381:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2596,"nodeType":"Block","src":"10937:156:16","statements":[{"assignments":[2579,2581],"declarations":[{"constant":false,"id":2579,"mutability":"mutable","name":"success","nameLocation":"10953:7:16","nodeType":"VariableDeclaration","scope":2596,"src":"10948:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2578,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2581,"mutability":"mutable","name":"value","nameLocation":"10970:5:16","nodeType":"VariableDeclaration","scope":2596,"src":"10962:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2587,"initialValue":{"arguments":[{"id":2583,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"10995:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2584,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"11002:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2585,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"11009:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2582,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2618,2655],"referencedDeclaration":2655,"src":"10979:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:16"},{"condition":{"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:16","subExpression":{"id":2588,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"11028:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2593,"nodeType":"IfStatement","src":"11023:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2590,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"11044:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2592,"nodeType":"RevertStatement","src":"11037:27:16"}},{"expression":{"id":2594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"11081:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2577,"id":2595,"nodeType":"Return","src":"11074:12:16"}]},"documentation":{"id":2567,"nodeType":"StructuredDocumentation","src":"10529:300:16","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:16","nodeType":"FunctionDefinition","parameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"input","nameLocation":"10870:5:16","nodeType":"VariableDeclaration","scope":2597,"src":"10856:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2568,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2571,"mutability":"mutable","name":"begin","nameLocation":"10885:5:16","nodeType":"VariableDeclaration","scope":2597,"src":"10877:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2573,"mutability":"mutable","name":"end","nameLocation":"10900:3:16","nodeType":"VariableDeclaration","scope":2597,"src":"10892:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:16"},"returnParameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2597,"src":"10928:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:16"},"scope":3006,"src":"10834:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2617,"nodeType":"Block","src":"11420:86:16","statements":[{"expression":{"arguments":[{"id":2608,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"11469:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2612,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"11485:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2610,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:16","typeDescriptions":{}}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:16","memberName":"length","nodeType":"MemberAccess","src":"11479:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2607,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"11437:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2606,"id":2616,"nodeType":"Return","src":"11430:69:16"}]},"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"11099:218:16","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2618,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:16","nodeType":"FunctionDefinition","parameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"input","nameLocation":"11361:5:16","nodeType":"VariableDeclaration","scope":2618,"src":"11347:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2599,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:16"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"success","nameLocation":"11396:7:16","nodeType":"VariableDeclaration","scope":2618,"src":"11391:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2602,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2605,"mutability":"mutable","name":"value","nameLocation":"11413:5:16","nodeType":"VariableDeclaration","scope":2618,"src":"11405:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:16"},"scope":3006,"src":"11322:184:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2654,"nodeType":"Block","src":"11914:147:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2632,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"11928:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2635,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"11940:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2633,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:16","typeDescriptions":{}}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:16","memberName":"length","nodeType":"MemberAccess","src":"11934:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2639,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"11957:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2640,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"11965:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2647,"nodeType":"IfStatement","src":"11924:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2645,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2631,"id":2646,"nodeType":"Return","src":"11970:17:16"}},{"expression":{"arguments":[{"id":2649,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"12036:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2650,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"12043:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2651,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"12050:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2648,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"12004:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2631,"id":2653,"nodeType":"Return","src":"11997:57:16"}]},"documentation":{"id":2619,"nodeType":"StructuredDocumentation","src":"11512:241:16","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2655,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:16","nodeType":"FunctionDefinition","parameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"input","nameLocation":"11806:5:16","nodeType":"VariableDeclaration","scope":2655,"src":"11792:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2620,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2623,"mutability":"mutable","name":"begin","nameLocation":"11829:5:16","nodeType":"VariableDeclaration","scope":2655,"src":"11821:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"end","nameLocation":"11852:3:16","nodeType":"VariableDeclaration","scope":2655,"src":"11844:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:16"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"success","nameLocation":"11890:7:16","nodeType":"VariableDeclaration","scope":2655,"src":"11885:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2627,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2630,"mutability":"mutable","name":"value","nameLocation":"11907:5:16","nodeType":"VariableDeclaration","scope":2655,"src":"11899:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2629,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:16"},"scope":3006,"src":"11758:303:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2757,"nodeType":"Block","src":"12447:880:16","statements":[{"assignments":[2670],"declarations":[{"constant":false,"id":2670,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:16","nodeType":"VariableDeclaration","scope":2757,"src":"12457:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2669,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2675,"initialValue":{"arguments":[{"id":2673,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"12485:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2671,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:16","typeDescriptions":{}}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:16"},{"assignments":[2677],"declarations":[{"constant":false,"id":2677,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:16","nodeType":"VariableDeclaration","scope":2757,"src":"12539:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2676,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2697,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2678,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"12557:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2679,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"12563:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2687,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"12607:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2688,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"12615:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2686,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"12584:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2684,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:16","typeDescriptions":{}}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2691,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:16","typeDescriptions":{}}},"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:16"},{"assignments":[2699],"declarations":[{"constant":false,"id":2699,"mutability":"mutable","name":"offset","nameLocation":"12727:6:16","nodeType":"VariableDeclaration","scope":2757,"src":"12719:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2698,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2705,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2700,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"12736:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"12736:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:16"},{"assignments":[2707],"declarations":[{"constant":false,"id":2707,"mutability":"mutable","name":"result","nameLocation":"12777:6:16","nodeType":"VariableDeclaration","scope":2757,"src":"12769:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2709,"initialValue":{"hexValue":"30","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:16"},{"body":{"id":2751,"nodeType":"Block","src":"12844:446:16","statements":[{"assignments":[2723],"declarations":[{"constant":false,"id":2723,"mutability":"mutable","name":"chr","nameLocation":"12864:3:16","nodeType":"VariableDeclaration","scope":2751,"src":"12858:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2722,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2733,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2728,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"12913:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2729,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"12921:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2727,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"12890:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2725,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:16","typeDescriptions":{}}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2724,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"12870:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2734,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"12943:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2741,"nodeType":"IfStatement","src":"12939:31:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2668,"id":2740,"nodeType":"Return","src":"12953:17:16"}},{"expression":{"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2742,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"12984:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2745,"nodeType":"ExpressionStatement","src":"12984:12:16"},{"id":2750,"nodeType":"UncheckedBlock","src":"13010:270:16","statements":[{"expression":{"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2746,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"13252:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2747,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"13262:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2749,"nodeType":"ExpressionStatement","src":"13252:13:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2716,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"12830:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2717,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"12834:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2752,"initializationExpression":{"assignments":[2711],"declarations":[{"constant":false,"id":2711,"mutability":"mutable","name":"i","nameLocation":"12810:1:16","nodeType":"VariableDeclaration","scope":2752,"src":"12802:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2715,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2712,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"12814:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2713,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"12822:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:16"},"loopExpression":{"expression":{"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:16","subExpression":{"id":2719,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"12841:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2721,"nodeType":"ExpressionStatement","src":"12839:3:16"},"nodeType":"ForStatement","src":"12797:493:16"},{"expression":{"components":[{"hexValue":"74727565","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2754,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"13313:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2668,"id":2756,"nodeType":"Return","src":"13299:21:16"}]},"documentation":{"id":2656,"nodeType":"StructuredDocumentation","src":"12067:204:16","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2758,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:16","nodeType":"FunctionDefinition","parameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2658,"mutability":"mutable","name":"input","nameLocation":"12340:5:16","nodeType":"VariableDeclaration","scope":2758,"src":"12326:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2657,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2660,"mutability":"mutable","name":"begin","nameLocation":"12363:5:16","nodeType":"VariableDeclaration","scope":2758,"src":"12355:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2662,"mutability":"mutable","name":"end","nameLocation":"12386:3:16","nodeType":"VariableDeclaration","scope":2758,"src":"12378:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:16"},"returnParameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"success","nameLocation":"12423:7:16","nodeType":"VariableDeclaration","scope":2758,"src":"12418:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2664,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2667,"mutability":"mutable","name":"value","nameLocation":"12440:5:16","nodeType":"VariableDeclaration","scope":2758,"src":"12432:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:16"},"scope":3006,"src":"12276:1051:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2776,"nodeType":"Block","src":"13625:67:16","statements":[{"expression":{"arguments":[{"id":2767,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"13655:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2771,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"13671:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2769,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:16","typeDescriptions":{}}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:16","memberName":"length","nodeType":"MemberAccess","src":"13665:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2766,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2777,2808],"referencedDeclaration":2808,"src":"13642:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2765,"id":2775,"nodeType":"Return","src":"13635:50:16"}]},"documentation":{"id":2759,"nodeType":"StructuredDocumentation","src":"13333:212:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2777,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:16","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"input","nameLocation":"13586:5:16","nodeType":"VariableDeclaration","scope":2777,"src":"13572:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2760,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:16"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2777,"src":"13616:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2763,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:16"},"scope":3006,"src":"13550:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2807,"nodeType":"Block","src":"14058:165:16","statements":[{"assignments":[2790,2792],"declarations":[{"constant":false,"id":2790,"mutability":"mutable","name":"success","nameLocation":"14074:7:16","nodeType":"VariableDeclaration","scope":2807,"src":"14069:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2789,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2792,"mutability":"mutable","name":"value","nameLocation":"14091:5:16","nodeType":"VariableDeclaration","scope":2807,"src":"14083:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2791,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2798,"initialValue":{"arguments":[{"id":2794,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"14116:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2795,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"14123:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2796,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"14130:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2793,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2829,2933],"referencedDeclaration":2933,"src":"14100:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:16"},{"condition":{"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:16","subExpression":{"id":2799,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"14149:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2804,"nodeType":"IfStatement","src":"14144:50:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2801,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"14165:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2803,"nodeType":"RevertStatement","src":"14158:36:16"}},{"expression":{"id":2805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"14211:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2788,"id":2806,"nodeType":"Return","src":"14204:12:16"}]},"documentation":{"id":2778,"nodeType":"StructuredDocumentation","src":"13698:252:16","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2808,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:16","nodeType":"FunctionDefinition","parameters":{"id":2785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2780,"mutability":"mutable","name":"input","nameLocation":"13991:5:16","nodeType":"VariableDeclaration","scope":2808,"src":"13977:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2779,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2782,"mutability":"mutable","name":"begin","nameLocation":"14006:5:16","nodeType":"VariableDeclaration","scope":2808,"src":"13998:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2781,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2784,"mutability":"mutable","name":"end","nameLocation":"14021:3:16","nodeType":"VariableDeclaration","scope":2808,"src":"14013:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2783,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:16"},"returnParameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2808,"src":"14049:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2786,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:16"},"scope":3006,"src":"13955:268:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2828,"nodeType":"Block","src":"14523:70:16","statements":[{"expression":{"arguments":[{"id":2819,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"14556:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2823,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"14572:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2821,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:16","typeDescriptions":{}}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:16","memberName":"length","nodeType":"MemberAccess","src":"14566:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2818,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2829,2933],"referencedDeclaration":2933,"src":"14540:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2817,"id":2827,"nodeType":"Return","src":"14533:53:16"}]},"documentation":{"id":2809,"nodeType":"StructuredDocumentation","src":"14229:191:16","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":2829,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:16","nodeType":"FunctionDefinition","parameters":{"id":2812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"input","nameLocation":"14464:5:16","nodeType":"VariableDeclaration","scope":2829,"src":"14450:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2810,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:16"},"returnParameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2814,"mutability":"mutable","name":"success","nameLocation":"14499:7:16","nodeType":"VariableDeclaration","scope":2829,"src":"14494:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2813,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2816,"mutability":"mutable","name":"value","nameLocation":"14516:5:16","nodeType":"VariableDeclaration","scope":2829,"src":"14508:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2815,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:16"},"scope":3006,"src":"14425:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2932,"nodeType":"Block","src":"14963:733:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2843,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"14977:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2846,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"14989:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2844,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:16","typeDescriptions":{}}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:16","memberName":"length","nodeType":"MemberAccess","src":"14983:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2850,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"15006:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2851,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"15014:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2861,"nodeType":"IfStatement","src":"14973:72:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2855,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:16","typeDescriptions":{}}},"id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2842,"id":2860,"nodeType":"Return","src":"15019:26:16"}},{"assignments":[2863],"declarations":[{"constant":false,"id":2863,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:16","nodeType":"VariableDeclaration","scope":2932,"src":"15056:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2862,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2886,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2864,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"15074:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2865,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"15080:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2875,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"15130:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2873,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:16","typeDescriptions":{}}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2877,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"15138:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2872,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"15101:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2870,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:16","typeDescriptions":{}}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2880,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:16","typeDescriptions":{}}},"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:16"},{"assignments":[2888],"declarations":[{"constant":false,"id":2888,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:16","nodeType":"VariableDeclaration","scope":2932,"src":"15242:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2896,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2890,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"15272:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"15272:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2897,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"15359:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2898,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"15365:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2900,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"15374:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2930,"nodeType":"Block","src":"15639:51:16","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2924,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:16","typeDescriptions":{}}},"id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2842,"id":2929,"nodeType":"Return","src":"15653:26:16"}]},"id":2931,"nodeType":"IfStatement","src":"15355:335:16","trueBody":{"id":2922,"nodeType":"Block","src":"15390:243:16","statements":[{"assignments":[2903,2905],"declarations":[{"constant":false,"id":2903,"mutability":"mutable","name":"s","nameLocation":"15511:1:16","nodeType":"VariableDeclaration","scope":2922,"src":"15506:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2902,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2905,"mutability":"mutable","name":"v","nameLocation":"15522:1:16","nodeType":"VariableDeclaration","scope":2922,"src":"15514:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2904,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2911,"initialValue":{"arguments":[{"id":2907,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"15559:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2908,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"15566:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2909,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"15573:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2906,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"15527:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:16"},{"expression":{"components":[{"id":2912,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"15599:1:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2917,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"15618:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2915,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:16","typeDescriptions":{}}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2913,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:16","typeDescriptions":{}}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2920,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2842,"id":2921,"nodeType":"Return","src":"15591:31:16"}]}}]},"documentation":{"id":2830,"nodeType":"StructuredDocumentation","src":"14599:203:16","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":2933,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:16","nodeType":"FunctionDefinition","parameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2832,"mutability":"mutable","name":"input","nameLocation":"14855:5:16","nodeType":"VariableDeclaration","scope":2933,"src":"14841:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2831,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2834,"mutability":"mutable","name":"begin","nameLocation":"14878:5:16","nodeType":"VariableDeclaration","scope":2933,"src":"14870:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2833,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2836,"mutability":"mutable","name":"end","nameLocation":"14901:3:16","nodeType":"VariableDeclaration","scope":2933,"src":"14893:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:16"},"returnParameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"success","nameLocation":"14939:7:16","nodeType":"VariableDeclaration","scope":2933,"src":"14934:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2838,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2841,"mutability":"mutable","name":"value","nameLocation":"14956:5:16","nodeType":"VariableDeclaration","scope":2933,"src":"14948:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2840,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:16"},"scope":3006,"src":"14807:889:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2992,"nodeType":"Block","src":"15765:461:16","statements":[{"assignments":[2941],"declarations":[{"constant":false,"id":2941,"mutability":"mutable","name":"value","nameLocation":"15781:5:16","nodeType":"VariableDeclaration","scope":2992,"src":"15775:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2940,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2946,"initialValue":{"arguments":[{"id":2944,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"15795:3:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2942,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:16","typeDescriptions":{}}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:16"},{"id":2989,"nodeType":"UncheckedBlock","src":"15959:238:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"15987:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:16","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"16001:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:16","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"16047:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"16061:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:16","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"16108:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"16122:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:16","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2981,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2980,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:16","memberName":"max","nodeType":"MemberAccess","src":"16171:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2939,"id":2985,"nodeType":"Return","src":"16164:22:16"},"id":2986,"nodeType":"IfStatement","src":"16104:82:16","trueBody":{"expression":{"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"16134:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:16","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2979,"nodeType":"ExpressionStatement","src":"16134:11:16"}},"id":2987,"nodeType":"IfStatement","src":"16043:143:16","trueBody":{"expression":{"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"16074:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:16","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2968,"nodeType":"ExpressionStatement","src":"16074:11:16"}},"id":2988,"nodeType":"IfStatement","src":"15983:203:16","trueBody":{"expression":{"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"16013:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2957,"nodeType":"ExpressionStatement","src":"16013:11:16"}}]},{"expression":{"id":2990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"16214:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2939,"id":2991,"nodeType":"Return","src":"16207:12:16"}]},"id":2993,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:16","nodeType":"FunctionDefinition","parameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"chr","nameLocation":"15731:3:16","nodeType":"VariableDeclaration","scope":2993,"src":"15724:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2934,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:16"},"returnParameters":{"id":2939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2993,"src":"15758:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2937,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:16"},"scope":3006,"src":"15702:524:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3004,"nodeType":"Block","src":"16611:225:16","statements":[{"AST":{"nodeType":"YulBlock","src":"16760:70:16","statements":[{"nodeType":"YulAssignment","src":"16774:46:16","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"16793:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16805:4:16","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"16811:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:16"},"nodeType":"YulFunctionCall","src":"16801:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16789:3:16"},"nodeType":"YulFunctionCall","src":"16789:30:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16783:5:16"},"nodeType":"YulFunctionCall","src":"16783:37:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16774:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2996,"isOffset":false,"isSlot":false,"src":"16793:6:16","valueSize":1},{"declaration":2998,"isOffset":false,"isSlot":false,"src":"16811:6:16","valueSize":1},{"declaration":3001,"isOffset":false,"isSlot":false,"src":"16774:5:16","valueSize":1}],"flags":["memory-safe"],"id":3003,"nodeType":"InlineAssembly","src":"16735:95:16"}]},"documentation":{"id":2994,"nodeType":"StructuredDocumentation","src":"16232:268:16","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3005,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:16","nodeType":"FunctionDefinition","parameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:16","nodeType":"VariableDeclaration","scope":3005,"src":"16537:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2995,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2998,"mutability":"mutable","name":"offset","nameLocation":"16566:6:16","nodeType":"VariableDeclaration","scope":3005,"src":"16558:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:16"},"returnParameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"value","nameLocation":"16604:5:16","nodeType":"VariableDeclaration","scope":3005,"src":"16596:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:16"},"scope":3006,"src":"16505:331:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3007,"src":"297:16541:16","usedErrors":[1830,1833,1836],"usedEvents":[]}],"src":"101:16738:16"},"id":16},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3354]},"id":3355,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3008,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3009,"nodeType":"StructuredDocumentation","src":"138:205:17","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3354,"linearizedBaseContracts":[3354],"name":"ECDSA","nameLocation":"352:5:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3014,"members":[{"id":3010,"name":"NoError","nameLocation":"392:7:17","nodeType":"EnumValue","src":"392:7:17"},{"id":3011,"name":"InvalidSignature","nameLocation":"409:16:17","nodeType":"EnumValue","src":"409:16:17"},{"id":3012,"name":"InvalidSignatureLength","nameLocation":"435:22:17","nodeType":"EnumValue","src":"435:22:17"},{"id":3013,"name":"InvalidSignatureS","nameLocation":"467:17:17","nodeType":"EnumValue","src":"467:17:17"}],"name":"RecoverError","nameLocation":"369:12:17","nodeType":"EnumDefinition","src":"364:126:17"},{"documentation":{"id":3015,"nodeType":"StructuredDocumentation","src":"496:63:17","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3017,"name":"ECDSAInvalidSignature","nameLocation":"570:21:17","nodeType":"ErrorDefinition","parameters":{"id":3016,"nodeType":"ParameterList","parameters":[],"src":"591:2:17"},"src":"564:30:17"},{"documentation":{"id":3018,"nodeType":"StructuredDocumentation","src":"600:60:17","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3022,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:17","nodeType":"ErrorDefinition","parameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"length","nameLocation":"707:6:17","nodeType":"VariableDeclaration","scope":3022,"src":"699:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:17"},"src":"665:50:17"},{"documentation":{"id":3023,"nodeType":"StructuredDocumentation","src":"721:85:17","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3027,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:17","nodeType":"ErrorDefinition","parameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"s","nameLocation":"848:1:17","nodeType":"VariableDeclaration","scope":3027,"src":"840:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:17"},"src":"811:40:17"},{"body":{"id":3079,"nodeType":"Block","src":"2285:622:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3042,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"2299:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:17","memberName":"length","nodeType":"MemberAccess","src":"2299:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:17","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3077,"nodeType":"Block","src":"2793:108:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3064,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:17","typeDescriptions":{}}},"id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3068,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"2827:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3014_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:17","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"2827:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3072,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"2872:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:17","memberName":"length","nodeType":"MemberAccess","src":"2872:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:17","typeDescriptions":{}}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3014_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3041,"id":3076,"nodeType":"Return","src":"2807:83:17"}]},"id":3078,"nodeType":"IfStatement","src":"2295:606:17","trueBody":{"id":3063,"nodeType":"Block","src":"2323:464:17","statements":[{"assignments":[3047],"declarations":[{"constant":false,"id":3047,"mutability":"mutable","name":"r","nameLocation":"2345:1:17","nodeType":"VariableDeclaration","scope":3063,"src":"2337:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3048,"nodeType":"VariableDeclarationStatement","src":"2337:9:17"},{"assignments":[3050],"declarations":[{"constant":false,"id":3050,"mutability":"mutable","name":"s","nameLocation":"2368:1:17","nodeType":"VariableDeclaration","scope":3063,"src":"2360:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3051,"nodeType":"VariableDeclarationStatement","src":"2360:9:17"},{"assignments":[3053],"declarations":[{"constant":false,"id":3053,"mutability":"mutable","name":"v","nameLocation":"2389:1:17","nodeType":"VariableDeclaration","scope":3063,"src":"2383:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3052,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3054,"nodeType":"VariableDeclarationStatement","src":"2383:7:17"},{"AST":{"nodeType":"YulBlock","src":"2560:171:17","statements":[{"nodeType":"YulAssignment","src":"2578:32:17","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:17"},"nodeType":"YulFunctionCall","src":"2589:20:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:17"},"nodeType":"YulFunctionCall","src":"2583:27:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:17"}]},{"nodeType":"YulAssignment","src":"2627:32:17","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:17"},"nodeType":"YulFunctionCall","src":"2638:20:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:17"},"nodeType":"YulFunctionCall","src":"2632:27:17"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:17"}]},{"nodeType":"YulAssignment","src":"2676:41:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:17","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:17"},"nodeType":"YulFunctionCall","src":"2695:20:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:17"},"nodeType":"YulFunctionCall","src":"2689:27:17"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:17"},"nodeType":"YulFunctionCall","src":"2681:36:17"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3047,"isOffset":false,"isSlot":false,"src":"2578:1:17","valueSize":1},{"declaration":3050,"isOffset":false,"isSlot":false,"src":"2627:1:17","valueSize":1},{"declaration":3032,"isOffset":false,"isSlot":false,"src":"2593:9:17","valueSize":1},{"declaration":3032,"isOffset":false,"isSlot":false,"src":"2642:9:17","valueSize":1},{"declaration":3032,"isOffset":false,"isSlot":false,"src":"2699:9:17","valueSize":1},{"declaration":3053,"isOffset":false,"isSlot":false,"src":"2676:1:17","valueSize":1}],"flags":["memory-safe"],"id":3055,"nodeType":"InlineAssembly","src":"2535:196:17"},{"expression":{"arguments":[{"id":3057,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"2762:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3058,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"2768:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3059,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"2771:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3060,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2774:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3056,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3080,3160,3268],"referencedDeclaration":3268,"src":"2751:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3014_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3014_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3041,"id":3062,"nodeType":"Return","src":"2744:32:17"}]}}]},"documentation":{"id":3028,"nodeType":"StructuredDocumentation","src":"857:1267:17","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3080,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:17","nodeType":"FunctionDefinition","parameters":{"id":3033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"hash","nameLocation":"2166:4:17","nodeType":"VariableDeclaration","scope":3080,"src":"2158:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"signature","nameLocation":"2193:9:17","nodeType":"VariableDeclaration","scope":3080,"src":"2180:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3031,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:17"},"returnParameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3035,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:17","nodeType":"VariableDeclaration","scope":3080,"src":"2232:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3034,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"err","nameLocation":"2264:3:17","nodeType":"VariableDeclaration","scope":3080,"src":"2251:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3037,"nodeType":"UserDefinedTypeName","pathNode":{"id":3036,"name":"RecoverError","nameLocations":["2251:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3014,"src":"2251:12:17"},"referencedDeclaration":3014,"src":"2251:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3040,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:17","nodeType":"VariableDeclaration","scope":3080,"src":"2269:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:17"},"scope":3354,"src":"2129:778:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3109,"nodeType":"Block","src":"3801:168:17","statements":[{"assignments":[3091,3094,3096],"declarations":[{"constant":false,"id":3091,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:17","nodeType":"VariableDeclaration","scope":3109,"src":"3812:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3090,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3094,"mutability":"mutable","name":"error","nameLocation":"3844:5:17","nodeType":"VariableDeclaration","scope":3109,"src":"3831:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3093,"nodeType":"UserDefinedTypeName","pathNode":{"id":3092,"name":"RecoverError","nameLocations":["3831:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3014,"src":"3831:12:17"},"referencedDeclaration":3014,"src":"3831:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3096,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:17","nodeType":"VariableDeclaration","scope":3109,"src":"3851:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3101,"initialValue":{"arguments":[{"id":3098,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"3882:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3099,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"3888:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3097,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3080,3160,3268],"referencedDeclaration":3080,"src":"3871:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3014_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3014_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:17"},{"expression":{"arguments":[{"id":3103,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"3920:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},{"id":3104,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"3927:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3102,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"3908:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3014_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3106,"nodeType":"ExpressionStatement","src":"3908:28:17"},{"expression":{"id":3107,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"3953:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3089,"id":3108,"nodeType":"Return","src":"3946:16:17"}]},"documentation":{"id":3081,"nodeType":"StructuredDocumentation","src":"2913:796:17","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3110,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:17","nodeType":"FunctionDefinition","parameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3083,"mutability":"mutable","name":"hash","nameLocation":"3739:4:17","nodeType":"VariableDeclaration","scope":3110,"src":"3731:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3085,"mutability":"mutable","name":"signature","nameLocation":"3758:9:17","nodeType":"VariableDeclaration","scope":3110,"src":"3745:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3084,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:17"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3110,"src":"3792:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3087,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:17"},"scope":3354,"src":"3714:255:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3159,"nodeType":"Block","src":"4348:342:17","statements":[{"id":3158,"nodeType":"UncheckedBlock","src":"4358:326:17","statements":[{"assignments":[3128],"declarations":[{"constant":false,"id":3128,"mutability":"mutable","name":"s","nameLocation":"4390:1:17","nodeType":"VariableDeclaration","scope":3158,"src":"4382:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3135,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3129,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"4394:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:17","typeDescriptions":{}}},"id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:17"},{"assignments":[3137],"declarations":[{"constant":false,"id":3137,"mutability":"mutable","name":"v","nameLocation":"4591:1:17","nodeType":"VariableDeclaration","scope":3158,"src":"4585:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3136,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3150,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3142,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"4610:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:17","typeDescriptions":{}}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3146,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:17","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3138,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:17","typeDescriptions":{}}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:17"},{"expression":{"arguments":[{"id":3152,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"4659:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3153,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"4665:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3154,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"4668:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3155,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"4671:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3151,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3080,3160,3268],"referencedDeclaration":3268,"src":"4648:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3014_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3014_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3126,"id":3157,"nodeType":"Return","src":"4641:32:17"}]}]},"documentation":{"id":3111,"nodeType":"StructuredDocumentation","src":"3975:205:17","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3160,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:17","nodeType":"FunctionDefinition","parameters":{"id":3118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"hash","nameLocation":"4222:4:17","nodeType":"VariableDeclaration","scope":3160,"src":"4214:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3115,"mutability":"mutable","name":"r","nameLocation":"4244:1:17","nodeType":"VariableDeclaration","scope":3160,"src":"4236:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3117,"mutability":"mutable","name":"vs","nameLocation":"4263:2:17","nodeType":"VariableDeclaration","scope":3160,"src":"4255:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:17"},"returnParameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:17","nodeType":"VariableDeclaration","scope":3160,"src":"4295:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3119,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3123,"mutability":"mutable","name":"err","nameLocation":"4327:3:17","nodeType":"VariableDeclaration","scope":3160,"src":"4314:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3122,"nodeType":"UserDefinedTypeName","pathNode":{"id":3121,"name":"RecoverError","nameLocations":["4314:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3014,"src":"4314:12:17"},"referencedDeclaration":3014,"src":"4314:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3125,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:17","nodeType":"VariableDeclaration","scope":3160,"src":"4332:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:17"},"scope":3354,"src":"4185:505:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3192,"nodeType":"Block","src":"4903:164:17","statements":[{"assignments":[3173,3176,3178],"declarations":[{"constant":false,"id":3173,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:17","nodeType":"VariableDeclaration","scope":3192,"src":"4914:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3172,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3176,"mutability":"mutable","name":"error","nameLocation":"4946:5:17","nodeType":"VariableDeclaration","scope":3192,"src":"4933:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3175,"nodeType":"UserDefinedTypeName","pathNode":{"id":3174,"name":"RecoverError","nameLocations":["4933:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3014,"src":"4933:12:17"},"referencedDeclaration":3014,"src":"4933:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3178,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:17","nodeType":"VariableDeclaration","scope":3192,"src":"4953:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3184,"initialValue":{"arguments":[{"id":3180,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"4984:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3181,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"4990:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3182,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"4993:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3179,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3080,3160,3268],"referencedDeclaration":3160,"src":"4973:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3014_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3014_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:17"},{"expression":{"arguments":[{"id":3186,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"5018:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},{"id":3187,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"5025:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3185,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"5006:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3014_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3189,"nodeType":"ExpressionStatement","src":"5006:28:17"},{"expression":{"id":3190,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"5051:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3171,"id":3191,"nodeType":"Return","src":"5044:16:17"}]},"documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"4696:116:17","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3193,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:17","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"hash","nameLocation":"4842:4:17","nodeType":"VariableDeclaration","scope":3193,"src":"4834:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3165,"mutability":"mutable","name":"r","nameLocation":"4856:1:17","nodeType":"VariableDeclaration","scope":3193,"src":"4848:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"vs","nameLocation":"4867:2:17","nodeType":"VariableDeclaration","scope":3193,"src":"4859:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:17"},"returnParameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3193,"src":"4894:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3169,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:17"},"scope":3354,"src":"4817:250:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3267,"nodeType":"Block","src":"5382:1372:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3214,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"6278:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3212,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:17","typeDescriptions":{}}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3228,"nodeType":"IfStatement","src":"6266:164:17","trueBody":{"id":3227,"nodeType":"Block","src":"6351:79:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3218,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:17","typeDescriptions":{}}},"id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3222,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"6385:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3014_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:17","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3013,"src":"6385:30:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},{"id":3224,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"6417:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3014_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3211,"id":3226,"nodeType":"Return","src":"6365:54:17"}]}},{"assignments":[3230],"declarations":[{"constant":false,"id":3230,"mutability":"mutable","name":"signer","nameLocation":"6532:6:17","nodeType":"VariableDeclaration","scope":3267,"src":"6524:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3229,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3237,"initialValue":{"arguments":[{"id":3232,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"6551:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3233,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"6557:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3234,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"6560:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3235,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"6563:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3231,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:17","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3238,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"6579:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3239,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:17","typeDescriptions":{}}},"id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3257,"nodeType":"IfStatement","src":"6575:113:17","trueBody":{"id":3256,"nodeType":"Block","src":"6601:87:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3244,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:17","typeDescriptions":{}}},"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3248,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"6635:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3014_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:17","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3011,"src":"6635:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:17","typeDescriptions":{}}},"id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3014_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3211,"id":3255,"nodeType":"Return","src":"6615:62:17"}]}},{"expression":{"components":[{"id":3258,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"6706:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3259,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"6714:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3014_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:17","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3010,"src":"6714:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:17","typeDescriptions":{}}},"id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3014_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3211,"id":3266,"nodeType":"Return","src":"6698:49:17"}]},"documentation":{"id":3194,"nodeType":"StructuredDocumentation","src":"5073:125:17","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3268,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:17","nodeType":"FunctionDefinition","parameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"hash","nameLocation":"5240:4:17","nodeType":"VariableDeclaration","scope":3268,"src":"5232:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"v","nameLocation":"5260:1:17","nodeType":"VariableDeclaration","scope":3268,"src":"5254:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3197,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3200,"mutability":"mutable","name":"r","nameLocation":"5279:1:17","nodeType":"VariableDeclaration","scope":3268,"src":"5271:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3202,"mutability":"mutable","name":"s","nameLocation":"5298:1:17","nodeType":"VariableDeclaration","scope":3268,"src":"5290:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:17"},"returnParameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:17","nodeType":"VariableDeclaration","scope":3268,"src":"5329:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3204,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3208,"mutability":"mutable","name":"err","nameLocation":"5361:3:17","nodeType":"VariableDeclaration","scope":3268,"src":"5348:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3207,"nodeType":"UserDefinedTypeName","pathNode":{"id":3206,"name":"RecoverError","nameLocations":["5348:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3014,"src":"5348:12:17"},"referencedDeclaration":3014,"src":"5348:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3210,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:17","nodeType":"VariableDeclaration","scope":3268,"src":"5366:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:17"},"scope":3354,"src":"5203:1551:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3303,"nodeType":"Block","src":"6981:166:17","statements":[{"assignments":[3283,3286,3288],"declarations":[{"constant":false,"id":3283,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:17","nodeType":"VariableDeclaration","scope":3303,"src":"6992:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3282,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3286,"mutability":"mutable","name":"error","nameLocation":"7024:5:17","nodeType":"VariableDeclaration","scope":3303,"src":"7011:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3285,"nodeType":"UserDefinedTypeName","pathNode":{"id":3284,"name":"RecoverError","nameLocations":["7011:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3014,"src":"7011:12:17"},"referencedDeclaration":3014,"src":"7011:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3288,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:17","nodeType":"VariableDeclaration","scope":3303,"src":"7031:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3295,"initialValue":{"arguments":[{"id":3290,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"7062:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3291,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"7068:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3292,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"7071:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3293,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"7074:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3289,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3080,3160,3268],"referencedDeclaration":3268,"src":"7051:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3014_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3014_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:17"},{"expression":{"arguments":[{"id":3297,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"7098:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},{"id":3298,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"7105:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3296,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"7086:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3014_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3300,"nodeType":"ExpressionStatement","src":"7086:28:17"},{"expression":{"id":3301,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"7131:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3281,"id":3302,"nodeType":"Return","src":"7124:16:17"}]},"documentation":{"id":3269,"nodeType":"StructuredDocumentation","src":"6760:122:17","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3304,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:17","nodeType":"FunctionDefinition","parameters":{"id":3278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"hash","nameLocation":"6912:4:17","nodeType":"VariableDeclaration","scope":3304,"src":"6904:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3273,"mutability":"mutable","name":"v","nameLocation":"6924:1:17","nodeType":"VariableDeclaration","scope":3304,"src":"6918:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3272,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3275,"mutability":"mutable","name":"r","nameLocation":"6935:1:17","nodeType":"VariableDeclaration","scope":3304,"src":"6927:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3274,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3277,"mutability":"mutable","name":"s","nameLocation":"6946:1:17","nodeType":"VariableDeclaration","scope":3304,"src":"6938:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:17"},"returnParameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3304,"src":"6972:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3279,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:17"},"scope":3354,"src":"6887:260:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3352,"nodeType":"Block","src":"7352:460:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3313,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"7366:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3314,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"7375:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3014_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:17","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3010,"src":"7375:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3319,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"7462:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3320,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"7471:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3014_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:17","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3011,"src":"7471:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3327,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"7567:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3328,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"7576:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3014_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:17","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3012,"src":"7576:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3339,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"7701:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3340,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"7710:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3014_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:17","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3013,"src":"7710:30:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3348,"nodeType":"IfStatement","src":"7697:109:17","trueBody":{"id":3347,"nodeType":"Block","src":"7742:64:17","statements":[{"errorCall":{"arguments":[{"id":3344,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"7786:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3343,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"7763:22:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3346,"nodeType":"RevertStatement","src":"7756:39:17"}]}},"id":3349,"nodeType":"IfStatement","src":"7563:243:17","trueBody":{"id":3338,"nodeType":"Block","src":"7613:78:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3334,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"7670:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:17","typeDescriptions":{}}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3331,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"7634:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3337,"nodeType":"RevertStatement","src":"7627:53:17"}]}},"id":3350,"nodeType":"IfStatement","src":"7458:348:17","trueBody":{"id":3326,"nodeType":"Block","src":"7502:55:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3323,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"7523:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3325,"nodeType":"RevertStatement","src":"7516:30:17"}]}},"id":3351,"nodeType":"IfStatement","src":"7362:444:17","trueBody":{"id":3318,"nodeType":"Block","src":"7397:55:17","statements":[{"functionReturnParameters":3312,"id":3317,"nodeType":"Return","src":"7411:7:17"}]}}]},"documentation":{"id":3305,"nodeType":"StructuredDocumentation","src":"7153:122:17","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3353,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:17","nodeType":"FunctionDefinition","parameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3308,"mutability":"mutable","name":"error","nameLocation":"7314:5:17","nodeType":"VariableDeclaration","scope":3353,"src":"7301:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3307,"nodeType":"UserDefinedTypeName","pathNode":{"id":3306,"name":"RecoverError","nameLocations":["7301:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3014,"src":"7301:12:17"},"referencedDeclaration":3014,"src":"7301:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3014","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3310,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:17","nodeType":"VariableDeclaration","scope":3353,"src":"7321:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:17"},"returnParameters":{"id":3312,"nodeType":"ParameterList","parameters":[],"src":"7352:0:17"},"scope":3354,"src":"7280:532:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3355,"src":"344:7470:17","usedErrors":[3017,3022,3027],"usedEvents":[]}],"src":"112:7703:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3581],"IERC5267":[172],"MessageHashUtils":[3655],"ShortString":[1471],"ShortStrings":[1682]},"id":3582,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3356,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3358,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3582,"sourceUnit":3656,"src":"139:56:18","symbolAliases":[{"foreign":{"id":3357,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"147:16:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3361,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3582,"sourceUnit":1683,"src":"196:62:18","symbolAliases":[{"foreign":{"id":3359,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"204:12:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3360,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"218:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3363,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3582,"sourceUnit":173,"src":"259:55:18","symbolAliases":[{"foreign":{"id":3362,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"267:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3365,"name":"IERC5267","nameLocations":["1988:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"1988:8:18"},"id":3366,"nodeType":"InheritanceSpecifier","src":"1988:8:18"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3364,"nodeType":"StructuredDocumentation","src":"316:1643:18","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3581,"linearizedBaseContracts":[3581,172],"name":"EIP712","nameLocation":"1978:6:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3368,"libraryName":{"id":3367,"name":"ShortStrings","nameLocations":["2009:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":1682,"src":"2009:12:18"},"nodeType":"UsingForDirective","src":"2003:25:18"},{"constant":true,"id":3373,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:18","nodeType":"VariableDeclaration","scope":3581,"src":"2034:140:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3370,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3375,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:18","nodeType":"VariableDeclaration","scope":3581,"src":"2373:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3377,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:18","nodeType":"VariableDeclaration","scope":3581,"src":"2427:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3379,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:18","nodeType":"VariableDeclaration","scope":3581,"src":"2473:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3378,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3381,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:18","nodeType":"VariableDeclaration","scope":3581,"src":"2517:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3383,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:18","nodeType":"VariableDeclaration","scope":3581,"src":"2560:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3382,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3386,"mutability":"immutable","name":"_name","nameLocation":"2637:5:18","nodeType":"VariableDeclaration","scope":3581,"src":"2607:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"},"typeName":{"id":3385,"nodeType":"UserDefinedTypeName","pathNode":{"id":3384,"name":"ShortString","nameLocations":["2607:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":1471,"src":"2607:11:18"},"referencedDeclaration":1471,"src":"2607:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3389,"mutability":"immutable","name":"_version","nameLocation":"2678:8:18","nodeType":"VariableDeclaration","scope":3581,"src":"2648:38:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"},"typeName":{"id":3388,"nodeType":"UserDefinedTypeName","pathNode":{"id":3387,"name":"ShortString","nameLocations":["2648:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":1471,"src":"2648:11:18"},"referencedDeclaration":1471,"src":"2648:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3391,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:18","nodeType":"VariableDeclaration","scope":3581,"src":"2692:28:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3390,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3393,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:18","nodeType":"VariableDeclaration","scope":3581,"src":"2726:31:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3392,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3450,"nodeType":"Block","src":"3383:376:18","statements":[{"expression":{"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3401,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"3393:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3404,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"3432:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3402,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"3401:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:18","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1623,"src":"3401:30:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1471_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"src":"3393:53:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"id":3407,"nodeType":"ExpressionStatement","src":"3393:53:18"},{"expression":{"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3408,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"3456:8:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3411,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"3501:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3409,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"3467:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:18","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1623,"src":"3467:33:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1471_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"src":"3456:62:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"id":3414,"nodeType":"ExpressionStatement","src":"3456:62:18"},{"expression":{"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3415,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"3528:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3419,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"3558:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3417,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:18","typeDescriptions":{}}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3416,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3423,"nodeType":"ExpressionStatement","src":"3528:36:18"},{"expression":{"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3424,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"3574:14:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3428,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"3607:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3426,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:18","typeDescriptions":{}}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3425,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3432,"nodeType":"ExpressionStatement","src":"3574:42:18"},{"expression":{"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3433,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"3627:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3434,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3437,"nodeType":"ExpressionStatement","src":"3627:30:18"},{"expression":{"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3438,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"3667:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3439,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"3692:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3442,"nodeType":"ExpressionStatement","src":"3667:48:18"},{"expression":{"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3443,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"3725:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3446,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3581","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3581","typeString":"contract EIP712"}],"id":3445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3444,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:18","typeDescriptions":{}}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3449,"nodeType":"ExpressionStatement","src":"3725:27:18"}]},"documentation":{"id":3394,"nodeType":"StructuredDocumentation","src":"2764:559:18","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3451,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3396,"mutability":"mutable","name":"name","nameLocation":"3354:4:18","nodeType":"VariableDeclaration","scope":3451,"src":"3340:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3395,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3398,"mutability":"mutable","name":"version","nameLocation":"3374:7:18","nodeType":"VariableDeclaration","scope":3451,"src":"3360:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3397,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:18"},"returnParameters":{"id":3400,"nodeType":"ParameterList","parameters":[],"src":"3383:0:18"},"scope":3581,"src":"3328:431:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3476,"nodeType":"Block","src":"3907:200:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3459,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3581","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3581","typeString":"contract EIP712"}],"id":3458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3457,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:18","typeDescriptions":{}}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3461,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"3938:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3463,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3465,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"3970:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3474,"nodeType":"Block","src":"4046:55:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3471,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"4067:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3456,"id":3473,"nodeType":"Return","src":"4060:30:18"}]},"id":3475,"nodeType":"IfStatement","src":"3917:184:18","trueBody":{"id":3470,"nodeType":"Block","src":"3986:54:18","statements":[{"expression":{"id":3468,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"4007:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3456,"id":3469,"nodeType":"Return","src":"4000:29:18"}]}}]},"documentation":{"id":3452,"nodeType":"StructuredDocumentation","src":"3765:75:18","text":" @dev Returns the domain separator for the current chain."},"id":3477,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:18","nodeType":"FunctionDefinition","parameters":{"id":3453,"nodeType":"ParameterList","parameters":[],"src":"3872:2:18"},"returnParameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3477,"src":"3898:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:18"},"scope":3581,"src":"3845:262:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3497,"nodeType":"Block","src":"4177:115:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":3485,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"4215:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3486,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"4226:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3487,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"4239:14:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3488,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3492,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3581","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3581","typeString":"contract EIP712"}],"id":3491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3490,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:18","typeDescriptions":{}}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3483,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:18","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3482,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3481,"id":3496,"nodeType":"Return","src":"4187:98:18"}]},"id":3498,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:18","nodeType":"FunctionDefinition","parameters":{"id":3478,"nodeType":"ParameterList","parameters":[],"src":"4143:2:18"},"returnParameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3498,"src":"4168:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:18"},"scope":3581,"src":"4113:179:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3513,"nodeType":"Block","src":"5003:90:18","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3508,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"5053:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3510,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"5075:10:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3506,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"5020:16:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3655_$","typeString":"type(library MessageHashUtils)"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:18","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3654,"src":"5020:32:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3505,"id":3512,"nodeType":"Return","src":"5013:73:18"}]},"documentation":{"id":3499,"nodeType":"StructuredDocumentation","src":"4298:614:18","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3514,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:18","nodeType":"FunctionDefinition","parameters":{"id":3502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:18","nodeType":"VariableDeclaration","scope":3514,"src":"4943:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:18"},"returnParameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3514,"src":"4994:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:18"},"scope":3581,"src":"4917:176:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[171],"body":{"id":3555,"nodeType":"Block","src":"5472:229:18","statements":[{"expression":{"components":[{"hexValue":"0f","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3534,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"5533:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3536,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"5560:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3538,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3542,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3581","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3581","typeString":"contract EIP712"}],"id":3541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3540,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:18","typeDescriptions":{}}},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:18","typeDescriptions":{}}},"id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3549,"nodeType":"ArrayTypeName","src":"5672:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3553,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3532,"id":3554,"nodeType":"Return","src":"5482:212:18"}]},"documentation":{"id":3515,"nodeType":"StructuredDocumentation","src":"5099:40:18","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3556,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:18","nodeType":"FunctionDefinition","parameters":{"id":3516,"nodeType":"ParameterList","parameters":[],"src":"5165:2:18"},"returnParameters":{"id":3532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3518,"mutability":"mutable","name":"fields","nameLocation":"5249:6:18","nodeType":"VariableDeclaration","scope":3556,"src":"5242:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3517,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3520,"mutability":"mutable","name":"name","nameLocation":"5283:4:18","nodeType":"VariableDeclaration","scope":3556,"src":"5269:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3519,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3522,"mutability":"mutable","name":"version","nameLocation":"5315:7:18","nodeType":"VariableDeclaration","scope":3556,"src":"5301:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3521,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3524,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:18","nodeType":"VariableDeclaration","scope":3556,"src":"5336:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3523,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3526,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:18","nodeType":"VariableDeclaration","scope":3556,"src":"5365:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3525,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3528,"mutability":"mutable","name":"salt","nameLocation":"5412:4:18","nodeType":"VariableDeclaration","scope":3556,"src":"5404:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3531,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:18","nodeType":"VariableDeclaration","scope":3556,"src":"5430:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3529,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3530,"nodeType":"ArrayTypeName","src":"5430:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:18"},"scope":3581,"src":"5144:557:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3567,"nodeType":"Block","src":"6082:65:18","statements":[{"expression":{"arguments":[{"id":3564,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"6126:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3562,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"6099:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:18","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1650,"src":"6099:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1471_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1471_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3561,"id":3566,"nodeType":"Return","src":"6092:48:18"}]},"documentation":{"id":3557,"nodeType":"StructuredDocumentation","src":"5707:256:18","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3568,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:18","nodeType":"FunctionDefinition","parameters":{"id":3558,"nodeType":"ParameterList","parameters":[],"src":"6041:2:18"},"returnParameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3568,"src":"6067:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3559,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:18"},"scope":3581,"src":"6021:126:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3579,"nodeType":"Block","src":"6537:71:18","statements":[{"expression":{"arguments":[{"id":3576,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"6584:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3574,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"6554:8:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1471","typeString":"ShortString"}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:18","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1650,"src":"6554:29:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1471_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1471_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3573,"id":3578,"nodeType":"Return","src":"6547:54:18"}]},"documentation":{"id":3569,"nodeType":"StructuredDocumentation","src":"6153:262:18","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3580,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:18","nodeType":"FunctionDefinition","parameters":{"id":3570,"nodeType":"ParameterList","parameters":[],"src":"6496:2:18"},"returnParameters":{"id":3573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3580,"src":"6522:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3571,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:18"},"scope":3581,"src":"6473:135:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3582,"src":"1960:4650:18","usedErrors":[1479,1481],"usedEvents":[152]}],"src":"113:6498:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3655],"Strings":[3006]},"id":3656,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3583,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3585,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3656,"sourceUnit":3007,"src":"149:39:19","symbolAliases":[{"foreign":{"id":3584,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"157:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3586,"nodeType":"StructuredDocumentation","src":"190:330:19","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3655,"linearizedBaseContracts":[3655],"name":"MessageHashUtils","nameLocation":"529:16:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":3595,"nodeType":"Block","src":"1314:341:19","statements":[{"AST":{"nodeType":"YulBlock","src":"1349:300:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1370:4:19","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1376:34:19","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1363:6:19"},"nodeType":"YulFunctionCall","src":"1363:48:19"},"nodeType":"YulExpressionStatement","src":"1363:48:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1472:4:19","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1478:11:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1465:6:19"},"nodeType":"YulFunctionCall","src":"1465:25:19"},"nodeType":"YulExpressionStatement","src":"1465:25:19"},{"nodeType":"YulAssignment","src":"1544:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1564:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1570:4:19","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1554:9:19"},"nodeType":"YulFunctionCall","src":"1554:21:19"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1544:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3592,"isOffset":false,"isSlot":false,"src":"1544:6:19","valueSize":1},{"declaration":3589,"isOffset":false,"isSlot":false,"src":"1478:11:19","valueSize":1}],"flags":["memory-safe"],"id":3594,"nodeType":"InlineAssembly","src":"1324:325:19"}]},"documentation":{"id":3587,"nodeType":"StructuredDocumentation","src":"552:665:19","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3596,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:19","nodeType":"FunctionDefinition","parameters":{"id":3590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3589,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:19","nodeType":"VariableDeclaration","scope":3596,"src":"1254:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:19"},"returnParameters":{"id":3593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3592,"mutability":"mutable","name":"digest","nameLocation":"1306:6:19","nodeType":"VariableDeclaration","scope":3596,"src":"1298:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:19"},"scope":3655,"src":"1222:433:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3621,"nodeType":"Block","src":"2207:143:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3613,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"2316:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:19","memberName":"length","nodeType":"MemberAccess","src":"2316:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3611,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"2299:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3006_$","typeString":"type(library Strings)"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:19","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1884,"src":"2299:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3609,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:19","typeDescriptions":{}}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3617,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"2334:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3605,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:19","typeDescriptions":{}}},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:19","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:19","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3604,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3603,"id":3620,"nodeType":"Return","src":"2217:126:19"}]},"documentation":{"id":3597,"nodeType":"StructuredDocumentation","src":"1661:455:19","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3622,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:19","nodeType":"FunctionDefinition","parameters":{"id":3600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"message","nameLocation":"2166:7:19","nodeType":"VariableDeclaration","scope":3622,"src":"2153:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3598,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:19"},"returnParameters":{"id":3603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3622,"src":"2198:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:19"},"scope":3655,"src":"2121:229:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3641,"nodeType":"Block","src":"2804:80:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3636,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"2860:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3637,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"2871:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3633,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3632,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3631,"id":3640,"nodeType":"Return","src":"2814:63:19"}]},"documentation":{"id":3623,"nodeType":"StructuredDocumentation","src":"2356:332:19","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3642,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:19","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"validator","nameLocation":"2742:9:19","nodeType":"VariableDeclaration","scope":3642,"src":"2734:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3624,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3627,"mutability":"mutable","name":"data","nameLocation":"2766:4:19","nodeType":"VariableDeclaration","scope":3642,"src":"2753:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3626,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:19"},"returnParameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3642,"src":"2795:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:19"},"scope":3655,"src":"2693:191:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3653,"nodeType":"Block","src":"3435:265:19","statements":[{"AST":{"nodeType":"YulBlock","src":"3470:224:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:22:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3501:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3495:5:19"},"nodeType":"YulFunctionCall","src":"3495:11:19"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3488:3:19","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3526:3:19"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3531:10:19","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3519:6:19"},"nodeType":"YulFunctionCall","src":"3519:23:19"},"nodeType":"YulExpressionStatement","src":"3519:23:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3566:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3571:4:19","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3562:3:19"},"nodeType":"YulFunctionCall","src":"3562:14:19"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3578:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3555:6:19"},"nodeType":"YulFunctionCall","src":"3555:39:19"},"nodeType":"YulExpressionStatement","src":"3555:39:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3618:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3623:4:19","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3614:3:19"},"nodeType":"YulFunctionCall","src":"3614:14:19"},{"name":"structHash","nodeType":"YulIdentifier","src":"3630:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3607:6:19"},"nodeType":"YulFunctionCall","src":"3607:34:19"},"nodeType":"YulExpressionStatement","src":"3607:34:19"},{"nodeType":"YulAssignment","src":"3654:30:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3674:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3679:4:19","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3664:9:19"},"nodeType":"YulFunctionCall","src":"3664:20:19"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3654:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3650,"isOffset":false,"isSlot":false,"src":"3654:6:19","valueSize":1},{"declaration":3645,"isOffset":false,"isSlot":false,"src":"3578:15:19","valueSize":1},{"declaration":3647,"isOffset":false,"isSlot":false,"src":"3630:10:19","valueSize":1}],"flags":["memory-safe"],"id":3652,"nodeType":"InlineAssembly","src":"3445:249:19"}]},"documentation":{"id":3643,"nodeType":"StructuredDocumentation","src":"2890:431:19","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3654,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:19","nodeType":"FunctionDefinition","parameters":{"id":3648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:19","nodeType":"VariableDeclaration","scope":3654,"src":"3351:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3647,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:19","nodeType":"VariableDeclaration","scope":3654,"src":"3376:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:19"},"returnParameters":{"id":3651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3650,"mutability":"mutable","name":"digest","nameLocation":"3427:6:19","nodeType":"VariableDeclaration","scope":3654,"src":"3419:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:19"},"scope":3655,"src":"3326:374:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3656,"src":"521:3181:19","usedErrors":[],"usedEvents":[]}],"src":"123:3580:19"},"id":19},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5261],"Panic":[1348],"SafeCast":[7026]},"id":5262,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3657,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3659,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5262,"sourceUnit":1349,"src":"129:35:20","symbolAliases":[{"foreign":{"id":3658,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"137:5:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3661,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5262,"sourceUnit":7027,"src":"165:40:20","symbolAliases":[{"foreign":{"id":3660,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"173:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3662,"nodeType":"StructuredDocumentation","src":"207:73:20","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5261,"linearizedBaseContracts":[5261],"name":"Math","nameLocation":"289:4:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3667,"members":[{"id":3663,"name":"Floor","nameLocation":"324:5:20","nodeType":"EnumValue","src":"324:5:20"},{"id":3664,"name":"Ceil","nameLocation":"367:4:20","nodeType":"EnumValue","src":"367:4:20"},{"id":3665,"name":"Trunc","nameLocation":"409:5:20","nodeType":"EnumValue","src":"409:5:20"},{"id":3666,"name":"Expand","nameLocation":"439:6:20","nodeType":"EnumValue","src":"439:6:20"}],"name":"Rounding","nameLocation":"305:8:20","nodeType":"EnumDefinition","src":"300:169:20"},{"body":{"id":3698,"nodeType":"Block","src":"677:140:20","statements":[{"id":3697,"nodeType":"UncheckedBlock","src":"687:124:20","statements":[{"assignments":[3680],"declarations":[{"constant":false,"id":3680,"mutability":"mutable","name":"c","nameLocation":"719:1:20","nodeType":"VariableDeclaration","scope":3697,"src":"711:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3679,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3684,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3681,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"723:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3682,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"727:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3685,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"746:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3686,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"750:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3692,"nodeType":"IfStatement","src":"742:28:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3678,"id":3691,"nodeType":"Return","src":"753:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3694,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"798:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3678,"id":3696,"nodeType":"Return","src":"784:16:20"}]}]},"documentation":{"id":3668,"nodeType":"StructuredDocumentation","src":"475:106:20","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3699,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:20","nodeType":"FunctionDefinition","parameters":{"id":3673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"mutability":"mutable","name":"a","nameLocation":"610:1:20","nodeType":"VariableDeclaration","scope":3699,"src":"602:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3672,"mutability":"mutable","name":"b","nameLocation":"621:1:20","nodeType":"VariableDeclaration","scope":3699,"src":"613:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:20"},"returnParameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3675,"mutability":"mutable","name":"success","nameLocation":"652:7:20","nodeType":"VariableDeclaration","scope":3699,"src":"647:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3674,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3677,"mutability":"mutable","name":"result","nameLocation":"669:6:20","nodeType":"VariableDeclaration","scope":3699,"src":"661:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:20"},"scope":5261,"src":"586:231:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3726,"nodeType":"Block","src":"1028:113:20","statements":[{"id":3725,"nodeType":"UncheckedBlock","src":"1038:97:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3711,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"1066:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3712,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"1070:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3718,"nodeType":"IfStatement","src":"1062:28:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3716,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3710,"id":3717,"nodeType":"Return","src":"1073:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"1118:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3721,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"1122:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3710,"id":3724,"nodeType":"Return","src":"1104:20:20"}]}]},"documentation":{"id":3700,"nodeType":"StructuredDocumentation","src":"823:109:20","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3727,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:20","nodeType":"FunctionDefinition","parameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"mutability":"mutable","name":"a","nameLocation":"961:1:20","nodeType":"VariableDeclaration","scope":3727,"src":"953:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3704,"mutability":"mutable","name":"b","nameLocation":"972:1:20","nodeType":"VariableDeclaration","scope":3727,"src":"964:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:20"},"returnParameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3707,"mutability":"mutable","name":"success","nameLocation":"1003:7:20","nodeType":"VariableDeclaration","scope":3727,"src":"998:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3706,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3709,"mutability":"mutable","name":"result","nameLocation":"1020:6:20","nodeType":"VariableDeclaration","scope":3727,"src":"1012:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:20"},"scope":5261,"src":"937:204:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3768,"nodeType":"Block","src":"1355:417:20","statements":[{"id":3767,"nodeType":"UncheckedBlock","src":"1365:401:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3739,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"1623:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3746,"nodeType":"IfStatement","src":"1619:28:20","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3738,"id":3745,"nodeType":"Return","src":"1631:16:20"}},{"assignments":[3748],"declarations":[{"constant":false,"id":3748,"mutability":"mutable","name":"c","nameLocation":"1669:1:20","nodeType":"VariableDeclaration","scope":3767,"src":"1661:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3752,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"1673:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3750,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"1677:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3753,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"1696:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3754,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"1700:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3756,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"1705:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3762,"nodeType":"IfStatement","src":"1692:33:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3738,"id":3761,"nodeType":"Return","src":"1708:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3764,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"1753:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3765,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3738,"id":3766,"nodeType":"Return","src":"1739:16:20"}]}]},"documentation":{"id":3728,"nodeType":"StructuredDocumentation","src":"1147:112:20","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3769,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:20","nodeType":"FunctionDefinition","parameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"a","nameLocation":"1288:1:20","nodeType":"VariableDeclaration","scope":3769,"src":"1280:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3732,"mutability":"mutable","name":"b","nameLocation":"1299:1:20","nodeType":"VariableDeclaration","scope":3769,"src":"1291:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:20"},"returnParameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"mutability":"mutable","name":"success","nameLocation":"1330:7:20","nodeType":"VariableDeclaration","scope":3769,"src":"1325:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3734,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3737,"mutability":"mutable","name":"result","nameLocation":"1347:6:20","nodeType":"VariableDeclaration","scope":3769,"src":"1339:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3736,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:20"},"scope":5261,"src":"1264:508:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3796,"nodeType":"Block","src":"1987:114:20","statements":[{"id":3795,"nodeType":"UncheckedBlock","src":"1997:98:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3781,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"2025:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3788,"nodeType":"IfStatement","src":"2021:29:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3780,"id":3787,"nodeType":"Return","src":"2033:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3790,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2078:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3791,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"2082:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3793,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3780,"id":3794,"nodeType":"Return","src":"2064:20:20"}]}]},"documentation":{"id":3770,"nodeType":"StructuredDocumentation","src":"1778:113:20","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3797,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:20","nodeType":"FunctionDefinition","parameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"a","nameLocation":"1920:1:20","nodeType":"VariableDeclaration","scope":3797,"src":"1912:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"b","nameLocation":"1931:1:20","nodeType":"VariableDeclaration","scope":3797,"src":"1923:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:20"},"returnParameters":{"id":3780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3777,"mutability":"mutable","name":"success","nameLocation":"1962:7:20","nodeType":"VariableDeclaration","scope":3797,"src":"1957:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3776,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3779,"mutability":"mutable","name":"result","nameLocation":"1979:6:20","nodeType":"VariableDeclaration","scope":3797,"src":"1971:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3778,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:20"},"scope":5261,"src":"1896:205:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3824,"nodeType":"Block","src":"2326:114:20","statements":[{"id":3823,"nodeType":"UncheckedBlock","src":"2336:98:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3809,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"2364:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3816,"nodeType":"IfStatement","src":"2360:29:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3808,"id":3815,"nodeType":"Return","src":"2372:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3818,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"2417:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3819,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"2421:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3821,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3808,"id":3822,"nodeType":"Return","src":"2403:20:20"}]}]},"documentation":{"id":3798,"nodeType":"StructuredDocumentation","src":"2107:123:20","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3825,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:20","nodeType":"FunctionDefinition","parameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"a","nameLocation":"2259:1:20","nodeType":"VariableDeclaration","scope":3825,"src":"2251:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3802,"mutability":"mutable","name":"b","nameLocation":"2270:1:20","nodeType":"VariableDeclaration","scope":3825,"src":"2262:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:20"},"returnParameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"success","nameLocation":"2301:7:20","nodeType":"VariableDeclaration","scope":3825,"src":"2296:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3804,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3807,"mutability":"mutable","name":"result","nameLocation":"2318:6:20","nodeType":"VariableDeclaration","scope":3825,"src":"2310:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:20"},"scope":5261,"src":"2235:205:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3851,"nodeType":"Block","src":"2912:207:20","statements":[{"id":3850,"nodeType":"UncheckedBlock","src":"2922:191:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3837,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"3060:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3838,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"3066:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3839,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"3070:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3844,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"3091:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3842,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"3075:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"3075:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3847,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3836,"id":3849,"nodeType":"Return","src":"3053:49:20"}]}]},"documentation":{"id":3826,"nodeType":"StructuredDocumentation","src":"2446:374:20","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3852,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:20","nodeType":"FunctionDefinition","parameters":{"id":3833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3828,"mutability":"mutable","name":"condition","nameLocation":"2847:9:20","nodeType":"VariableDeclaration","scope":3852,"src":"2842:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3827,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"a","nameLocation":"2866:1:20","nodeType":"VariableDeclaration","scope":3852,"src":"2858:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3832,"mutability":"mutable","name":"b","nameLocation":"2877:1:20","nodeType":"VariableDeclaration","scope":3852,"src":"2869:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3831,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:20"},"returnParameters":{"id":3836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3852,"src":"2903:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:20"},"scope":5261,"src":"2825:294:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3870,"nodeType":"Block","src":"3256:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3863,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"3281:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3864,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"3285:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3866,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"3288:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3867,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"3291:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3862,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"3273:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3861,"id":3869,"nodeType":"Return","src":"3266:27:20"}]},"documentation":{"id":3853,"nodeType":"StructuredDocumentation","src":"3125:59:20","text":" @dev Returns the largest of two numbers."},"id":3871,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:20","nodeType":"FunctionDefinition","parameters":{"id":3858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3855,"mutability":"mutable","name":"a","nameLocation":"3210:1:20","nodeType":"VariableDeclaration","scope":3871,"src":"3202:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3857,"mutability":"mutable","name":"b","nameLocation":"3221:1:20","nodeType":"VariableDeclaration","scope":3871,"src":"3213:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3856,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:20"},"returnParameters":{"id":3861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3871,"src":"3247:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3859,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:20"},"scope":5261,"src":"3189:111:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3889,"nodeType":"Block","src":"3438:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3882,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"3463:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3883,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"3467:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3885,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"3470:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3886,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"3473:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3881,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"3455:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3880,"id":3888,"nodeType":"Return","src":"3448:27:20"}]},"documentation":{"id":3872,"nodeType":"StructuredDocumentation","src":"3306:60:20","text":" @dev Returns the smallest of two numbers."},"id":3890,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:20","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3874,"mutability":"mutable","name":"a","nameLocation":"3392:1:20","nodeType":"VariableDeclaration","scope":3890,"src":"3384:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"b","nameLocation":"3403:1:20","nodeType":"VariableDeclaration","scope":3890,"src":"3395:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:20"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3890,"src":"3429:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:20"},"scope":5261,"src":"3371:111:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3912,"nodeType":"Block","src":"3666:82:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"3721:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3901,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"3725:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3904,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"3731:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3905,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"3735:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3907,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3899,"id":3911,"nodeType":"Return","src":"3713:28:20"}]},"documentation":{"id":3891,"nodeType":"StructuredDocumentation","src":"3488:102:20","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3913,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:20","nodeType":"FunctionDefinition","parameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"a","nameLocation":"3620:1:20","nodeType":"VariableDeclaration","scope":3913,"src":"3612:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3895,"mutability":"mutable","name":"b","nameLocation":"3631:1:20","nodeType":"VariableDeclaration","scope":3913,"src":"3623:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:20"},"returnParameters":{"id":3899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3913,"src":"3657:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3897,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:20"},"scope":5261,"src":"3595:153:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3953,"nodeType":"Block","src":"4040:633:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3923,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"4054:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3934,"nodeType":"IfStatement","src":"4050:150:20","trueBody":{"id":3933,"nodeType":"Block","src":"4062:138:20","statements":[{"expression":{"arguments":[{"expression":{"id":3929,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"4166:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1348_$","typeString":"type(library Panic)"}},"id":3930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1315,"src":"4166:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3926,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"4154:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1348_$","typeString":"type(library Panic)"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"4154:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3932,"nodeType":"ExpressionStatement","src":"4154:35:20"}]}},{"id":3952,"nodeType":"UncheckedBlock","src":"4583:84:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3937,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"4630:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3935,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"4614:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"4614:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3941,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"4641:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3945,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"4650:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3922,"id":3951,"nodeType":"Return","src":"4607:49:20"}]}]},"documentation":{"id":3914,"nodeType":"StructuredDocumentation","src":"3754:210:20","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3954,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:20","nodeType":"FunctionDefinition","parameters":{"id":3919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3916,"mutability":"mutable","name":"a","nameLocation":"3994:1:20","nodeType":"VariableDeclaration","scope":3954,"src":"3986:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3918,"mutability":"mutable","name":"b","nameLocation":"4005:1:20","nodeType":"VariableDeclaration","scope":3954,"src":"3997:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:20"},"returnParameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3954,"src":"4031:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3920,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:20"},"scope":5261,"src":"3969:704:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4090,"nodeType":"Block","src":"5094:4128:20","statements":[{"id":4089,"nodeType":"UncheckedBlock","src":"5104:4112:20","statements":[{"assignments":[3967],"declarations":[{"constant":false,"id":3967,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:20","nodeType":"VariableDeclaration","scope":4089,"src":"5433:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3971,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3968,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"5449:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3969,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"5453:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:20"},{"assignments":[3973],"declarations":[{"constant":false,"id":3973,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:20","nodeType":"VariableDeclaration","scope":4089,"src":"5513:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3972,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3974,"nodeType":"VariableDeclarationStatement","src":"5513:13:20"},{"AST":{"nodeType":"YulBlock","src":"5593:122:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:20"},"nodeType":"YulFunctionCall","src":"5634:6:20"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:20"},"nodeType":"YulFunctionCall","src":"5621:20:20"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:20","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:20","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:20"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:20"},"nodeType":"YulFunctionCall","src":"5671:14:20"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:20"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:20"},"nodeType":"YulFunctionCall","src":"5687:13:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:20"},"nodeType":"YulFunctionCall","src":"5667:34:20"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3967,"isOffset":false,"isSlot":false,"src":"5679:5:20","valueSize":1},{"declaration":3967,"isOffset":false,"isSlot":false,"src":"5694:5:20","valueSize":1},{"declaration":3973,"isOffset":false,"isSlot":false,"src":"5658:5:20","valueSize":1},{"declaration":3957,"isOffset":false,"isSlot":false,"src":"5628:1:20","valueSize":1},{"declaration":3959,"isOffset":false,"isSlot":false,"src":"5631:1:20","valueSize":1}],"id":3975,"nodeType":"InlineAssembly","src":"5584:131:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3976,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"5796:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3984,"nodeType":"IfStatement","src":"5792:368:20","trueBody":{"id":3983,"nodeType":"Block","src":"5808:352:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3979,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"6126:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3980,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"6134:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3965,"id":3982,"nodeType":"Return","src":"6119:26:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3985,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"6270:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3986,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"6285:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4003,"nodeType":"IfStatement","src":"6266:143:20","trueBody":{"id":4002,"nodeType":"Block","src":"6292:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3992,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"6330:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3995,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6348:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1348_$","typeString":"type(library Panic)"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1315,"src":"6348:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3997,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6372:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1348_$","typeString":"type(library Panic)"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:20","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1311,"src":"6372:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3991,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"6322:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3988,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6310:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1348_$","typeString":"type(library Panic)"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"6310:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4001,"nodeType":"ExpressionStatement","src":"6310:84:20"}]}},{"assignments":[4005],"declarations":[{"constant":false,"id":4005,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:20","nodeType":"VariableDeclaration","scope":4089,"src":"6664:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4006,"nodeType":"VariableDeclarationStatement","src":"6664:17:20"},{"AST":{"nodeType":"YulBlock","src":"6704:291:20","statements":[{"nodeType":"YulAssignment","src":"6773:38:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:20"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:20"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:20"},"nodeType":"YulFunctionCall","src":"6786:25:20"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:20"}]},{"nodeType":"YulAssignment","src":"6893:41:20","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:20"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:20"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:20"},"nodeType":"YulFunctionCall","src":"6913:20:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:20"},"nodeType":"YulFunctionCall","src":"6902:32:20"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:20"}]},{"nodeType":"YulAssignment","src":"6951:30:20","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:20"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:20"},"nodeType":"YulFunctionCall","src":"6960:21:20"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3961,"isOffset":false,"isSlot":false,"src":"6799:11:20","valueSize":1},{"declaration":3967,"isOffset":false,"isSlot":false,"src":"6927:5:20","valueSize":1},{"declaration":3967,"isOffset":false,"isSlot":false,"src":"6951:5:20","valueSize":1},{"declaration":3967,"isOffset":false,"isSlot":false,"src":"6964:5:20","valueSize":1},{"declaration":3973,"isOffset":false,"isSlot":false,"src":"6893:5:20","valueSize":1},{"declaration":3973,"isOffset":false,"isSlot":false,"src":"6906:5:20","valueSize":1},{"declaration":4005,"isOffset":false,"isSlot":false,"src":"6773:9:20","valueSize":1},{"declaration":4005,"isOffset":false,"isSlot":false,"src":"6916:9:20","valueSize":1},{"declaration":4005,"isOffset":false,"isSlot":false,"src":"6971:9:20","valueSize":1},{"declaration":3957,"isOffset":false,"isSlot":false,"src":"6793:1:20","valueSize":1},{"declaration":3959,"isOffset":false,"isSlot":false,"src":"6796:1:20","valueSize":1}],"id":4007,"nodeType":"InlineAssembly","src":"6695:300:20"},{"assignments":[4009],"declarations":[{"constant":false,"id":4009,"mutability":"mutable","name":"twos","nameLocation":"7207:4:20","nodeType":"VariableDeclaration","scope":4089,"src":"7199:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4016,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4010,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"7214:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4012,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"7233:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:20"},{"AST":{"nodeType":"YulBlock","src":"7268:366:20","statements":[{"nodeType":"YulAssignment","src":"7333:37:20","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:20"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:20"},"nodeType":"YulFunctionCall","src":"7348:22:20"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:20"}]},{"nodeType":"YulAssignment","src":"7437:25:20","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:20"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:20"},"nodeType":"YulFunctionCall","src":"7446:16:20"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:20"}]},{"nodeType":"YulAssignment","src":"7581:39:20","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:20","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:20"},"nodeType":"YulFunctionCall","src":"7597:12:20"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:20"},"nodeType":"YulFunctionCall","src":"7593:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:20"},"nodeType":"YulFunctionCall","src":"7589:31:20"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3961,"isOffset":false,"isSlot":false,"src":"7333:11:20","valueSize":1},{"declaration":3961,"isOffset":false,"isSlot":false,"src":"7352:11:20","valueSize":1},{"declaration":3967,"isOffset":false,"isSlot":false,"src":"7437:5:20","valueSize":1},{"declaration":3967,"isOffset":false,"isSlot":false,"src":"7450:5:20","valueSize":1},{"declaration":4009,"isOffset":false,"isSlot":false,"src":"7365:4:20","valueSize":1},{"declaration":4009,"isOffset":false,"isSlot":false,"src":"7457:4:20","valueSize":1},{"declaration":4009,"isOffset":false,"isSlot":false,"src":"7581:4:20","valueSize":1},{"declaration":4009,"isOffset":false,"isSlot":false,"src":"7604:4:20","valueSize":1},{"declaration":4009,"isOffset":false,"isSlot":false,"src":"7611:4:20","valueSize":1}],"id":4017,"nodeType":"InlineAssembly","src":"7259:375:20"},{"expression":{"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4018,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"7700:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4019,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"7709:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4020,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"7717:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4023,"nodeType":"ExpressionStatement","src":"7700:21:20"},{"assignments":[4025],"declarations":[{"constant":false,"id":4025,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:20","nodeType":"VariableDeclaration","scope":4089,"src":"8056:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4024,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4032,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4027,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"8079:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4029,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:20"},{"expression":{"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4033,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"8312:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4035,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"8327:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4036,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"8341:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4040,"nodeType":"ExpressionStatement","src":"8312:36:20"},{"expression":{"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4041,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"8382:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4043,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"8397:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4044,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"8411:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4048,"nodeType":"ExpressionStatement","src":"8382:36:20"},{"expression":{"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4049,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"8454:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4051,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"8469:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4052,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"8483:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4056,"nodeType":"ExpressionStatement","src":"8454:36:20"},{"expression":{"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4057,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"8525:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4059,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"8540:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4060,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"8554:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4064,"nodeType":"ExpressionStatement","src":"8525:36:20"},{"expression":{"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4065,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"8598:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4067,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"8613:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4068,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"8627:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4072,"nodeType":"ExpressionStatement","src":"8598:36:20"},{"expression":{"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4073,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"8672:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4075,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"8687:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4076,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"8701:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4080,"nodeType":"ExpressionStatement","src":"8672:36:20"},{"expression":{"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4081,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"9154:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4082,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"9163:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4083,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"9171:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4086,"nodeType":"ExpressionStatement","src":"9154:24:20"},{"expression":{"id":4087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"9199:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3965,"id":4088,"nodeType":"Return","src":"9192:13:20"}]}]},"documentation":{"id":3955,"nodeType":"StructuredDocumentation","src":"4679:312:20","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4091,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:20","nodeType":"FunctionDefinition","parameters":{"id":3962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3957,"mutability":"mutable","name":"x","nameLocation":"5020:1:20","nodeType":"VariableDeclaration","scope":4091,"src":"5012:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3956,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3959,"mutability":"mutable","name":"y","nameLocation":"5031:1:20","nodeType":"VariableDeclaration","scope":4091,"src":"5023:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3961,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:20","nodeType":"VariableDeclaration","scope":4091,"src":"5034:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3960,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:20"},"returnParameters":{"id":3965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3964,"mutability":"mutable","name":"result","nameLocation":"5086:6:20","nodeType":"VariableDeclaration","scope":4091,"src":"5078:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3963,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:20"},"scope":5261,"src":"4996:4226:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4127,"nodeType":"Block","src":"9461:128:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4107,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"9485:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4108,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"9488:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4109,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"9491:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4106,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4091,4128],"referencedDeclaration":4091,"src":"9478:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4114,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"9539:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}],"id":4113,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"9522:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3667_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4117,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"9559:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4118,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"9562:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4119,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"9565:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4116,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:20","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4111,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"9506:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"9506:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4105,"id":4126,"nodeType":"Return","src":"9471:111:20"}]},"documentation":{"id":4092,"nodeType":"StructuredDocumentation","src":"9228:118:20","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4128,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:20","nodeType":"FunctionDefinition","parameters":{"id":4102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4094,"mutability":"mutable","name":"x","nameLocation":"9375:1:20","nodeType":"VariableDeclaration","scope":4128,"src":"9367:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4093,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4096,"mutability":"mutable","name":"y","nameLocation":"9386:1:20","nodeType":"VariableDeclaration","scope":4128,"src":"9378:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4095,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4098,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:20","nodeType":"VariableDeclaration","scope":4128,"src":"9389:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4097,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4101,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:20","nodeType":"VariableDeclaration","scope":4128,"src":"9410:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"},"typeName":{"id":4100,"nodeType":"UserDefinedTypeName","pathNode":{"id":4099,"name":"Rounding","nameLocations":["9410:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3667,"src":"9410:8:20"},"referencedDeclaration":3667,"src":"9410:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:20"},"returnParameters":{"id":4105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4128,"src":"9452:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4103,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:20"},"scope":5261,"src":"9351:238:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4224,"nodeType":"Block","src":"10223:1849:20","statements":[{"id":4223,"nodeType":"UncheckedBlock","src":"10233:1833:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4138,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"10261:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4143,"nodeType":"IfStatement","src":"10257:20:20","trueBody":{"expression":{"hexValue":"30","id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4137,"id":4142,"nodeType":"Return","src":"10269:8:20"}},{"assignments":[4145],"declarations":[{"constant":false,"id":4145,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:20","nodeType":"VariableDeclaration","scope":4223,"src":"10748:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4144,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4149,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4146,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"10768:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4147,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"10772:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:20"},{"assignments":[4151],"declarations":[{"constant":false,"id":4151,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:20","nodeType":"VariableDeclaration","scope":4223,"src":"10787:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4153,"initialValue":{"id":4152,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"10801:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:20"},{"assignments":[4155],"declarations":[{"constant":false,"id":4155,"mutability":"mutable","name":"x","nameLocation":"10945:1:20","nodeType":"VariableDeclaration","scope":4223,"src":"10938:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4154,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4157,"initialValue":{"hexValue":"30","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:20"},{"assignments":[4159],"declarations":[{"constant":false,"id":4159,"mutability":"mutable","name":"y","nameLocation":"10971:1:20","nodeType":"VariableDeclaration","scope":4223,"src":"10964:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4158,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4161,"initialValue":{"hexValue":"31","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:20"},{"body":{"id":4198,"nodeType":"Block","src":"11014:882:20","statements":[{"assignments":[4166],"declarations":[{"constant":false,"id":4166,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:20","nodeType":"VariableDeclaration","scope":4198,"src":"11032:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4165,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4170,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4167,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"11051:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4168,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"11057:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:20"},{"expression":{"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4171,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"11086:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4172,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"11091:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4173,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4174,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"11191:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4175,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"11436:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4176,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"11442:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4177,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"11454:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4182,"nodeType":"ExpressionStatement","src":"11085:395:20"},{"expression":{"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4183,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"11500:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4184,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"11503:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4185,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4186,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"11585:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4187,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"11839:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4188,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"11843:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4191,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"11854:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4189,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:20","typeDescriptions":{}}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4197,"nodeType":"ExpressionStatement","src":"11499:382:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4162,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"10998:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4199,"nodeType":"WhileStatement","src":"10991:905:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4200,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"11914:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4205,"nodeType":"IfStatement","src":"11910:22:20","trueBody":{"expression":{"hexValue":"30","id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4137,"id":4204,"nodeType":"Return","src":"11924:8:20"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4207,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"11983:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4210,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"11990:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:20","subExpression":{"id":4213,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"12003:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4211,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:20","typeDescriptions":{}}},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4219,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"12015:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:20","typeDescriptions":{}}},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4206,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"11975:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4137,"id":4222,"nodeType":"Return","src":"11968:50:20"}]}]},"documentation":{"id":4129,"nodeType":"StructuredDocumentation","src":"9595:553:20","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4225,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:20","nodeType":"FunctionDefinition","parameters":{"id":4134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4131,"mutability":"mutable","name":"a","nameLocation":"10177:1:20","nodeType":"VariableDeclaration","scope":4225,"src":"10169:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4130,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4133,"mutability":"mutable","name":"n","nameLocation":"10188:1:20","nodeType":"VariableDeclaration","scope":4225,"src":"10180:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4132,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:20"},"returnParameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4225,"src":"10214:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4135,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:20"},"scope":5261,"src":"10153:1919:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4245,"nodeType":"Block","src":"12672:82:20","statements":[{"id":4244,"nodeType":"UncheckedBlock","src":"12682:66:20","statements":[{"expression":{"arguments":[{"id":4237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"12725:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4238,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"12728:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4241,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"12735:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4235,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"12713:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5261_$","typeString":"type(library Math)"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:20","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4282,"src":"12713:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4234,"id":4243,"nodeType":"Return","src":"12706:31:20"}]}]},"documentation":{"id":4226,"nodeType":"StructuredDocumentation","src":"12078:514:20","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4246,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:20","nodeType":"FunctionDefinition","parameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4228,"mutability":"mutable","name":"a","nameLocation":"12626:1:20","nodeType":"VariableDeclaration","scope":4246,"src":"12618:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4227,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4230,"mutability":"mutable","name":"p","nameLocation":"12637:1:20","nodeType":"VariableDeclaration","scope":4246,"src":"12629:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:20"},"returnParameters":{"id":4234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4246,"src":"12663:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4232,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:20"},"scope":5261,"src":"12597:157:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4281,"nodeType":"Block","src":"13524:174:20","statements":[{"assignments":[4259,4261],"declarations":[{"constant":false,"id":4259,"mutability":"mutable","name":"success","nameLocation":"13540:7:20","nodeType":"VariableDeclaration","scope":4281,"src":"13535:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4258,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4261,"mutability":"mutable","name":"result","nameLocation":"13557:6:20","nodeType":"VariableDeclaration","scope":4281,"src":"13549:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4260,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4267,"initialValue":{"arguments":[{"id":4263,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"13577:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4264,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"13580:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4265,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"13583:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4262,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4306,4388],"referencedDeclaration":4306,"src":"13567:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:20"},{"condition":{"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:20","subExpression":{"id":4268,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"13600:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4278,"nodeType":"IfStatement","src":"13595:74:20","trueBody":{"id":4277,"nodeType":"Block","src":"13609:60:20","statements":[{"expression":{"arguments":[{"expression":{"id":4273,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"13635:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1348_$","typeString":"type(library Panic)"}},"id":4274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1315,"src":"13635:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4270,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"13623:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1348_$","typeString":"type(library Panic)"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"13623:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4276,"nodeType":"ExpressionStatement","src":"13623:35:20"}]}},{"expression":{"id":4279,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"13685:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4257,"id":4280,"nodeType":"Return","src":"13678:13:20"}]},"documentation":{"id":4247,"nodeType":"StructuredDocumentation","src":"12760:678:20","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4282,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:20","nodeType":"FunctionDefinition","parameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"b","nameLocation":"13467:1:20","nodeType":"VariableDeclaration","scope":4282,"src":"13459:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4248,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4251,"mutability":"mutable","name":"e","nameLocation":"13478:1:20","nodeType":"VariableDeclaration","scope":4282,"src":"13470:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4253,"mutability":"mutable","name":"m","nameLocation":"13489:1:20","nodeType":"VariableDeclaration","scope":4282,"src":"13481:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4252,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:20"},"returnParameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4282,"src":"13515:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:20"},"scope":5261,"src":"13443:255:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4305,"nodeType":"Block","src":"14552:1493:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4296,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"14566:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4303,"nodeType":"IfStatement","src":"14562:29:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4295,"id":4302,"nodeType":"Return","src":"14574:17:20"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:20","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:20"},"nodeType":"YulFunctionCall","src":"14651:11:20"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:20","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:20"},"nodeType":"YulFunctionCall","src":"15563:17:20"},"nodeType":"YulExpressionStatement","src":"15563:17:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:20"},"nodeType":"YulFunctionCall","src":"15600:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:20"},"nodeType":"YulFunctionCall","src":"15593:28:20"},"nodeType":"YulExpressionStatement","src":"15593:28:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:20"},"nodeType":"YulFunctionCall","src":"15641:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:20"},"nodeType":"YulFunctionCall","src":"15634:28:20"},"nodeType":"YulExpressionStatement","src":"15634:28:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:20"},"nodeType":"YulFunctionCall","src":"15682:14:20"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:20"},"nodeType":"YulFunctionCall","src":"15675:25:20"},"nodeType":"YulExpressionStatement","src":"15675:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:20"},"nodeType":"YulFunctionCall","src":"15720:14:20"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:20"},"nodeType":"YulFunctionCall","src":"15713:25:20"},"nodeType":"YulExpressionStatement","src":"15713:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:20"},"nodeType":"YulFunctionCall","src":"15758:14:20"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:20"},"nodeType":"YulFunctionCall","src":"15751:25:20"},"nodeType":"YulExpressionStatement","src":"15751:25:20"},{"nodeType":"YulAssignment","src":"15938:57:20","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:20"},"nodeType":"YulFunctionCall","src":"15960:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:20","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:20","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:20","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:20","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:20"},"nodeType":"YulFunctionCall","src":"15949:46:20"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:20"}]},{"nodeType":"YulAssignment","src":"16008:21:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:20","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:20"},"nodeType":"YulFunctionCall","src":"16018:11:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4285,"isOffset":false,"isSlot":false,"src":"15698:1:20","valueSize":1},{"declaration":4287,"isOffset":false,"isSlot":false,"src":"15736:1:20","valueSize":1},{"declaration":4289,"isOffset":false,"isSlot":false,"src":"15774:1:20","valueSize":1},{"declaration":4294,"isOffset":false,"isSlot":false,"src":"16008:6:20","valueSize":1},{"declaration":4292,"isOffset":false,"isSlot":false,"src":"15938:7:20","valueSize":1}],"flags":["memory-safe"],"id":4304,"nodeType":"InlineAssembly","src":"14601:1438:20"}]},"documentation":{"id":4283,"nodeType":"StructuredDocumentation","src":"13704:738:20","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4306,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:20","nodeType":"FunctionDefinition","parameters":{"id":4290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"mutability":"mutable","name":"b","nameLocation":"14474:1:20","nodeType":"VariableDeclaration","scope":4306,"src":"14466:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4284,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4287,"mutability":"mutable","name":"e","nameLocation":"14485:1:20","nodeType":"VariableDeclaration","scope":4306,"src":"14477:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4286,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4289,"mutability":"mutable","name":"m","nameLocation":"14496:1:20","nodeType":"VariableDeclaration","scope":4306,"src":"14488:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4288,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:20"},"returnParameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4292,"mutability":"mutable","name":"success","nameLocation":"14527:7:20","nodeType":"VariableDeclaration","scope":4306,"src":"14522:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4291,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4294,"mutability":"mutable","name":"result","nameLocation":"14544:6:20","nodeType":"VariableDeclaration","scope":4306,"src":"14536:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4293,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:20"},"scope":5261,"src":"14447:1598:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4341,"nodeType":"Block","src":"16242:179:20","statements":[{"assignments":[4319,4321],"declarations":[{"constant":false,"id":4319,"mutability":"mutable","name":"success","nameLocation":"16258:7:20","nodeType":"VariableDeclaration","scope":4341,"src":"16253:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4318,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4321,"mutability":"mutable","name":"result","nameLocation":"16280:6:20","nodeType":"VariableDeclaration","scope":4341,"src":"16267:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4320,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4327,"initialValue":{"arguments":[{"id":4323,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"16300:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4324,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"16303:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4325,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"16306:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4322,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4306,4388],"referencedDeclaration":4388,"src":"16290:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:20"},{"condition":{"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:20","subExpression":{"id":4328,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"16323:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4338,"nodeType":"IfStatement","src":"16318:74:20","trueBody":{"id":4337,"nodeType":"Block","src":"16332:60:20","statements":[{"expression":{"arguments":[{"expression":{"id":4333,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"16358:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1348_$","typeString":"type(library Panic)"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1315,"src":"16358:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4330,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"16346:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1348_$","typeString":"type(library Panic)"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"16346:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4336,"nodeType":"ExpressionStatement","src":"16346:35:20"}]}},{"expression":{"id":4339,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"16408:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4317,"id":4340,"nodeType":"Return","src":"16401:13:20"}]},"documentation":{"id":4307,"nodeType":"StructuredDocumentation","src":"16051:85:20","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4342,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:20","nodeType":"FunctionDefinition","parameters":{"id":4314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"b","nameLocation":"16170:1:20","nodeType":"VariableDeclaration","scope":4342,"src":"16157:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4308,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4311,"mutability":"mutable","name":"e","nameLocation":"16186:1:20","nodeType":"VariableDeclaration","scope":4342,"src":"16173:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4310,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4313,"mutability":"mutable","name":"m","nameLocation":"16202:1:20","nodeType":"VariableDeclaration","scope":4342,"src":"16189:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4312,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:20"},"returnParameters":{"id":4317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4342,"src":"16228:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4315,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:20"},"scope":5261,"src":"16141:280:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4387,"nodeType":"Block","src":"16675:771:20","statements":[{"condition":{"arguments":[{"id":4357,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"16700:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4356,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"16689:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4366,"nodeType":"IfStatement","src":"16685:47:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4360,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4355,"id":4365,"nodeType":"Return","src":"16704:28:20"}},{"assignments":[4368],"declarations":[{"constant":false,"id":4368,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:20","nodeType":"VariableDeclaration","scope":4387,"src":"16743:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4371,"initialValue":{"expression":{"id":4369,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"16758:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:20","memberName":"length","nodeType":"MemberAccess","src":"16758:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:20"},{"expression":{"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"16848:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4375,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"16874:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:20","memberName":"length","nodeType":"MemberAccess","src":"16874:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4377,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"16884:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:20","memberName":"length","nodeType":"MemberAccess","src":"16884:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4379,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"16894:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4380,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"16900:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4381,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"16903:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4382,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"16906:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4373,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4385,"nodeType":"ExpressionStatement","src":"16848:60:20"},{"AST":{"nodeType":"YulBlock","src":"16944:496:20","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:20","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:20"},"nodeType":"YulFunctionCall","src":"16973:17:20"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:20","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:20","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:20"},"nodeType":"YulFunctionCall","src":"17102:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:20","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:20"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:20"},"nodeType":"YulFunctionCall","src":"17124:13:20"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:20"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:20"},"nodeType":"YulFunctionCall","src":"17091:62:20"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:20"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:20"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:20"},"nodeType":"YulFunctionCall","src":"17302:20:20"},"nodeType":"YulExpressionStatement","src":"17302:20:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:20","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:20"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:20"},"nodeType":"YulFunctionCall","src":"17411:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:20"},"nodeType":"YulFunctionCall","src":"17398:32:20"},"nodeType":"YulExpressionStatement","src":"17398:32:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":4368,"isOffset":false,"isSlot":false,"src":"17148:4:20","valueSize":1},{"declaration":4368,"isOffset":false,"isSlot":false,"src":"17317:4:20","valueSize":1},{"declaration":4368,"isOffset":false,"isSlot":false,"src":"17424:4:20","valueSize":1},{"declaration":4354,"isOffset":false,"isSlot":false,"src":"16977:6:20","valueSize":1},{"declaration":4354,"isOffset":false,"isSlot":false,"src":"17130:6:20","valueSize":1},{"declaration":4354,"isOffset":false,"isSlot":false,"src":"17309:6:20","valueSize":1},{"declaration":4352,"isOffset":false,"isSlot":false,"src":"17080:7:20","valueSize":1}],"flags":["memory-safe"],"id":4386,"nodeType":"InlineAssembly","src":"16919:521:20"}]},"documentation":{"id":4343,"nodeType":"StructuredDocumentation","src":"16427:88:20","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4388,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:20","nodeType":"FunctionDefinition","parameters":{"id":4350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4345,"mutability":"mutable","name":"b","nameLocation":"16561:1:20","nodeType":"VariableDeclaration","scope":4388,"src":"16548:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4344,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4347,"mutability":"mutable","name":"e","nameLocation":"16585:1:20","nodeType":"VariableDeclaration","scope":4388,"src":"16572:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4346,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4349,"mutability":"mutable","name":"m","nameLocation":"16609:1:20","nodeType":"VariableDeclaration","scope":4388,"src":"16596:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4348,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:20"},"returnParameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4352,"mutability":"mutable","name":"success","nameLocation":"16645:7:20","nodeType":"VariableDeclaration","scope":4388,"src":"16640:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4351,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4354,"mutability":"mutable","name":"result","nameLocation":"16667:6:20","nodeType":"VariableDeclaration","scope":4388,"src":"16654:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4353,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:20"},"scope":5261,"src":"16520:926:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4420,"nodeType":"Block","src":"17601:176:20","statements":[{"body":{"id":4416,"nodeType":"Block","src":"17658:92:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4407,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"17676:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4409,"indexExpression":{"id":4408,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"17686:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4415,"nodeType":"IfStatement","src":"17672:68:20","trueBody":{"id":4414,"nodeType":"Block","src":"17695:45:20","statements":[{"expression":{"hexValue":"66616c7365","id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4395,"id":4413,"nodeType":"Return","src":"17713:12:20"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4400,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"17631:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4401,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"17635:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:20","memberName":"length","nodeType":"MemberAccess","src":"17635:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4417,"initializationExpression":{"assignments":[4397],"declarations":[{"constant":false,"id":4397,"mutability":"mutable","name":"i","nameLocation":"17624:1:20","nodeType":"VariableDeclaration","scope":4417,"src":"17616:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4396,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4399,"initialValue":{"hexValue":"30","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:20"},"loopExpression":{"expression":{"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:20","subExpression":{"id":4404,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"17655:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4406,"nodeType":"ExpressionStatement","src":"17653:3:20"},"nodeType":"ForStatement","src":"17611:139:20"},{"expression":{"hexValue":"74727565","id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4395,"id":4419,"nodeType":"Return","src":"17759:11:20"}]},"documentation":{"id":4389,"nodeType":"StructuredDocumentation","src":"17452:72:20","text":" @dev Returns whether the provided byte array is zero."},"id":4421,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:20","nodeType":"FunctionDefinition","parameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:20","nodeType":"VariableDeclaration","scope":4421,"src":"17549:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4390,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:20"},"returnParameters":{"id":4395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4421,"src":"17595:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4393,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:20"},"scope":5261,"src":"17529:248:20","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4639,"nodeType":"Block","src":"18137:5124:20","statements":[{"id":4638,"nodeType":"UncheckedBlock","src":"18147:5108:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4429,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"18241:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4435,"nodeType":"IfStatement","src":"18237:53:20","trueBody":{"id":4434,"nodeType":"Block","src":"18249:41:20","statements":[{"expression":{"id":4432,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"18274:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4428,"id":4433,"nodeType":"Return","src":"18267:8:20"}]}},{"assignments":[4437],"declarations":[{"constant":false,"id":4437,"mutability":"mutable","name":"aa","nameLocation":"19225:2:20","nodeType":"VariableDeclaration","scope":4638,"src":"19217:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4436,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4439,"initialValue":{"id":4438,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"19230:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:20"},{"assignments":[4441],"declarations":[{"constant":false,"id":4441,"mutability":"mutable","name":"xn","nameLocation":"19253:2:20","nodeType":"VariableDeclaration","scope":4638,"src":"19245:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4443,"initialValue":{"hexValue":"31","id":4442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4444,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"19278:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4459,"nodeType":"IfStatement","src":"19274:92:20","trueBody":{"id":4458,"nodeType":"Block","src":"19296:70:20","statements":[{"expression":{"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4450,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"19314:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4453,"nodeType":"ExpressionStatement","src":"19314:10:20"},{"expression":{"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4454,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"19342:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4457,"nodeType":"ExpressionStatement","src":"19342:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4460,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"19383:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4475,"nodeType":"IfStatement","src":"19379:90:20","trueBody":{"id":4474,"nodeType":"Block","src":"19400:69:20","statements":[{"expression":{"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4466,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"19418:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4469,"nodeType":"ExpressionStatement","src":"19418:9:20"},{"expression":{"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4470,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"19445:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4473,"nodeType":"ExpressionStatement","src":"19445:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4476,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"19486:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4480,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4491,"nodeType":"IfStatement","src":"19482:90:20","trueBody":{"id":4490,"nodeType":"Block","src":"19503:69:20","statements":[{"expression":{"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4482,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"19521:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4485,"nodeType":"ExpressionStatement","src":"19521:9:20"},{"expression":{"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4486,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"19548:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4489,"nodeType":"ExpressionStatement","src":"19548:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4492,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"19589:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4507,"nodeType":"IfStatement","src":"19585:89:20","trueBody":{"id":4506,"nodeType":"Block","src":"19606:68:20","statements":[{"expression":{"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4498,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"19624:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4501,"nodeType":"ExpressionStatement","src":"19624:9:20"},{"expression":{"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4502,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"19651:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4505,"nodeType":"ExpressionStatement","src":"19651:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4508,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"19691:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4523,"nodeType":"IfStatement","src":"19687:87:20","trueBody":{"id":4522,"nodeType":"Block","src":"19707:67:20","statements":[{"expression":{"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4514,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"19725:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4517,"nodeType":"ExpressionStatement","src":"19725:8:20"},{"expression":{"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4518,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"19751:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4521,"nodeType":"ExpressionStatement","src":"19751:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4524,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"19791:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4539,"nodeType":"IfStatement","src":"19787:87:20","trueBody":{"id":4538,"nodeType":"Block","src":"19807:67:20","statements":[{"expression":{"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4530,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"19825:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4533,"nodeType":"ExpressionStatement","src":"19825:8:20"},{"expression":{"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4534,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"19851:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4537,"nodeType":"ExpressionStatement","src":"19851:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4540,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"19891:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4544,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4551,"nodeType":"IfStatement","src":"19887:61:20","trueBody":{"id":4550,"nodeType":"Block","src":"19907:41:20","statements":[{"expression":{"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4546,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"19925:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4549,"nodeType":"ExpressionStatement","src":"19925:8:20"}]}},{"expression":{"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4552,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"20368:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4554,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"20378:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4560,"nodeType":"ExpressionStatement","src":"20368:18:20"},{"expression":{"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4561,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22273:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4562,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22279:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4563,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"22284:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4564,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22288:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4567,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4571,"nodeType":"ExpressionStatement","src":"22273:23:20"},{"expression":{"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4572,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22382:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4573,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22388:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4574,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"22393:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4575,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22397:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4582,"nodeType":"ExpressionStatement","src":"22382:23:20"},{"expression":{"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4583,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22493:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4584,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22499:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4585,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"22504:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4586,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22508:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4593,"nodeType":"ExpressionStatement","src":"22493:23:20"},{"expression":{"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4594,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22602:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4595,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22608:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4596,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"22613:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4597,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22617:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4604,"nodeType":"ExpressionStatement","src":"22602:23:20"},{"expression":{"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4605,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22712:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4606,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22718:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4607,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"22723:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4608,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22727:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4615,"nodeType":"ExpressionStatement","src":"22712:23:20"},{"expression":{"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4616,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22822:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4617,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22828:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4618,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"22833:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4619,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"22837:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4622,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4626,"nodeType":"ExpressionStatement","src":"22822:23:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"23211:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4630,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"23232:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4631,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"23237:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4632,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"23241:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4628,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"23216:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"23216:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4428,"id":4637,"nodeType":"Return","src":"23204:40:20"}]}]},"documentation":{"id":4422,"nodeType":"StructuredDocumentation","src":"17783:292:20","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4640,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:20","nodeType":"FunctionDefinition","parameters":{"id":4425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4424,"mutability":"mutable","name":"a","nameLocation":"18102:1:20","nodeType":"VariableDeclaration","scope":4640,"src":"18094:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:20"},"returnParameters":{"id":4428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4640,"src":"18128:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:20"},"scope":5261,"src":"18080:5181:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4673,"nodeType":"Block","src":"23434:171:20","statements":[{"id":4672,"nodeType":"UncheckedBlock","src":"23444:155:20","statements":[{"assignments":[4652],"declarations":[{"constant":false,"id":4652,"mutability":"mutable","name":"result","nameLocation":"23476:6:20","nodeType":"VariableDeclaration","scope":4672,"src":"23468:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4651,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4656,"initialValue":{"arguments":[{"id":4654,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"23490:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4653,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4640,4674],"referencedDeclaration":4640,"src":"23485:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4657,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"23513:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4661,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"23555:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}],"id":4660,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"23538:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3667_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4663,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"23568:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4664,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"23577:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4666,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"23586:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4658,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"23522:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"23522:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4650,"id":4671,"nodeType":"Return","src":"23506:82:20"}]}]},"documentation":{"id":4641,"nodeType":"StructuredDocumentation","src":"23267:86:20","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4674,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:20","nodeType":"FunctionDefinition","parameters":{"id":4647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4643,"mutability":"mutable","name":"a","nameLocation":"23380:1:20","nodeType":"VariableDeclaration","scope":4674,"src":"23372:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4642,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4646,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:20","nodeType":"VariableDeclaration","scope":4674,"src":"23383:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"},"typeName":{"id":4645,"nodeType":"UserDefinedTypeName","pathNode":{"id":4644,"name":"Rounding","nameLocations":["23383:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3667,"src":"23383:8:20"},"referencedDeclaration":3667,"src":"23383:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:20"},"returnParameters":{"id":4650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4674,"src":"23425:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4648,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:20"},"scope":5261,"src":"23358:247:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4869,"nodeType":"Block","src":"23796:981:20","statements":[{"assignments":[4683],"declarations":[{"constant":false,"id":4683,"mutability":"mutable","name":"result","nameLocation":"23814:6:20","nodeType":"VariableDeclaration","scope":4869,"src":"23806:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4682,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4685,"initialValue":{"hexValue":"30","id":4684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:20"},{"assignments":[4687],"declarations":[{"constant":false,"id":4687,"mutability":"mutable","name":"exp","nameLocation":"23842:3:20","nodeType":"VariableDeclaration","scope":4869,"src":"23834:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4686,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4688,"nodeType":"VariableDeclarationStatement","src":"23834:11:20"},{"id":4866,"nodeType":"UncheckedBlock","src":"23855:893:20","statements":[{"expression":{"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4689,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"23879:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"23907:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4691,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"23891:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"23891:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4704,"nodeType":"ExpressionStatement","src":"23879:51:20"},{"expression":{"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"23944:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4706,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"23954:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4708,"nodeType":"ExpressionStatement","src":"23944:13:20"},{"expression":{"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"23971:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4710,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"23981:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4712,"nodeType":"ExpressionStatement","src":"23971:13:20"},{"expression":{"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4713,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"23999:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"24026:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4715,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"24010:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"24010:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4728,"nodeType":"ExpressionStatement","src":"23999:49:20"},{"expression":{"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"24062:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4730,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24072:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4732,"nodeType":"ExpressionStatement","src":"24062:13:20"},{"expression":{"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"24089:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4734,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24099:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4736,"nodeType":"ExpressionStatement","src":"24089:13:20"},{"expression":{"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4737,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24117:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"24144:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4739,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"24128:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"24128:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4752,"nodeType":"ExpressionStatement","src":"24117:49:20"},{"expression":{"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"24180:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4754,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24190:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4756,"nodeType":"ExpressionStatement","src":"24180:13:20"},{"expression":{"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"24207:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4758,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24217:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4760,"nodeType":"ExpressionStatement","src":"24207:13:20"},{"expression":{"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4761,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24235:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"24262:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4769,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:20","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4763,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"24246:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"24246:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4776,"nodeType":"ExpressionStatement","src":"24235:49:20"},{"expression":{"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"24298:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4778,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24308:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4780,"nodeType":"ExpressionStatement","src":"24298:13:20"},{"expression":{"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"24325:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4782,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24335:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4784,"nodeType":"ExpressionStatement","src":"24325:13:20"},{"expression":{"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4785,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24353:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"24379:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4793,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4787,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"24363:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"24363:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4800,"nodeType":"ExpressionStatement","src":"24353:47:20"},{"expression":{"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"24414:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4802,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24424:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4804,"nodeType":"ExpressionStatement","src":"24414:13:20"},{"expression":{"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"24441:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4806,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24451:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4808,"nodeType":"ExpressionStatement","src":"24441:13:20"},{"expression":{"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4809,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24469:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"24495:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:20","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4811,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"24479:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"24479:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4824,"nodeType":"ExpressionStatement","src":"24469:47:20"},{"expression":{"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"24530:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4826,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24540:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4828,"nodeType":"ExpressionStatement","src":"24530:13:20"},{"expression":{"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4829,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"24557:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4830,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24567:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4832,"nodeType":"ExpressionStatement","src":"24557:13:20"},{"expression":{"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4833,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24585:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"24611:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4835,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"24595:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"24595:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4848,"nodeType":"ExpressionStatement","src":"24585:47:20"},{"expression":{"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"24646:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4850,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24656:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4852,"nodeType":"ExpressionStatement","src":"24646:13:20"},{"expression":{"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4853,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"24673:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4854,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24683:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4856,"nodeType":"ExpressionStatement","src":"24673:13:20"},{"expression":{"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4857,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"24701:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"24727:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4858,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"24711:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"24711:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4865,"nodeType":"ExpressionStatement","src":"24701:36:20"}]},{"expression":{"id":4867,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"24764:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4681,"id":4868,"nodeType":"Return","src":"24757:13:20"}]},"documentation":{"id":4675,"nodeType":"StructuredDocumentation","src":"23611:119:20","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4870,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:20","nodeType":"FunctionDefinition","parameters":{"id":4678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4677,"mutability":"mutable","name":"value","nameLocation":"23757:5:20","nodeType":"VariableDeclaration","scope":4870,"src":"23749:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4676,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:20"},"returnParameters":{"id":4681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4870,"src":"23787:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4679,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:20"},"scope":5261,"src":"23735:1042:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4903,"nodeType":"Block","src":"25010:175:20","statements":[{"id":4902,"nodeType":"UncheckedBlock","src":"25020:159:20","statements":[{"assignments":[4882],"declarations":[{"constant":false,"id":4882,"mutability":"mutable","name":"result","nameLocation":"25052:6:20","nodeType":"VariableDeclaration","scope":4902,"src":"25044:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4881,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4886,"initialValue":{"arguments":[{"id":4884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"25066:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4883,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4870,4904],"referencedDeclaration":4870,"src":"25061:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"25093:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4891,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"25135:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}],"id":4890,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"25118:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3667_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4894,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"25153:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"25162:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4888,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"25102:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"25102:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4880,"id":4901,"nodeType":"Return","src":"25086:82:20"}]}]},"documentation":{"id":4871,"nodeType":"StructuredDocumentation","src":"24783:142:20","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4904,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:20","nodeType":"FunctionDefinition","parameters":{"id":4877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4873,"mutability":"mutable","name":"value","nameLocation":"24952:5:20","nodeType":"VariableDeclaration","scope":4904,"src":"24944:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4872,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4876,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:20","nodeType":"VariableDeclaration","scope":4904,"src":"24959:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"},"typeName":{"id":4875,"nodeType":"UserDefinedTypeName","pathNode":{"id":4874,"name":"Rounding","nameLocations":["24959:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3667,"src":"24959:8:20"},"referencedDeclaration":3667,"src":"24959:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:20"},"returnParameters":{"id":4880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4904,"src":"25001:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:20"},"scope":5261,"src":"24930:255:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5032,"nodeType":"Block","src":"25378:854:20","statements":[{"assignments":[4913],"declarations":[{"constant":false,"id":4913,"mutability":"mutable","name":"result","nameLocation":"25396:6:20","nodeType":"VariableDeclaration","scope":5032,"src":"25388:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4912,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4915,"initialValue":{"hexValue":"30","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:20"},{"id":5029,"nodeType":"UncheckedBlock","src":"25416:787:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"25444:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4932,"nodeType":"IfStatement","src":"25440:103:20","trueBody":{"id":4931,"nodeType":"Block","src":"25463:80:20","statements":[{"expression":{"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"25481:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4926,"nodeType":"ExpressionStatement","src":"25481:17:20"},{"expression":{"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4927,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"25516:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4930,"nodeType":"ExpressionStatement","src":"25516:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"25560:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4949,"nodeType":"IfStatement","src":"25556:103:20","trueBody":{"id":4948,"nodeType":"Block","src":"25579:80:20","statements":[{"expression":{"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"25597:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4943,"nodeType":"ExpressionStatement","src":"25597:17:20"},{"expression":{"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4944,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"25632:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4947,"nodeType":"ExpressionStatement","src":"25632:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"25676:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4966,"nodeType":"IfStatement","src":"25672:103:20","trueBody":{"id":4965,"nodeType":"Block","src":"25695:80:20","statements":[{"expression":{"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"25713:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4960,"nodeType":"ExpressionStatement","src":"25713:17:20"},{"expression":{"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4961,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"25748:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4964,"nodeType":"ExpressionStatement","src":"25748:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"25792:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4983,"nodeType":"IfStatement","src":"25788:100:20","trueBody":{"id":4982,"nodeType":"Block","src":"25810:78:20","statements":[{"expression":{"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"25828:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4977,"nodeType":"ExpressionStatement","src":"25828:16:20"},{"expression":{"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4978,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"25862:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4981,"nodeType":"ExpressionStatement","src":"25862:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"25905:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5000,"nodeType":"IfStatement","src":"25901:100:20","trueBody":{"id":4999,"nodeType":"Block","src":"25923:78:20","statements":[{"expression":{"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"25941:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4994,"nodeType":"ExpressionStatement","src":"25941:16:20"},{"expression":{"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4995,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"25975:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4998,"nodeType":"ExpressionStatement","src":"25975:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"26018:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5017,"nodeType":"IfStatement","src":"26014:100:20","trueBody":{"id":5016,"nodeType":"Block","src":"26036:78:20","statements":[{"expression":{"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"26054:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5011,"nodeType":"ExpressionStatement","src":"26054:16:20"},{"expression":{"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"26088:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5015,"nodeType":"ExpressionStatement","src":"26088:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"26131:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5028,"nodeType":"IfStatement","src":"26127:66:20","trueBody":{"id":5027,"nodeType":"Block","src":"26149:44:20","statements":[{"expression":{"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"26167:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5026,"nodeType":"ExpressionStatement","src":"26167:11:20"}]}}]},{"expression":{"id":5030,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"26219:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4911,"id":5031,"nodeType":"Return","src":"26212:13:20"}]},"documentation":{"id":4905,"nodeType":"StructuredDocumentation","src":"25191:120:20","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5033,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:20","nodeType":"FunctionDefinition","parameters":{"id":4908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4907,"mutability":"mutable","name":"value","nameLocation":"25339:5:20","nodeType":"VariableDeclaration","scope":5033,"src":"25331:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4906,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:20"},"returnParameters":{"id":4911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5033,"src":"25369:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4909,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:20"},"scope":5261,"src":"25316:916:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5066,"nodeType":"Block","src":"26467:177:20","statements":[{"id":5065,"nodeType":"UncheckedBlock","src":"26477:161:20","statements":[{"assignments":[5045],"declarations":[{"constant":false,"id":5045,"mutability":"mutable","name":"result","nameLocation":"26509:6:20","nodeType":"VariableDeclaration","scope":5065,"src":"26501:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5044,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5049,"initialValue":{"arguments":[{"id":5047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"26524:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5046,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5033,5067],"referencedDeclaration":5033,"src":"26518:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5050,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"26551:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5054,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"26593:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}],"id":5053,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"26576:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3667_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5057,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"26612:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"26621:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5051,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"26560:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"26560:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5043,"id":5064,"nodeType":"Return","src":"26544:83:20"}]}]},"documentation":{"id":5034,"nodeType":"StructuredDocumentation","src":"26238:143:20","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5067,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:20","nodeType":"FunctionDefinition","parameters":{"id":5040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5036,"mutability":"mutable","name":"value","nameLocation":"26409:5:20","nodeType":"VariableDeclaration","scope":5067,"src":"26401:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5035,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5039,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:20","nodeType":"VariableDeclaration","scope":5067,"src":"26416:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"},"typeName":{"id":5038,"nodeType":"UserDefinedTypeName","pathNode":{"id":5037,"name":"Rounding","nameLocations":["26416:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3667,"src":"26416:8:20"},"referencedDeclaration":3667,"src":"26416:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:20"},"returnParameters":{"id":5043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5067,"src":"26458:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5041,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:20"},"scope":5261,"src":"26386:258:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5203,"nodeType":"Block","src":"26964:674:20","statements":[{"assignments":[5076],"declarations":[{"constant":false,"id":5076,"mutability":"mutable","name":"result","nameLocation":"26982:6:20","nodeType":"VariableDeclaration","scope":5203,"src":"26974:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5075,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5078,"initialValue":{"hexValue":"30","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:20"},{"assignments":[5080],"declarations":[{"constant":false,"id":5080,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:20","nodeType":"VariableDeclaration","scope":5203,"src":"27002:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5079,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5081,"nodeType":"VariableDeclarationStatement","src":"27002:12:20"},{"id":5200,"nodeType":"UncheckedBlock","src":"27024:585:20","statements":[{"expression":{"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5082,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"27048:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"27071:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5083,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"27055:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"27055:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5095,"nodeType":"ExpressionStatement","src":"27048:46:20"},{"expression":{"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"27108:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5097,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"27118:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5101,"nodeType":"ExpressionStatement","src":"27108:20:20"},{"expression":{"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5102,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"27142:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5103,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"27152:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5107,"nodeType":"ExpressionStatement","src":"27142:19:20"},{"expression":{"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5108,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"27176:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"27199:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5109,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"27183:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"27183:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5121,"nodeType":"ExpressionStatement","src":"27176:45:20"},{"expression":{"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"27235:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5123,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"27245:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":5124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5127,"nodeType":"ExpressionStatement","src":"27235:19:20"},{"expression":{"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5128,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"27268:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5129,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"27278:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5133,"nodeType":"ExpressionStatement","src":"27268:18:20"},{"expression":{"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5134,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"27301:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"27324:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5135,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"27308:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"27308:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5147,"nodeType":"ExpressionStatement","src":"27301:45:20"},{"expression":{"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"27360:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5149,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"27370:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5153,"nodeType":"ExpressionStatement","src":"27360:19:20"},{"expression":{"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"27393:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5155,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"27403:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5159,"nodeType":"ExpressionStatement","src":"27393:18:20"},{"expression":{"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5160,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"27426:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"27449:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:20","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5161,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"27433:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"27433:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5173,"nodeType":"ExpressionStatement","src":"27426:45:20"},{"expression":{"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"27485:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5175,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"27495:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5179,"nodeType":"ExpressionStatement","src":"27485:19:20"},{"expression":{"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5180,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"27518:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5181,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"27528:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5185,"nodeType":"ExpressionStatement","src":"27518:18:20"},{"expression":{"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5186,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"27551:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"27577:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5187,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"27561:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"27561:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5199,"nodeType":"ExpressionStatement","src":"27551:47:20"}]},{"expression":{"id":5201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"27625:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5074,"id":5202,"nodeType":"Return","src":"27618:13:20"}]},"documentation":{"id":5068,"nodeType":"StructuredDocumentation","src":"26650:246:20","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5204,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:20","nodeType":"FunctionDefinition","parameters":{"id":5071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5070,"mutability":"mutable","name":"value","nameLocation":"26925:5:20","nodeType":"VariableDeclaration","scope":5204,"src":"26917:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5069,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:20"},"returnParameters":{"id":5074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5204,"src":"26955:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5072,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:20"},"scope":5261,"src":"26901:737:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5240,"nodeType":"Block","src":"27875:184:20","statements":[{"id":5239,"nodeType":"UncheckedBlock","src":"27885:168:20","statements":[{"assignments":[5216],"declarations":[{"constant":false,"id":5216,"mutability":"mutable","name":"result","nameLocation":"27917:6:20","nodeType":"VariableDeclaration","scope":5239,"src":"27909:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5215,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5220,"initialValue":{"arguments":[{"id":5218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"27933:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5217,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5204,5241],"referencedDeclaration":5204,"src":"27926:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5221,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"27960:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5225,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"28002:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}],"id":5224,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"27985:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3667_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"28021:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"28036:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5222,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"27969:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"27969:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5214,"id":5238,"nodeType":"Return","src":"27953:89:20"}]}]},"documentation":{"id":5205,"nodeType":"StructuredDocumentation","src":"27644:144:20","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5241,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:20","nodeType":"FunctionDefinition","parameters":{"id":5211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5207,"mutability":"mutable","name":"value","nameLocation":"27817:5:20","nodeType":"VariableDeclaration","scope":5241,"src":"27809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5206,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5210,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:20","nodeType":"VariableDeclaration","scope":5241,"src":"27824:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"},"typeName":{"id":5209,"nodeType":"UserDefinedTypeName","pathNode":{"id":5208,"name":"Rounding","nameLocations":["27824:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3667,"src":"27824:8:20"},"referencedDeclaration":3667,"src":"27824:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:20"},"returnParameters":{"id":5214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5241,"src":"27866:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5212,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:20"},"scope":5261,"src":"27793:266:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5259,"nodeType":"Block","src":"28257:48:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5252,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"28280:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}],"id":5251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5250,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:20","typeDescriptions":{}}},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5249,"id":5258,"nodeType":"Return","src":"28267:31:20"}]},"documentation":{"id":5242,"nodeType":"StructuredDocumentation","src":"28065:113:20","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5260,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:20","nodeType":"FunctionDefinition","parameters":{"id":5246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5245,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:20","nodeType":"VariableDeclaration","scope":5260,"src":"28209:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"},"typeName":{"id":5244,"nodeType":"UserDefinedTypeName","pathNode":{"id":5243,"name":"Rounding","nameLocations":["28209:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3667,"src":"28209:8:20"},"referencedDeclaration":3667,"src":"28209:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3667","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:20"},"returnParameters":{"id":5249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5260,"src":"28251:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5247,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:20"},"scope":5261,"src":"28183:122:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5262,"src":"281:28026:20","usedErrors":[],"usedEvents":[]}],"src":"103:28205:20"},"id":20},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7026]},"id":7027,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5263,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5264,"nodeType":"StructuredDocumentation","src":"218:550:21","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7026,"linearizedBaseContracts":[7026],"name":"SafeCast","nameLocation":"777:8:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5265,"nodeType":"StructuredDocumentation","src":"792:68:21","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5271,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:21","nodeType":"ErrorDefinition","parameters":{"id":5270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5267,"mutability":"mutable","name":"bits","nameLocation":"908:4:21","nodeType":"VariableDeclaration","scope":5271,"src":"902:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5266,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5269,"mutability":"mutable","name":"value","nameLocation":"922:5:21","nodeType":"VariableDeclaration","scope":5271,"src":"914:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5268,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:21"},"src":"865:64:21"},{"documentation":{"id":5272,"nodeType":"StructuredDocumentation","src":"935:75:21","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5276,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:21","nodeType":"ErrorDefinition","parameters":{"id":5275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5274,"mutability":"mutable","name":"value","nameLocation":"1056:5:21","nodeType":"VariableDeclaration","scope":5276,"src":"1049:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5273,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:21"},"src":"1015:48:21"},{"documentation":{"id":5277,"nodeType":"StructuredDocumentation","src":"1069:67:21","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5283,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:21","nodeType":"ErrorDefinition","parameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5279,"mutability":"mutable","name":"bits","nameLocation":"1183:4:21","nodeType":"VariableDeclaration","scope":5283,"src":"1177:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5278,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5281,"mutability":"mutable","name":"value","nameLocation":"1196:5:21","nodeType":"VariableDeclaration","scope":5283,"src":"1189:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5280,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:21"},"src":"1141:62:21"},{"documentation":{"id":5284,"nodeType":"StructuredDocumentation","src":"1209:75:21","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5288,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:21","nodeType":"ErrorDefinition","parameters":{"id":5287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5286,"mutability":"mutable","name":"value","nameLocation":"1331:5:21","nodeType":"VariableDeclaration","scope":5288,"src":"1323:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:21"},"src":"1289:49:21"},{"body":{"id":5315,"nodeType":"Block","src":"1695:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"1709:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5298,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5297,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:21","memberName":"max","nodeType":"MemberAccess","src":"1717:17:21","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5309,"nodeType":"IfStatement","src":"1705:105:21","trueBody":{"id":5308,"nodeType":"Block","src":"1736:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:21","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"1793:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5303,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"1757:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5307,"nodeType":"RevertStatement","src":"1750:49:21"}]}},{"expression":{"arguments":[{"id":5312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"1834:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5310,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:21","typeDescriptions":{}}},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5295,"id":5314,"nodeType":"Return","src":"1819:21:21"}]},"documentation":{"id":5289,"nodeType":"StructuredDocumentation","src":"1344:280:21","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5316,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:21","nodeType":"FunctionDefinition","parameters":{"id":5292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5291,"mutability":"mutable","name":"value","nameLocation":"1656:5:21","nodeType":"VariableDeclaration","scope":5316,"src":"1648:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:21"},"returnParameters":{"id":5295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5316,"src":"1686:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5293,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:21","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:21"},"scope":7026,"src":"1629:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5343,"nodeType":"Block","src":"2204:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"2218:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5326,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5325,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:21","memberName":"max","nodeType":"MemberAccess","src":"2226:17:21","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5337,"nodeType":"IfStatement","src":"2214:105:21","trueBody":{"id":5336,"nodeType":"Block","src":"2245:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:21","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"2302:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5331,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"2266:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5335,"nodeType":"RevertStatement","src":"2259:49:21"}]}},{"expression":{"arguments":[{"id":5340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"2343:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5338,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:21","typeDescriptions":{}}},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5323,"id":5342,"nodeType":"Return","src":"2328:21:21"}]},"documentation":{"id":5317,"nodeType":"StructuredDocumentation","src":"1853:280:21","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5344,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:21","nodeType":"FunctionDefinition","parameters":{"id":5320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5319,"mutability":"mutable","name":"value","nameLocation":"2165:5:21","nodeType":"VariableDeclaration","scope":5344,"src":"2157:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5318,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:21"},"returnParameters":{"id":5323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5344,"src":"2195:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5321,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:21","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:21"},"scope":7026,"src":"2138:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5371,"nodeType":"Block","src":"2713:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"2727:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5354,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5353,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:21","memberName":"max","nodeType":"MemberAccess","src":"2735:17:21","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5365,"nodeType":"IfStatement","src":"2723:105:21","trueBody":{"id":5364,"nodeType":"Block","src":"2754:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:21","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"2811:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5359,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"2775:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5363,"nodeType":"RevertStatement","src":"2768:49:21"}]}},{"expression":{"arguments":[{"id":5368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"2852:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5366,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:21","typeDescriptions":{}}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5351,"id":5370,"nodeType":"Return","src":"2837:21:21"}]},"documentation":{"id":5345,"nodeType":"StructuredDocumentation","src":"2362:280:21","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5372,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:21","nodeType":"FunctionDefinition","parameters":{"id":5348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5347,"mutability":"mutable","name":"value","nameLocation":"2674:5:21","nodeType":"VariableDeclaration","scope":5372,"src":"2666:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5346,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:21"},"returnParameters":{"id":5351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5372,"src":"2704:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5349,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:21","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:21"},"scope":7026,"src":"2647:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5399,"nodeType":"Block","src":"3222:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"3236:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5382,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5381,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:21","memberName":"max","nodeType":"MemberAccess","src":"3244:17:21","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5393,"nodeType":"IfStatement","src":"3232:105:21","trueBody":{"id":5392,"nodeType":"Block","src":"3263:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:21","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"3320:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5387,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"3284:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5391,"nodeType":"RevertStatement","src":"3277:49:21"}]}},{"expression":{"arguments":[{"id":5396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"3361:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5394,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:21","typeDescriptions":{}}},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5379,"id":5398,"nodeType":"Return","src":"3346:21:21"}]},"documentation":{"id":5373,"nodeType":"StructuredDocumentation","src":"2871:280:21","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5400,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:21","nodeType":"FunctionDefinition","parameters":{"id":5376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5375,"mutability":"mutable","name":"value","nameLocation":"3183:5:21","nodeType":"VariableDeclaration","scope":5400,"src":"3175:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5374,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:21"},"returnParameters":{"id":5379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5400,"src":"3213:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5377,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:21","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:21"},"scope":7026,"src":"3156:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5427,"nodeType":"Block","src":"3731:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"3745:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5410,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5409,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:21","memberName":"max","nodeType":"MemberAccess","src":"3753:17:21","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5421,"nodeType":"IfStatement","src":"3741:105:21","trueBody":{"id":5420,"nodeType":"Block","src":"3772:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:21","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"3829:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5415,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"3793:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5419,"nodeType":"RevertStatement","src":"3786:49:21"}]}},{"expression":{"arguments":[{"id":5424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"3870:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5422,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:21","typeDescriptions":{}}},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5407,"id":5426,"nodeType":"Return","src":"3855:21:21"}]},"documentation":{"id":5401,"nodeType":"StructuredDocumentation","src":"3380:280:21","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5428,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:21","nodeType":"FunctionDefinition","parameters":{"id":5404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5403,"mutability":"mutable","name":"value","nameLocation":"3692:5:21","nodeType":"VariableDeclaration","scope":5428,"src":"3684:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:21"},"returnParameters":{"id":5407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5428,"src":"3722:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5405,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:21","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:21"},"scope":7026,"src":"3665:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5455,"nodeType":"Block","src":"4240:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"4254:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5438,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5437,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:21","memberName":"max","nodeType":"MemberAccess","src":"4262:17:21","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5449,"nodeType":"IfStatement","src":"4250:105:21","trueBody":{"id":5448,"nodeType":"Block","src":"4281:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"4338:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5443,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"4302:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5447,"nodeType":"RevertStatement","src":"4295:49:21"}]}},{"expression":{"arguments":[{"id":5452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"4379:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5450,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:21","typeDescriptions":{}}},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5435,"id":5454,"nodeType":"Return","src":"4364:21:21"}]},"documentation":{"id":5429,"nodeType":"StructuredDocumentation","src":"3889:280:21","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5456,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:21","nodeType":"FunctionDefinition","parameters":{"id":5432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5431,"mutability":"mutable","name":"value","nameLocation":"4201:5:21","nodeType":"VariableDeclaration","scope":5456,"src":"4193:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:21"},"returnParameters":{"id":5435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5456,"src":"4231:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5433,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:21","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:21"},"scope":7026,"src":"4174:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5483,"nodeType":"Block","src":"4749:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"4763:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5466,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5465,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:21","memberName":"max","nodeType":"MemberAccess","src":"4771:17:21","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5477,"nodeType":"IfStatement","src":"4759:105:21","trueBody":{"id":5476,"nodeType":"Block","src":"4790:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:21","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"4847:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5471,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"4811:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5475,"nodeType":"RevertStatement","src":"4804:49:21"}]}},{"expression":{"arguments":[{"id":5480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"4888:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5478,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:21","typeDescriptions":{}}},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5463,"id":5482,"nodeType":"Return","src":"4873:21:21"}]},"documentation":{"id":5457,"nodeType":"StructuredDocumentation","src":"4398:280:21","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5484,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:21","nodeType":"FunctionDefinition","parameters":{"id":5460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5459,"mutability":"mutable","name":"value","nameLocation":"4710:5:21","nodeType":"VariableDeclaration","scope":5484,"src":"4702:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5458,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:21"},"returnParameters":{"id":5463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5484,"src":"4740:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5461,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:21","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:21"},"scope":7026,"src":"4683:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5511,"nodeType":"Block","src":"5258:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"5272:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5494,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5493,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:21","memberName":"max","nodeType":"MemberAccess","src":"5280:17:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5505,"nodeType":"IfStatement","src":"5268:105:21","trueBody":{"id":5504,"nodeType":"Block","src":"5299:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:21","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"5356:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5499,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"5320:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5503,"nodeType":"RevertStatement","src":"5313:49:21"}]}},{"expression":{"arguments":[{"id":5508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"5397:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5506,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:21","typeDescriptions":{}}},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5491,"id":5510,"nodeType":"Return","src":"5382:21:21"}]},"documentation":{"id":5485,"nodeType":"StructuredDocumentation","src":"4907:280:21","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5512,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:21","nodeType":"FunctionDefinition","parameters":{"id":5488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5487,"mutability":"mutable","name":"value","nameLocation":"5219:5:21","nodeType":"VariableDeclaration","scope":5512,"src":"5211:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5486,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:21"},"returnParameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5512,"src":"5249:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5489,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:21"},"scope":7026,"src":"5192:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5539,"nodeType":"Block","src":"5767:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"5781:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5522,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5521,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:21","memberName":"max","nodeType":"MemberAccess","src":"5789:17:21","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5533,"nodeType":"IfStatement","src":"5777:105:21","trueBody":{"id":5532,"nodeType":"Block","src":"5808:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:21","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"5865:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5527,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"5829:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5531,"nodeType":"RevertStatement","src":"5822:49:21"}]}},{"expression":{"arguments":[{"id":5536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"5906:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5534,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:21","typeDescriptions":{}}},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5519,"id":5538,"nodeType":"Return","src":"5891:21:21"}]},"documentation":{"id":5513,"nodeType":"StructuredDocumentation","src":"5416:280:21","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5540,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:21","nodeType":"FunctionDefinition","parameters":{"id":5516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5515,"mutability":"mutable","name":"value","nameLocation":"5728:5:21","nodeType":"VariableDeclaration","scope":5540,"src":"5720:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5514,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:21"},"returnParameters":{"id":5519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5540,"src":"5758:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5517,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:21","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:21"},"scope":7026,"src":"5701:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5567,"nodeType":"Block","src":"6276:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"6290:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5550,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5549,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:21","memberName":"max","nodeType":"MemberAccess","src":"6298:17:21","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5561,"nodeType":"IfStatement","src":"6286:105:21","trueBody":{"id":5560,"nodeType":"Block","src":"6317:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:21","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"6374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5555,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"6338:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5559,"nodeType":"RevertStatement","src":"6331:49:21"}]}},{"expression":{"arguments":[{"id":5564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"6415:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5562,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:21","typeDescriptions":{}}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5547,"id":5566,"nodeType":"Return","src":"6400:21:21"}]},"documentation":{"id":5541,"nodeType":"StructuredDocumentation","src":"5925:280:21","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5568,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:21","nodeType":"FunctionDefinition","parameters":{"id":5544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5543,"mutability":"mutable","name":"value","nameLocation":"6237:5:21","nodeType":"VariableDeclaration","scope":5568,"src":"6229:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5542,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:21"},"returnParameters":{"id":5547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5568,"src":"6267:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5545,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:21","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:21"},"scope":7026,"src":"6210:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5595,"nodeType":"Block","src":"6785:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"6799:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5578,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5577,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:21","memberName":"max","nodeType":"MemberAccess","src":"6807:17:21","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5589,"nodeType":"IfStatement","src":"6795:105:21","trueBody":{"id":5588,"nodeType":"Block","src":"6826:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:21","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"6883:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5583,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"6847:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5587,"nodeType":"RevertStatement","src":"6840:49:21"}]}},{"expression":{"arguments":[{"id":5592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"6924:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5590,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:21","typeDescriptions":{}}},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5575,"id":5594,"nodeType":"Return","src":"6909:21:21"}]},"documentation":{"id":5569,"nodeType":"StructuredDocumentation","src":"6434:280:21","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5596,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:21","nodeType":"FunctionDefinition","parameters":{"id":5572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"value","nameLocation":"6746:5:21","nodeType":"VariableDeclaration","scope":5596,"src":"6738:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5570,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:21"},"returnParameters":{"id":5575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5596,"src":"6776:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5573,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:21","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:21"},"scope":7026,"src":"6719:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5623,"nodeType":"Block","src":"7294:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"7308:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5606,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5605,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:21","memberName":"max","nodeType":"MemberAccess","src":"7316:17:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5617,"nodeType":"IfStatement","src":"7304:105:21","trueBody":{"id":5616,"nodeType":"Block","src":"7335:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"7392:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5611,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"7356:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5615,"nodeType":"RevertStatement","src":"7349:49:21"}]}},{"expression":{"arguments":[{"id":5620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"7433:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5618,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:21","typeDescriptions":{}}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5603,"id":5622,"nodeType":"Return","src":"7418:21:21"}]},"documentation":{"id":5597,"nodeType":"StructuredDocumentation","src":"6943:280:21","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5624,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:21","nodeType":"FunctionDefinition","parameters":{"id":5600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5599,"mutability":"mutable","name":"value","nameLocation":"7255:5:21","nodeType":"VariableDeclaration","scope":5624,"src":"7247:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5598,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:21"},"returnParameters":{"id":5603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5624,"src":"7285:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5601,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:21"},"scope":7026,"src":"7228:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5651,"nodeType":"Block","src":"7803:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"7817:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5634,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5633,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:21","memberName":"max","nodeType":"MemberAccess","src":"7825:17:21","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5645,"nodeType":"IfStatement","src":"7813:105:21","trueBody":{"id":5644,"nodeType":"Block","src":"7844:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:21","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"7901:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5639,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"7865:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5643,"nodeType":"RevertStatement","src":"7858:49:21"}]}},{"expression":{"arguments":[{"id":5648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"7942:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5646,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:21","typeDescriptions":{}}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5631,"id":5650,"nodeType":"Return","src":"7927:21:21"}]},"documentation":{"id":5625,"nodeType":"StructuredDocumentation","src":"7452:280:21","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5652,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:21","nodeType":"FunctionDefinition","parameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"value","nameLocation":"7764:5:21","nodeType":"VariableDeclaration","scope":5652,"src":"7756:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5626,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:21"},"returnParameters":{"id":5631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5652,"src":"7794:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5629,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:21","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:21"},"scope":7026,"src":"7737:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5679,"nodeType":"Block","src":"8312:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"8326:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5662,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5661,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:21","memberName":"max","nodeType":"MemberAccess","src":"8334:17:21","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5673,"nodeType":"IfStatement","src":"8322:105:21","trueBody":{"id":5672,"nodeType":"Block","src":"8353:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:21","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"8410:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5667,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"8374:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5671,"nodeType":"RevertStatement","src":"8367:49:21"}]}},{"expression":{"arguments":[{"id":5676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"8451:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5674,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:21","typeDescriptions":{}}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5659,"id":5678,"nodeType":"Return","src":"8436:21:21"}]},"documentation":{"id":5653,"nodeType":"StructuredDocumentation","src":"7961:280:21","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5680,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:21","nodeType":"FunctionDefinition","parameters":{"id":5656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5655,"mutability":"mutable","name":"value","nameLocation":"8273:5:21","nodeType":"VariableDeclaration","scope":5680,"src":"8265:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5654,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:21"},"returnParameters":{"id":5659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5680,"src":"8303:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5657,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:21","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:21"},"scope":7026,"src":"8246:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5707,"nodeType":"Block","src":"8821:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"8835:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5690,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5689,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:21","memberName":"max","nodeType":"MemberAccess","src":"8843:17:21","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5701,"nodeType":"IfStatement","src":"8831:105:21","trueBody":{"id":5700,"nodeType":"Block","src":"8862:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:21","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"8919:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5695,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"8883:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5699,"nodeType":"RevertStatement","src":"8876:49:21"}]}},{"expression":{"arguments":[{"id":5704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"8960:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5702,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:21","typeDescriptions":{}}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5687,"id":5706,"nodeType":"Return","src":"8945:21:21"}]},"documentation":{"id":5681,"nodeType":"StructuredDocumentation","src":"8470:280:21","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5708,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:21","nodeType":"FunctionDefinition","parameters":{"id":5684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5683,"mutability":"mutable","name":"value","nameLocation":"8782:5:21","nodeType":"VariableDeclaration","scope":5708,"src":"8774:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5682,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:21"},"returnParameters":{"id":5687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5708,"src":"8812:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5685,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:21","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:21"},"scope":7026,"src":"8755:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5735,"nodeType":"Block","src":"9330:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"9344:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5718,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5717,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:21","memberName":"max","nodeType":"MemberAccess","src":"9352:17:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5729,"nodeType":"IfStatement","src":"9340:105:21","trueBody":{"id":5728,"nodeType":"Block","src":"9371:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"9428:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5723,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"9392:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5727,"nodeType":"RevertStatement","src":"9385:49:21"}]}},{"expression":{"arguments":[{"id":5732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"9469:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5730,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:21","typeDescriptions":{}}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5715,"id":5734,"nodeType":"Return","src":"9454:21:21"}]},"documentation":{"id":5709,"nodeType":"StructuredDocumentation","src":"8979:280:21","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5736,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:21","nodeType":"FunctionDefinition","parameters":{"id":5712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5711,"mutability":"mutable","name":"value","nameLocation":"9291:5:21","nodeType":"VariableDeclaration","scope":5736,"src":"9283:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5710,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:21"},"returnParameters":{"id":5715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5736,"src":"9321:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5713,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:21"},"scope":7026,"src":"9264:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5763,"nodeType":"Block","src":"9839:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"9853:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5746,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5745,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:21","memberName":"max","nodeType":"MemberAccess","src":"9861:17:21","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5757,"nodeType":"IfStatement","src":"9849:105:21","trueBody":{"id":5756,"nodeType":"Block","src":"9880:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:21","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"9937:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5751,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"9901:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5755,"nodeType":"RevertStatement","src":"9894:49:21"}]}},{"expression":{"arguments":[{"id":5760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"9978:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5758,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:21","typeDescriptions":{}}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5743,"id":5762,"nodeType":"Return","src":"9963:21:21"}]},"documentation":{"id":5737,"nodeType":"StructuredDocumentation","src":"9488:280:21","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5764,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:21","nodeType":"FunctionDefinition","parameters":{"id":5740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5739,"mutability":"mutable","name":"value","nameLocation":"9800:5:21","nodeType":"VariableDeclaration","scope":5764,"src":"9792:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5738,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:21"},"returnParameters":{"id":5743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5764,"src":"9830:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5741,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:21","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:21"},"scope":7026,"src":"9773:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5791,"nodeType":"Block","src":"10348:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"10362:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5774,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5773,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:21","memberName":"max","nodeType":"MemberAccess","src":"10370:17:21","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5785,"nodeType":"IfStatement","src":"10358:105:21","trueBody":{"id":5784,"nodeType":"Block","src":"10389:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:21","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"10446:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5779,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"10410:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5783,"nodeType":"RevertStatement","src":"10403:49:21"}]}},{"expression":{"arguments":[{"id":5788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"10487:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5786,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:21","typeDescriptions":{}}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5771,"id":5790,"nodeType":"Return","src":"10472:21:21"}]},"documentation":{"id":5765,"nodeType":"StructuredDocumentation","src":"9997:280:21","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5792,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:21","nodeType":"FunctionDefinition","parameters":{"id":5768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5767,"mutability":"mutable","name":"value","nameLocation":"10309:5:21","nodeType":"VariableDeclaration","scope":5792,"src":"10301:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5766,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:21"},"returnParameters":{"id":5771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5792,"src":"10339:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5769,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:21","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:21"},"scope":7026,"src":"10282:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5819,"nodeType":"Block","src":"10857:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"10871:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5802,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5801,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:21","memberName":"max","nodeType":"MemberAccess","src":"10879:17:21","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5813,"nodeType":"IfStatement","src":"10867:105:21","trueBody":{"id":5812,"nodeType":"Block","src":"10898:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:21","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"10955:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5807,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"10919:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5811,"nodeType":"RevertStatement","src":"10912:49:21"}]}},{"expression":{"arguments":[{"id":5816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"10996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5814,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:21","typeDescriptions":{}}},"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5799,"id":5818,"nodeType":"Return","src":"10981:21:21"}]},"documentation":{"id":5793,"nodeType":"StructuredDocumentation","src":"10506:280:21","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5820,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:21","nodeType":"FunctionDefinition","parameters":{"id":5796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5795,"mutability":"mutable","name":"value","nameLocation":"10818:5:21","nodeType":"VariableDeclaration","scope":5820,"src":"10810:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5794,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:21"},"returnParameters":{"id":5799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5820,"src":"10848:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5797,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:21","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:21"},"scope":7026,"src":"10791:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5847,"nodeType":"Block","src":"11360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"11374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5830,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5829,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:21","memberName":"max","nodeType":"MemberAccess","src":"11382:16:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5841,"nodeType":"IfStatement","src":"11370:103:21","trueBody":{"id":5840,"nodeType":"Block","src":"11400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"11456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5835,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"11421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5839,"nodeType":"RevertStatement","src":"11414:48:21"}]}},{"expression":{"arguments":[{"id":5844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"11496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5842,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:21","typeDescriptions":{}}},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5827,"id":5846,"nodeType":"Return","src":"11482:20:21"}]},"documentation":{"id":5821,"nodeType":"StructuredDocumentation","src":"11015:276:21","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5848,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:21","nodeType":"FunctionDefinition","parameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5823,"mutability":"mutable","name":"value","nameLocation":"11322:5:21","nodeType":"VariableDeclaration","scope":5848,"src":"11314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5822,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:21"},"returnParameters":{"id":5827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5848,"src":"11352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5825,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:21"},"scope":7026,"src":"11296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5875,"nodeType":"Block","src":"11860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"11874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5858,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5857,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:21","memberName":"max","nodeType":"MemberAccess","src":"11882:16:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5869,"nodeType":"IfStatement","src":"11870:103:21","trueBody":{"id":5868,"nodeType":"Block","src":"11900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"11956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5863,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"11921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5867,"nodeType":"RevertStatement","src":"11914:48:21"}]}},{"expression":{"arguments":[{"id":5872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"11996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5870,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:21","typeDescriptions":{}}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5855,"id":5874,"nodeType":"Return","src":"11982:20:21"}]},"documentation":{"id":5849,"nodeType":"StructuredDocumentation","src":"11515:276:21","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5876,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:21","nodeType":"FunctionDefinition","parameters":{"id":5852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5851,"mutability":"mutable","name":"value","nameLocation":"11822:5:21","nodeType":"VariableDeclaration","scope":5876,"src":"11814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5850,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:21"},"returnParameters":{"id":5855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5876,"src":"11852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5853,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:21"},"scope":7026,"src":"11796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5903,"nodeType":"Block","src":"12360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"12374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5886,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5885,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:21","memberName":"max","nodeType":"MemberAccess","src":"12382:16:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5897,"nodeType":"IfStatement","src":"12370:103:21","trueBody":{"id":5896,"nodeType":"Block","src":"12400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"12456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5891,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"12421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5895,"nodeType":"RevertStatement","src":"12414:48:21"}]}},{"expression":{"arguments":[{"id":5900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"12496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5898,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:21","typeDescriptions":{}}},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5883,"id":5902,"nodeType":"Return","src":"12482:20:21"}]},"documentation":{"id":5877,"nodeType":"StructuredDocumentation","src":"12015:276:21","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5904,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:21","nodeType":"FunctionDefinition","parameters":{"id":5880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5879,"mutability":"mutable","name":"value","nameLocation":"12322:5:21","nodeType":"VariableDeclaration","scope":5904,"src":"12314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5878,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:21"},"returnParameters":{"id":5883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5904,"src":"12352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5881,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:21"},"scope":7026,"src":"12296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5931,"nodeType":"Block","src":"12860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"12874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5914,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5913,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:21","memberName":"max","nodeType":"MemberAccess","src":"12882:16:21","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5925,"nodeType":"IfStatement","src":"12870:103:21","trueBody":{"id":5924,"nodeType":"Block","src":"12900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"12956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5919,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"12921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5923,"nodeType":"RevertStatement","src":"12914:48:21"}]}},{"expression":{"arguments":[{"id":5928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"12996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5926,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:21","typeDescriptions":{}}},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5911,"id":5930,"nodeType":"Return","src":"12982:20:21"}]},"documentation":{"id":5905,"nodeType":"StructuredDocumentation","src":"12515:276:21","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5932,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:21","nodeType":"FunctionDefinition","parameters":{"id":5908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5907,"mutability":"mutable","name":"value","nameLocation":"12822:5:21","nodeType":"VariableDeclaration","scope":5932,"src":"12814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5906,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:21"},"returnParameters":{"id":5911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5932,"src":"12852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5909,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:21","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:21"},"scope":7026,"src":"12796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5959,"nodeType":"Block","src":"13360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"13374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5942,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5941,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:21","memberName":"max","nodeType":"MemberAccess","src":"13382:16:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5953,"nodeType":"IfStatement","src":"13370:103:21","trueBody":{"id":5952,"nodeType":"Block","src":"13400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"13456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5947,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"13421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5951,"nodeType":"RevertStatement","src":"13414:48:21"}]}},{"expression":{"arguments":[{"id":5956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"13496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5954,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:21","typeDescriptions":{}}},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5939,"id":5958,"nodeType":"Return","src":"13482:20:21"}]},"documentation":{"id":5933,"nodeType":"StructuredDocumentation","src":"13015:276:21","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5960,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:21","nodeType":"FunctionDefinition","parameters":{"id":5936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5935,"mutability":"mutable","name":"value","nameLocation":"13322:5:21","nodeType":"VariableDeclaration","scope":5960,"src":"13314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5934,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:21"},"returnParameters":{"id":5939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5960,"src":"13352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5937,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:21"},"scope":7026,"src":"13296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5987,"nodeType":"Block","src":"13860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"13874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5970,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5969,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:21","memberName":"max","nodeType":"MemberAccess","src":"13882:16:21","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5981,"nodeType":"IfStatement","src":"13870:103:21","trueBody":{"id":5980,"nodeType":"Block","src":"13900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"13956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5975,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"13921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5979,"nodeType":"RevertStatement","src":"13914:48:21"}]}},{"expression":{"arguments":[{"id":5984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5963,"src":"13996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5982,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:21","typeDescriptions":{}}},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5967,"id":5986,"nodeType":"Return","src":"13982:20:21"}]},"documentation":{"id":5961,"nodeType":"StructuredDocumentation","src":"13515:276:21","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5988,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:21","nodeType":"FunctionDefinition","parameters":{"id":5964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5963,"mutability":"mutable","name":"value","nameLocation":"13822:5:21","nodeType":"VariableDeclaration","scope":5988,"src":"13814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5962,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:21"},"returnParameters":{"id":5967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5988,"src":"13852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5965,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:21","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:21"},"scope":7026,"src":"13796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6015,"nodeType":"Block","src":"14360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5991,"src":"14374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5998,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5997,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:21","memberName":"max","nodeType":"MemberAccess","src":"14382:16:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6009,"nodeType":"IfStatement","src":"14370:103:21","trueBody":{"id":6008,"nodeType":"Block","src":"14400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5991,"src":"14456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6003,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"14421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6007,"nodeType":"RevertStatement","src":"14414:48:21"}]}},{"expression":{"arguments":[{"id":6012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5991,"src":"14496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6010,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:21","typeDescriptions":{}}},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5995,"id":6014,"nodeType":"Return","src":"14482:20:21"}]},"documentation":{"id":5989,"nodeType":"StructuredDocumentation","src":"14015:276:21","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6016,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:21","nodeType":"FunctionDefinition","parameters":{"id":5992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5991,"mutability":"mutable","name":"value","nameLocation":"14322:5:21","nodeType":"VariableDeclaration","scope":6016,"src":"14314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5990,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:21"},"returnParameters":{"id":5995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6016,"src":"14352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5993,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:21"},"scope":7026,"src":"14296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6043,"nodeType":"Block","src":"14860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"14874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6026,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6025,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:21","memberName":"max","nodeType":"MemberAccess","src":"14882:16:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6037,"nodeType":"IfStatement","src":"14870:103:21","trueBody":{"id":6036,"nodeType":"Block","src":"14900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"14956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6031,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"14921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6035,"nodeType":"RevertStatement","src":"14914:48:21"}]}},{"expression":{"arguments":[{"id":6040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"14996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6038,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:21","typeDescriptions":{}}},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6023,"id":6042,"nodeType":"Return","src":"14982:20:21"}]},"documentation":{"id":6017,"nodeType":"StructuredDocumentation","src":"14515:276:21","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6044,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:21","nodeType":"FunctionDefinition","parameters":{"id":6020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6019,"mutability":"mutable","name":"value","nameLocation":"14822:5:21","nodeType":"VariableDeclaration","scope":6044,"src":"14814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6018,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:21"},"returnParameters":{"id":6023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6044,"src":"14852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6021,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:21"},"scope":7026,"src":"14796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6071,"nodeType":"Block","src":"15360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"15374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6054,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6053,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:21","memberName":"max","nodeType":"MemberAccess","src":"15382:16:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6065,"nodeType":"IfStatement","src":"15370:103:21","trueBody":{"id":6064,"nodeType":"Block","src":"15400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"15456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6059,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"15421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6063,"nodeType":"RevertStatement","src":"15414:48:21"}]}},{"expression":{"arguments":[{"id":6068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"15496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6066,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:21","typeDescriptions":{}}},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6051,"id":6070,"nodeType":"Return","src":"15482:20:21"}]},"documentation":{"id":6045,"nodeType":"StructuredDocumentation","src":"15015:276:21","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6072,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:21","nodeType":"FunctionDefinition","parameters":{"id":6048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6047,"mutability":"mutable","name":"value","nameLocation":"15322:5:21","nodeType":"VariableDeclaration","scope":6072,"src":"15314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6046,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:21"},"returnParameters":{"id":6051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6072,"src":"15352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6049,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:21"},"scope":7026,"src":"15296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6099,"nodeType":"Block","src":"15860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"15874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6082,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6081,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:21","memberName":"max","nodeType":"MemberAccess","src":"15882:16:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6093,"nodeType":"IfStatement","src":"15870:103:21","trueBody":{"id":6092,"nodeType":"Block","src":"15900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"15956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6087,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"15921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6091,"nodeType":"RevertStatement","src":"15914:48:21"}]}},{"expression":{"arguments":[{"id":6096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"15996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6094,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:21","typeDescriptions":{}}},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6079,"id":6098,"nodeType":"Return","src":"15982:20:21"}]},"documentation":{"id":6073,"nodeType":"StructuredDocumentation","src":"15515:276:21","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6100,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:21","nodeType":"FunctionDefinition","parameters":{"id":6076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6075,"mutability":"mutable","name":"value","nameLocation":"15822:5:21","nodeType":"VariableDeclaration","scope":6100,"src":"15814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6074,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:21"},"returnParameters":{"id":6079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6100,"src":"15852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6077,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:21"},"scope":7026,"src":"15796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6127,"nodeType":"Block","src":"16360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"16374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6110,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6109,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:21","memberName":"max","nodeType":"MemberAccess","src":"16382:16:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6121,"nodeType":"IfStatement","src":"16370:103:21","trueBody":{"id":6120,"nodeType":"Block","src":"16400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"16456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6115,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"16421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6119,"nodeType":"RevertStatement","src":"16414:48:21"}]}},{"expression":{"arguments":[{"id":6124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"16496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6122,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:21","typeDescriptions":{}}},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6107,"id":6126,"nodeType":"Return","src":"16482:20:21"}]},"documentation":{"id":6101,"nodeType":"StructuredDocumentation","src":"16015:276:21","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6128,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:21","nodeType":"FunctionDefinition","parameters":{"id":6104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6103,"mutability":"mutable","name":"value","nameLocation":"16322:5:21","nodeType":"VariableDeclaration","scope":6128,"src":"16314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6102,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:21"},"returnParameters":{"id":6107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6128,"src":"16352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6105,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:21"},"scope":7026,"src":"16296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6155,"nodeType":"Block","src":"16854:146:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"16868:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6138,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6137,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:21","memberName":"max","nodeType":"MemberAccess","src":"16876:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6149,"nodeType":"IfStatement","src":"16864:101:21","trueBody":{"id":6148,"nodeType":"Block","src":"16893:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"16948:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6143,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"16914:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6147,"nodeType":"RevertStatement","src":"16907:47:21"}]}},{"expression":{"arguments":[{"id":6152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"16987:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6150,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:21","typeDescriptions":{}}},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6135,"id":6154,"nodeType":"Return","src":"16974:19:21"}]},"documentation":{"id":6129,"nodeType":"StructuredDocumentation","src":"16515:272:21","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6156,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:21","nodeType":"FunctionDefinition","parameters":{"id":6132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6131,"mutability":"mutable","name":"value","nameLocation":"16817:5:21","nodeType":"VariableDeclaration","scope":6156,"src":"16809:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6130,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:21"},"returnParameters":{"id":6135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6156,"src":"16847:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6133,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:21"},"scope":7026,"src":"16792:208:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6178,"nodeType":"Block","src":"17236:128:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"17250:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6172,"nodeType":"IfStatement","src":"17246:81:21","trueBody":{"id":6171,"nodeType":"Block","src":"17261:66:21","statements":[{"errorCall":{"arguments":[{"id":6168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"17310:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6167,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"17282:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6170,"nodeType":"RevertStatement","src":"17275:41:21"}]}},{"expression":{"arguments":[{"id":6175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"17351:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6173,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:21","typeDescriptions":{}}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6163,"id":6177,"nodeType":"Return","src":"17336:21:21"}]},"documentation":{"id":6157,"nodeType":"StructuredDocumentation","src":"17006:160:21","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6179,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:21","nodeType":"FunctionDefinition","parameters":{"id":6160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6159,"mutability":"mutable","name":"value","nameLocation":"17197:5:21","nodeType":"VariableDeclaration","scope":6179,"src":"17190:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6158,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:21"},"returnParameters":{"id":6163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6179,"src":"17227:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6161,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:21"},"scope":7026,"src":"17171:193:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6204,"nodeType":"Block","src":"17761:150:21","statements":[{"expression":{"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6187,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"17771:10:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"17791:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6188,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:21","typeDescriptions":{}}},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6193,"nodeType":"ExpressionStatement","src":"17771:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6194,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"17811:10:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"17825:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6203,"nodeType":"IfStatement","src":"17807:98:21","trueBody":{"id":6202,"nodeType":"Block","src":"17832:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:21","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"17888:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6197,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"17853:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6201,"nodeType":"RevertStatement","src":"17846:48:21"}]}}]},"documentation":{"id":6180,"nodeType":"StructuredDocumentation","src":"17370:312:21","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6205,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:21","nodeType":"FunctionDefinition","parameters":{"id":6183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6182,"mutability":"mutable","name":"value","nameLocation":"17712:5:21","nodeType":"VariableDeclaration","scope":6205,"src":"17705:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6181,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:21"},"returnParameters":{"id":6186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6185,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:21","nodeType":"VariableDeclaration","scope":6205,"src":"17742:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6184,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:21"},"scope":7026,"src":"17687:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6230,"nodeType":"Block","src":"18308:150:21","statements":[{"expression":{"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6213,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"18318:10:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"18338:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6214,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:21","typeDescriptions":{}}},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6219,"nodeType":"ExpressionStatement","src":"18318:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6220,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"18358:10:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"18372:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6229,"nodeType":"IfStatement","src":"18354:98:21","trueBody":{"id":6228,"nodeType":"Block","src":"18379:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:21","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"18435:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6223,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"18400:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6227,"nodeType":"RevertStatement","src":"18393:48:21"}]}}]},"documentation":{"id":6206,"nodeType":"StructuredDocumentation","src":"17917:312:21","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6231,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:21","nodeType":"FunctionDefinition","parameters":{"id":6209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6208,"mutability":"mutable","name":"value","nameLocation":"18259:5:21","nodeType":"VariableDeclaration","scope":6231,"src":"18252:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6207,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:21"},"returnParameters":{"id":6212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6211,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:21","nodeType":"VariableDeclaration","scope":6231,"src":"18289:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6210,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:21"},"scope":7026,"src":"18234:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6256,"nodeType":"Block","src":"18855:150:21","statements":[{"expression":{"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6239,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"18865:10:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"18885:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6240,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:21","typeDescriptions":{}}},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6245,"nodeType":"ExpressionStatement","src":"18865:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6246,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"18905:10:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"18919:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6255,"nodeType":"IfStatement","src":"18901:98:21","trueBody":{"id":6254,"nodeType":"Block","src":"18926:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:21","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"18982:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6249,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"18947:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6253,"nodeType":"RevertStatement","src":"18940:48:21"}]}}]},"documentation":{"id":6232,"nodeType":"StructuredDocumentation","src":"18464:312:21","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6257,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:21","nodeType":"FunctionDefinition","parameters":{"id":6235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6234,"mutability":"mutable","name":"value","nameLocation":"18806:5:21","nodeType":"VariableDeclaration","scope":6257,"src":"18799:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6233,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:21"},"returnParameters":{"id":6238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6237,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:21","nodeType":"VariableDeclaration","scope":6257,"src":"18836:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6236,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:21"},"scope":7026,"src":"18781:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6282,"nodeType":"Block","src":"19402:150:21","statements":[{"expression":{"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6265,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"19412:10:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"19432:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6266,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:21","typeDescriptions":{}}},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6271,"nodeType":"ExpressionStatement","src":"19412:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6272,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"19452:10:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"19466:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6281,"nodeType":"IfStatement","src":"19448:98:21","trueBody":{"id":6280,"nodeType":"Block","src":"19473:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:21","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"19529:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6275,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"19494:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6279,"nodeType":"RevertStatement","src":"19487:48:21"}]}}]},"documentation":{"id":6258,"nodeType":"StructuredDocumentation","src":"19011:312:21","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6283,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:21","nodeType":"FunctionDefinition","parameters":{"id":6261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6260,"mutability":"mutable","name":"value","nameLocation":"19353:5:21","nodeType":"VariableDeclaration","scope":6283,"src":"19346:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6259,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:21"},"returnParameters":{"id":6264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6263,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:21","nodeType":"VariableDeclaration","scope":6283,"src":"19383:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6262,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:21"},"scope":7026,"src":"19328:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6308,"nodeType":"Block","src":"19949:150:21","statements":[{"expression":{"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6291,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"19959:10:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"19979:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6292,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:21","typeDescriptions":{}}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6297,"nodeType":"ExpressionStatement","src":"19959:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6298,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"19999:10:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"20013:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6307,"nodeType":"IfStatement","src":"19995:98:21","trueBody":{"id":6306,"nodeType":"Block","src":"20020:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:21","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"20076:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6301,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"20041:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6305,"nodeType":"RevertStatement","src":"20034:48:21"}]}}]},"documentation":{"id":6284,"nodeType":"StructuredDocumentation","src":"19558:312:21","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6309,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:21","nodeType":"FunctionDefinition","parameters":{"id":6287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6286,"mutability":"mutable","name":"value","nameLocation":"19900:5:21","nodeType":"VariableDeclaration","scope":6309,"src":"19893:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6285,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:21"},"returnParameters":{"id":6290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6289,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:21","nodeType":"VariableDeclaration","scope":6309,"src":"19930:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6288,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:21"},"scope":7026,"src":"19875:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6334,"nodeType":"Block","src":"20496:150:21","statements":[{"expression":{"id":6322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6317,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"20506:10:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"20526:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6318,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:21","typeDescriptions":{}}},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6323,"nodeType":"ExpressionStatement","src":"20506:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6324,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"20546:10:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"20560:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6333,"nodeType":"IfStatement","src":"20542:98:21","trueBody":{"id":6332,"nodeType":"Block","src":"20567:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"20623:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6327,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"20588:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6331,"nodeType":"RevertStatement","src":"20581:48:21"}]}}]},"documentation":{"id":6310,"nodeType":"StructuredDocumentation","src":"20105:312:21","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6335,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:21","nodeType":"FunctionDefinition","parameters":{"id":6313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6312,"mutability":"mutable","name":"value","nameLocation":"20447:5:21","nodeType":"VariableDeclaration","scope":6335,"src":"20440:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6311,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:21"},"returnParameters":{"id":6316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6315,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:21","nodeType":"VariableDeclaration","scope":6335,"src":"20477:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6314,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:21"},"scope":7026,"src":"20422:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6360,"nodeType":"Block","src":"21043:150:21","statements":[{"expression":{"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6343,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"21053:10:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"21073:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6344,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:21","typeDescriptions":{}}},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6349,"nodeType":"ExpressionStatement","src":"21053:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6350,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"21093:10:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"21107:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6359,"nodeType":"IfStatement","src":"21089:98:21","trueBody":{"id":6358,"nodeType":"Block","src":"21114:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:21","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"21170:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6353,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"21135:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6357,"nodeType":"RevertStatement","src":"21128:48:21"}]}}]},"documentation":{"id":6336,"nodeType":"StructuredDocumentation","src":"20652:312:21","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6361,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:21","nodeType":"FunctionDefinition","parameters":{"id":6339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6338,"mutability":"mutable","name":"value","nameLocation":"20994:5:21","nodeType":"VariableDeclaration","scope":6361,"src":"20987:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6337,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:21"},"returnParameters":{"id":6342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6341,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:21","nodeType":"VariableDeclaration","scope":6361,"src":"21024:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6340,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:21"},"scope":7026,"src":"20969:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6386,"nodeType":"Block","src":"21590:150:21","statements":[{"expression":{"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6369,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"21600:10:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"21620:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6370,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:21","typeDescriptions":{}}},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6375,"nodeType":"ExpressionStatement","src":"21600:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6376,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"21640:10:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"21654:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6385,"nodeType":"IfStatement","src":"21636:98:21","trueBody":{"id":6384,"nodeType":"Block","src":"21661:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:21","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"21717:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6379,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"21682:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6383,"nodeType":"RevertStatement","src":"21675:48:21"}]}}]},"documentation":{"id":6362,"nodeType":"StructuredDocumentation","src":"21199:312:21","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6387,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:21","nodeType":"FunctionDefinition","parameters":{"id":6365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6364,"mutability":"mutable","name":"value","nameLocation":"21541:5:21","nodeType":"VariableDeclaration","scope":6387,"src":"21534:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6363,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:21"},"returnParameters":{"id":6368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6367,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:21","nodeType":"VariableDeclaration","scope":6387,"src":"21571:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6366,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:21"},"scope":7026,"src":"21516:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6412,"nodeType":"Block","src":"22137:150:21","statements":[{"expression":{"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6395,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"22147:10:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"22167:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6396,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:21","typeDescriptions":{}}},"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6401,"nodeType":"ExpressionStatement","src":"22147:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6402,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"22187:10:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"22201:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6411,"nodeType":"IfStatement","src":"22183:98:21","trueBody":{"id":6410,"nodeType":"Block","src":"22208:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:21","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6390,"src":"22264:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6405,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"22229:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6409,"nodeType":"RevertStatement","src":"22222:48:21"}]}}]},"documentation":{"id":6388,"nodeType":"StructuredDocumentation","src":"21746:312:21","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6413,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:21","nodeType":"FunctionDefinition","parameters":{"id":6391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6390,"mutability":"mutable","name":"value","nameLocation":"22088:5:21","nodeType":"VariableDeclaration","scope":6413,"src":"22081:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6389,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:21"},"returnParameters":{"id":6394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6393,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:21","nodeType":"VariableDeclaration","scope":6413,"src":"22118:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6392,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:21"},"scope":7026,"src":"22063:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6438,"nodeType":"Block","src":"22684:150:21","statements":[{"expression":{"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6421,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"22694:10:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"22714:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6422,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:21","typeDescriptions":{}}},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6427,"nodeType":"ExpressionStatement","src":"22694:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6428,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"22734:10:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"22748:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6437,"nodeType":"IfStatement","src":"22730:98:21","trueBody":{"id":6436,"nodeType":"Block","src":"22755:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:21","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"22811:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6431,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"22776:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6435,"nodeType":"RevertStatement","src":"22769:48:21"}]}}]},"documentation":{"id":6414,"nodeType":"StructuredDocumentation","src":"22293:312:21","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6439,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:21","nodeType":"FunctionDefinition","parameters":{"id":6417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6416,"mutability":"mutable","name":"value","nameLocation":"22635:5:21","nodeType":"VariableDeclaration","scope":6439,"src":"22628:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6415,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:21"},"returnParameters":{"id":6420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6419,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:21","nodeType":"VariableDeclaration","scope":6439,"src":"22665:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6418,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:21"},"scope":7026,"src":"22610:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6464,"nodeType":"Block","src":"23231:150:21","statements":[{"expression":{"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6447,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"23241:10:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"23261:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6448,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:21","typeDescriptions":{}}},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6453,"nodeType":"ExpressionStatement","src":"23241:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6454,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"23281:10:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"23295:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6463,"nodeType":"IfStatement","src":"23277:98:21","trueBody":{"id":6462,"nodeType":"Block","src":"23302:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:21","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"23358:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6457,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"23323:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6461,"nodeType":"RevertStatement","src":"23316:48:21"}]}}]},"documentation":{"id":6440,"nodeType":"StructuredDocumentation","src":"22840:312:21","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6465,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:21","nodeType":"FunctionDefinition","parameters":{"id":6443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6442,"mutability":"mutable","name":"value","nameLocation":"23182:5:21","nodeType":"VariableDeclaration","scope":6465,"src":"23175:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6441,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:21"},"returnParameters":{"id":6446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6445,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:21","nodeType":"VariableDeclaration","scope":6465,"src":"23212:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6444,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:21"},"scope":7026,"src":"23157:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6490,"nodeType":"Block","src":"23778:150:21","statements":[{"expression":{"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6473,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"23788:10:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"23808:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6474,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:21","typeDescriptions":{}}},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6479,"nodeType":"ExpressionStatement","src":"23788:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6480,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"23828:10:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"23842:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6489,"nodeType":"IfStatement","src":"23824:98:21","trueBody":{"id":6488,"nodeType":"Block","src":"23849:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"23905:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6483,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"23870:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6487,"nodeType":"RevertStatement","src":"23863:48:21"}]}}]},"documentation":{"id":6466,"nodeType":"StructuredDocumentation","src":"23387:312:21","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6491,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:21","nodeType":"FunctionDefinition","parameters":{"id":6469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6468,"mutability":"mutable","name":"value","nameLocation":"23729:5:21","nodeType":"VariableDeclaration","scope":6491,"src":"23722:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6467,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:21"},"returnParameters":{"id":6472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6471,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:21","nodeType":"VariableDeclaration","scope":6491,"src":"23759:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6470,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:21"},"scope":7026,"src":"23704:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6516,"nodeType":"Block","src":"24325:150:21","statements":[{"expression":{"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6499,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"24335:10:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"24355:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6500,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:21","typeDescriptions":{}}},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6505,"nodeType":"ExpressionStatement","src":"24335:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6506,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"24375:10:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"24389:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6515,"nodeType":"IfStatement","src":"24371:98:21","trueBody":{"id":6514,"nodeType":"Block","src":"24396:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:21","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6494,"src":"24452:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6509,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"24417:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6513,"nodeType":"RevertStatement","src":"24410:48:21"}]}}]},"documentation":{"id":6492,"nodeType":"StructuredDocumentation","src":"23934:312:21","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6517,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:21","nodeType":"FunctionDefinition","parameters":{"id":6495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6494,"mutability":"mutable","name":"value","nameLocation":"24276:5:21","nodeType":"VariableDeclaration","scope":6517,"src":"24269:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6493,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:21"},"returnParameters":{"id":6498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6497,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:21","nodeType":"VariableDeclaration","scope":6517,"src":"24306:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6496,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:21"},"scope":7026,"src":"24251:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6542,"nodeType":"Block","src":"24872:150:21","statements":[{"expression":{"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6525,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"24882:10:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"24902:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6526,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:21","typeDescriptions":{}}},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6531,"nodeType":"ExpressionStatement","src":"24882:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6532,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"24922:10:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"24936:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6541,"nodeType":"IfStatement","src":"24918:98:21","trueBody":{"id":6540,"nodeType":"Block","src":"24943:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:21","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"24999:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6535,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"24964:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6539,"nodeType":"RevertStatement","src":"24957:48:21"}]}}]},"documentation":{"id":6518,"nodeType":"StructuredDocumentation","src":"24481:312:21","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6543,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:21","nodeType":"FunctionDefinition","parameters":{"id":6521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6520,"mutability":"mutable","name":"value","nameLocation":"24823:5:21","nodeType":"VariableDeclaration","scope":6543,"src":"24816:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6519,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:21"},"returnParameters":{"id":6524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6523,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:21","nodeType":"VariableDeclaration","scope":6543,"src":"24853:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6522,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:21"},"scope":7026,"src":"24798:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6568,"nodeType":"Block","src":"25419:150:21","statements":[{"expression":{"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6551,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"25429:10:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"25449:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6552,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:21","typeDescriptions":{}}},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6557,"nodeType":"ExpressionStatement","src":"25429:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6558,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"25469:10:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"25483:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6567,"nodeType":"IfStatement","src":"25465:98:21","trueBody":{"id":6566,"nodeType":"Block","src":"25490:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:21","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"25546:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6561,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"25511:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6565,"nodeType":"RevertStatement","src":"25504:48:21"}]}}]},"documentation":{"id":6544,"nodeType":"StructuredDocumentation","src":"25028:312:21","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6569,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:21","nodeType":"FunctionDefinition","parameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6546,"mutability":"mutable","name":"value","nameLocation":"25370:5:21","nodeType":"VariableDeclaration","scope":6569,"src":"25363:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6545,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:21"},"returnParameters":{"id":6550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:21","nodeType":"VariableDeclaration","scope":6569,"src":"25400:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6548,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:21"},"scope":7026,"src":"25345:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6594,"nodeType":"Block","src":"25966:150:21","statements":[{"expression":{"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6577,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"25976:10:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"25996:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6578,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:21","typeDescriptions":{}}},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6583,"nodeType":"ExpressionStatement","src":"25976:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6584,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"26016:10:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"26030:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6593,"nodeType":"IfStatement","src":"26012:98:21","trueBody":{"id":6592,"nodeType":"Block","src":"26037:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"26093:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6587,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"26058:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6591,"nodeType":"RevertStatement","src":"26051:48:21"}]}}]},"documentation":{"id":6570,"nodeType":"StructuredDocumentation","src":"25575:312:21","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6595,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:21","nodeType":"FunctionDefinition","parameters":{"id":6573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6572,"mutability":"mutable","name":"value","nameLocation":"25917:5:21","nodeType":"VariableDeclaration","scope":6595,"src":"25910:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6571,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:21"},"returnParameters":{"id":6576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6575,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:21","nodeType":"VariableDeclaration","scope":6595,"src":"25947:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6574,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:21"},"scope":7026,"src":"25892:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6620,"nodeType":"Block","src":"26513:150:21","statements":[{"expression":{"id":6608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6603,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"26523:10:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"26543:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6604,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:21","typeDescriptions":{}}},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6609,"nodeType":"ExpressionStatement","src":"26523:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6610,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"26563:10:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"26577:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6619,"nodeType":"IfStatement","src":"26559:98:21","trueBody":{"id":6618,"nodeType":"Block","src":"26584:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:21","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"26640:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6613,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"26605:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6617,"nodeType":"RevertStatement","src":"26598:48:21"}]}}]},"documentation":{"id":6596,"nodeType":"StructuredDocumentation","src":"26122:312:21","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6621,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:21","nodeType":"FunctionDefinition","parameters":{"id":6599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6598,"mutability":"mutable","name":"value","nameLocation":"26464:5:21","nodeType":"VariableDeclaration","scope":6621,"src":"26457:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6597,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:21"},"returnParameters":{"id":6602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6601,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:21","nodeType":"VariableDeclaration","scope":6621,"src":"26494:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6600,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:21"},"scope":7026,"src":"26439:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6646,"nodeType":"Block","src":"27060:150:21","statements":[{"expression":{"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6629,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"27070:10:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"27090:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6630,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:21","typeDescriptions":{}}},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6635,"nodeType":"ExpressionStatement","src":"27070:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6636,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"27110:10:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"27124:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6645,"nodeType":"IfStatement","src":"27106:98:21","trueBody":{"id":6644,"nodeType":"Block","src":"27131:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:21","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6624,"src":"27187:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6639,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"27152:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6643,"nodeType":"RevertStatement","src":"27145:48:21"}]}}]},"documentation":{"id":6622,"nodeType":"StructuredDocumentation","src":"26669:312:21","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6647,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:21","nodeType":"FunctionDefinition","parameters":{"id":6625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6624,"mutability":"mutable","name":"value","nameLocation":"27011:5:21","nodeType":"VariableDeclaration","scope":6647,"src":"27004:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6623,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:21"},"returnParameters":{"id":6628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6627,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:21","nodeType":"VariableDeclaration","scope":6647,"src":"27041:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6626,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:21"},"scope":7026,"src":"26986:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6672,"nodeType":"Block","src":"27607:150:21","statements":[{"expression":{"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6655,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6653,"src":"27617:10:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"27637:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6656,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:21","typeDescriptions":{}}},"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6661,"nodeType":"ExpressionStatement","src":"27617:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6662,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6653,"src":"27657:10:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"27671:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6671,"nodeType":"IfStatement","src":"27653:98:21","trueBody":{"id":6670,"nodeType":"Block","src":"27678:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:21","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"27734:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6665,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"27699:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6669,"nodeType":"RevertStatement","src":"27692:48:21"}]}}]},"documentation":{"id":6648,"nodeType":"StructuredDocumentation","src":"27216:312:21","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6673,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:21","nodeType":"FunctionDefinition","parameters":{"id":6651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6650,"mutability":"mutable","name":"value","nameLocation":"27558:5:21","nodeType":"VariableDeclaration","scope":6673,"src":"27551:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6649,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:21"},"returnParameters":{"id":6654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6653,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:21","nodeType":"VariableDeclaration","scope":6673,"src":"27588:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6652,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:21"},"scope":7026,"src":"27533:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6698,"nodeType":"Block","src":"28147:148:21","statements":[{"expression":{"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6681,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"28157:10:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"28176:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6682,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:21","typeDescriptions":{}}},"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6687,"nodeType":"ExpressionStatement","src":"28157:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6688,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"28196:10:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"28210:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6697,"nodeType":"IfStatement","src":"28192:97:21","trueBody":{"id":6696,"nodeType":"Block","src":"28217:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"28272:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6691,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"28238:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6695,"nodeType":"RevertStatement","src":"28231:47:21"}]}}]},"documentation":{"id":6674,"nodeType":"StructuredDocumentation","src":"27763:307:21","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6699,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:21","nodeType":"FunctionDefinition","parameters":{"id":6677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6676,"mutability":"mutable","name":"value","nameLocation":"28099:5:21","nodeType":"VariableDeclaration","scope":6699,"src":"28092:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6675,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:21"},"returnParameters":{"id":6680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6679,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:21","nodeType":"VariableDeclaration","scope":6699,"src":"28129:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6678,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:21"},"scope":7026,"src":"28075:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6724,"nodeType":"Block","src":"28685:148:21","statements":[{"expression":{"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6707,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"28695:10:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"28714:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6708,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:21","typeDescriptions":{}}},"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6713,"nodeType":"ExpressionStatement","src":"28695:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6714,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"28734:10:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"28748:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6723,"nodeType":"IfStatement","src":"28730:97:21","trueBody":{"id":6722,"nodeType":"Block","src":"28755:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:21","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"28810:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6717,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"28776:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6721,"nodeType":"RevertStatement","src":"28769:47:21"}]}}]},"documentation":{"id":6700,"nodeType":"StructuredDocumentation","src":"28301:307:21","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6725,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:21","nodeType":"FunctionDefinition","parameters":{"id":6703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6702,"mutability":"mutable","name":"value","nameLocation":"28637:5:21","nodeType":"VariableDeclaration","scope":6725,"src":"28630:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6701,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:21"},"returnParameters":{"id":6706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6705,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:21","nodeType":"VariableDeclaration","scope":6725,"src":"28667:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6704,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:21"},"scope":7026,"src":"28613:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6750,"nodeType":"Block","src":"29223:148:21","statements":[{"expression":{"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6733,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"29233:10:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"29252:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6734,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:21","typeDescriptions":{}}},"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6739,"nodeType":"ExpressionStatement","src":"29233:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6740,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"29272:10:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"29286:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6749,"nodeType":"IfStatement","src":"29268:97:21","trueBody":{"id":6748,"nodeType":"Block","src":"29293:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:21","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"29348:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6743,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"29314:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6747,"nodeType":"RevertStatement","src":"29307:47:21"}]}}]},"documentation":{"id":6726,"nodeType":"StructuredDocumentation","src":"28839:307:21","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6751,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:21","nodeType":"FunctionDefinition","parameters":{"id":6729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6728,"mutability":"mutable","name":"value","nameLocation":"29175:5:21","nodeType":"VariableDeclaration","scope":6751,"src":"29168:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6727,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:21"},"returnParameters":{"id":6732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6731,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:21","nodeType":"VariableDeclaration","scope":6751,"src":"29205:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6730,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:21"},"scope":7026,"src":"29151:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6776,"nodeType":"Block","src":"29761:148:21","statements":[{"expression":{"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6759,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"29771:10:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"29790:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6760,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:21","typeDescriptions":{}}},"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6765,"nodeType":"ExpressionStatement","src":"29771:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6766,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"29810:10:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"29824:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6775,"nodeType":"IfStatement","src":"29806:97:21","trueBody":{"id":6774,"nodeType":"Block","src":"29831:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:21","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"29886:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6769,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"29852:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6773,"nodeType":"RevertStatement","src":"29845:47:21"}]}}]},"documentation":{"id":6752,"nodeType":"StructuredDocumentation","src":"29377:307:21","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6777,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:21","nodeType":"FunctionDefinition","parameters":{"id":6755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6754,"mutability":"mutable","name":"value","nameLocation":"29713:5:21","nodeType":"VariableDeclaration","scope":6777,"src":"29706:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6753,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:21"},"returnParameters":{"id":6758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6757,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:21","nodeType":"VariableDeclaration","scope":6777,"src":"29743:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6756,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:21"},"scope":7026,"src":"29689:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6802,"nodeType":"Block","src":"30299:148:21","statements":[{"expression":{"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6785,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"30309:10:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"30328:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6786,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:21","typeDescriptions":{}}},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6791,"nodeType":"ExpressionStatement","src":"30309:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6792,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"30348:10:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"30362:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6801,"nodeType":"IfStatement","src":"30344:97:21","trueBody":{"id":6800,"nodeType":"Block","src":"30369:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"30424:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6795,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"30390:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6799,"nodeType":"RevertStatement","src":"30383:47:21"}]}}]},"documentation":{"id":6778,"nodeType":"StructuredDocumentation","src":"29915:307:21","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6803,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:21","nodeType":"FunctionDefinition","parameters":{"id":6781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6780,"mutability":"mutable","name":"value","nameLocation":"30251:5:21","nodeType":"VariableDeclaration","scope":6803,"src":"30244:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6779,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:21"},"returnParameters":{"id":6784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6783,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:21","nodeType":"VariableDeclaration","scope":6803,"src":"30281:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6782,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:21"},"scope":7026,"src":"30227:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6828,"nodeType":"Block","src":"30837:148:21","statements":[{"expression":{"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6811,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"30847:10:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"30866:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6812,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:21","typeDescriptions":{}}},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6817,"nodeType":"ExpressionStatement","src":"30847:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6818,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"30886:10:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"30900:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6827,"nodeType":"IfStatement","src":"30882:97:21","trueBody":{"id":6826,"nodeType":"Block","src":"30907:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:21","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"30962:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6821,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"30928:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6825,"nodeType":"RevertStatement","src":"30921:47:21"}]}}]},"documentation":{"id":6804,"nodeType":"StructuredDocumentation","src":"30453:307:21","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6829,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:21","nodeType":"FunctionDefinition","parameters":{"id":6807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6806,"mutability":"mutable","name":"value","nameLocation":"30789:5:21","nodeType":"VariableDeclaration","scope":6829,"src":"30782:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6805,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:21"},"returnParameters":{"id":6810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6809,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:21","nodeType":"VariableDeclaration","scope":6829,"src":"30819:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6808,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:21"},"scope":7026,"src":"30765:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6854,"nodeType":"Block","src":"31375:148:21","statements":[{"expression":{"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6837,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"31385:10:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"31404:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6838,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:21","typeDescriptions":{}}},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6843,"nodeType":"ExpressionStatement","src":"31385:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6844,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"31424:10:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"31438:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6853,"nodeType":"IfStatement","src":"31420:97:21","trueBody":{"id":6852,"nodeType":"Block","src":"31445:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"31500:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6847,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"31466:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6851,"nodeType":"RevertStatement","src":"31459:47:21"}]}}]},"documentation":{"id":6830,"nodeType":"StructuredDocumentation","src":"30991:307:21","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6855,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:21","nodeType":"FunctionDefinition","parameters":{"id":6833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6832,"mutability":"mutable","name":"value","nameLocation":"31327:5:21","nodeType":"VariableDeclaration","scope":6855,"src":"31320:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6831,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:21"},"returnParameters":{"id":6836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6835,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:21","nodeType":"VariableDeclaration","scope":6855,"src":"31357:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6834,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:21"},"scope":7026,"src":"31303:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6880,"nodeType":"Block","src":"31913:148:21","statements":[{"expression":{"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6863,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"31923:10:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"31942:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6864,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:21","typeDescriptions":{}}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6869,"nodeType":"ExpressionStatement","src":"31923:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6870,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"31962:10:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"31976:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6879,"nodeType":"IfStatement","src":"31958:97:21","trueBody":{"id":6878,"nodeType":"Block","src":"31983:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:21","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"32038:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6873,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"32004:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6877,"nodeType":"RevertStatement","src":"31997:47:21"}]}}]},"documentation":{"id":6856,"nodeType":"StructuredDocumentation","src":"31529:307:21","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6881,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:21","nodeType":"FunctionDefinition","parameters":{"id":6859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6858,"mutability":"mutable","name":"value","nameLocation":"31865:5:21","nodeType":"VariableDeclaration","scope":6881,"src":"31858:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6857,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:21"},"returnParameters":{"id":6862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6861,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:21","nodeType":"VariableDeclaration","scope":6881,"src":"31895:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6860,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:21"},"scope":7026,"src":"31841:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6906,"nodeType":"Block","src":"32451:148:21","statements":[{"expression":{"id":6894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6889,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"32461:10:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"32480:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6890,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:21","typeDescriptions":{}}},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6895,"nodeType":"ExpressionStatement","src":"32461:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6896,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"32500:10:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"32514:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6905,"nodeType":"IfStatement","src":"32496:97:21","trueBody":{"id":6904,"nodeType":"Block","src":"32521:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"32576:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6899,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"32542:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6903,"nodeType":"RevertStatement","src":"32535:47:21"}]}}]},"documentation":{"id":6882,"nodeType":"StructuredDocumentation","src":"32067:307:21","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6907,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:21","nodeType":"FunctionDefinition","parameters":{"id":6885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6884,"mutability":"mutable","name":"value","nameLocation":"32403:5:21","nodeType":"VariableDeclaration","scope":6907,"src":"32396:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6883,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:21"},"returnParameters":{"id":6888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6887,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:21","nodeType":"VariableDeclaration","scope":6907,"src":"32433:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6886,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:21"},"scope":7026,"src":"32379:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6932,"nodeType":"Block","src":"32989:148:21","statements":[{"expression":{"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6915,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"32999:10:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"33018:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6916,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:21","typeDescriptions":{}}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6921,"nodeType":"ExpressionStatement","src":"32999:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6922,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"33038:10:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"33052:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6931,"nodeType":"IfStatement","src":"33034:97:21","trueBody":{"id":6930,"nodeType":"Block","src":"33059:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:21","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"33114:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6925,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"33080:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6929,"nodeType":"RevertStatement","src":"33073:47:21"}]}}]},"documentation":{"id":6908,"nodeType":"StructuredDocumentation","src":"32605:307:21","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6933,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:21","nodeType":"FunctionDefinition","parameters":{"id":6911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6910,"mutability":"mutable","name":"value","nameLocation":"32941:5:21","nodeType":"VariableDeclaration","scope":6933,"src":"32934:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6909,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:21"},"returnParameters":{"id":6914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6913,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:21","nodeType":"VariableDeclaration","scope":6933,"src":"32971:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6912,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:21"},"scope":7026,"src":"32917:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6958,"nodeType":"Block","src":"33527:148:21","statements":[{"expression":{"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6941,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"33537:10:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"33556:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6942,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:21","typeDescriptions":{}}},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6947,"nodeType":"ExpressionStatement","src":"33537:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6948,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"33576:10:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"33590:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6957,"nodeType":"IfStatement","src":"33572:97:21","trueBody":{"id":6956,"nodeType":"Block","src":"33597:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"33652:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6951,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"33618:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6955,"nodeType":"RevertStatement","src":"33611:47:21"}]}}]},"documentation":{"id":6934,"nodeType":"StructuredDocumentation","src":"33143:307:21","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6959,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:21","nodeType":"FunctionDefinition","parameters":{"id":6937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6936,"mutability":"mutable","name":"value","nameLocation":"33479:5:21","nodeType":"VariableDeclaration","scope":6959,"src":"33472:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6935,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:21"},"returnParameters":{"id":6940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6939,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:21","nodeType":"VariableDeclaration","scope":6959,"src":"33509:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6938,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:21"},"scope":7026,"src":"33455:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6984,"nodeType":"Block","src":"34058:146:21","statements":[{"expression":{"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6967,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"34068:10:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"34086:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6968,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:21","typeDescriptions":{}}},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6973,"nodeType":"ExpressionStatement","src":"34068:24:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6974,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"34106:10:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"34120:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6983,"nodeType":"IfStatement","src":"34102:96:21","trueBody":{"id":6982,"nodeType":"Block","src":"34127:71:21","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"34181:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6977,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"34148:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6981,"nodeType":"RevertStatement","src":"34141:46:21"}]}}]},"documentation":{"id":6960,"nodeType":"StructuredDocumentation","src":"33681:302:21","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6985,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:21","nodeType":"FunctionDefinition","parameters":{"id":6963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6962,"mutability":"mutable","name":"value","nameLocation":"34011:5:21","nodeType":"VariableDeclaration","scope":6985,"src":"34004:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6961,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:21"},"returnParameters":{"id":6966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6965,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:21","nodeType":"VariableDeclaration","scope":6985,"src":"34041:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6964,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:21"},"scope":7026,"src":"33988:216:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7014,"nodeType":"Block","src":"34444:250:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"34557:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6997,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6996,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:21","memberName":"max","nodeType":"MemberAccess","src":"34573:16:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6994,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:21","typeDescriptions":{}}},"id":7001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7008,"nodeType":"IfStatement","src":"34553:105:21","trueBody":{"id":7007,"nodeType":"Block","src":"34592:66:21","statements":[{"errorCall":{"arguments":[{"id":7004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"34641:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7003,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"34613:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7006,"nodeType":"RevertStatement","src":"34606:41:21"}]}},{"expression":{"arguments":[{"id":7011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"34681:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7009,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:21","typeDescriptions":{}}},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6992,"id":7013,"nodeType":"Return","src":"34667:20:21"}]},"documentation":{"id":6986,"nodeType":"StructuredDocumentation","src":"34210:165:21","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7015,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:21","nodeType":"FunctionDefinition","parameters":{"id":6989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6988,"mutability":"mutable","name":"value","nameLocation":"34406:5:21","nodeType":"VariableDeclaration","scope":7015,"src":"34398:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6987,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:21"},"returnParameters":{"id":6992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7015,"src":"34436:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6990,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:21"},"scope":7026,"src":"34380:314:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7024,"nodeType":"Block","src":"34853:87:21","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:21","statements":[{"nodeType":"YulAssignment","src":"34902:22:21","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:21"},"nodeType":"YulFunctionCall","src":"34914:9:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:21"},"nodeType":"YulFunctionCall","src":"34907:17:21"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7018,"isOffset":false,"isSlot":false,"src":"34921:1:21","valueSize":1},{"declaration":7021,"isOffset":false,"isSlot":false,"src":"34902:1:21","valueSize":1}],"flags":["memory-safe"],"id":7023,"nodeType":"InlineAssembly","src":"34863:71:21"}]},"documentation":{"id":7016,"nodeType":"StructuredDocumentation","src":"34700:90:21","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7025,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:21","nodeType":"FunctionDefinition","parameters":{"id":7019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7018,"mutability":"mutable","name":"b","nameLocation":"34816:1:21","nodeType":"VariableDeclaration","scope":7025,"src":"34811:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7017,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:21"},"returnParameters":{"id":7022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7021,"mutability":"mutable","name":"u","nameLocation":"34850:1:21","nodeType":"VariableDeclaration","scope":7025,"src":"34842:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7020,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:21"},"scope":7026,"src":"34795:145:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7027,"src":"769:34173:21","usedErrors":[5271,5276,5283,5288],"usedEvents":[]}],"src":"192:34751:21"},"id":21},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7026],"SignedMath":[7170]},"id":7171,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7028,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7030,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7171,"sourceUnit":7027,"src":"135:40:22","symbolAliases":[{"foreign":{"id":7029,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"143:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7031,"nodeType":"StructuredDocumentation","src":"177:80:22","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7170,"linearizedBaseContracts":[7170],"name":"SignedMath","nameLocation":"266:10:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":7060,"nodeType":"Block","src":"746:215:22","statements":[{"id":7059,"nodeType":"UncheckedBlock","src":"756:199:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7043,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"894:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7044,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"900:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7045,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"904:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7052,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"932:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7050,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"916:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7026_$","typeString":"type(library SafeCast)"}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7025,"src":"916:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7048,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:22","typeDescriptions":{}}},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7042,"id":7058,"nodeType":"Return","src":"887:57:22"}]}]},"documentation":{"id":7032,"nodeType":"StructuredDocumentation","src":"283:374:22","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7061,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:22","nodeType":"FunctionDefinition","parameters":{"id":7039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7034,"mutability":"mutable","name":"condition","nameLocation":"684:9:22","nodeType":"VariableDeclaration","scope":7061,"src":"679:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7033,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7036,"mutability":"mutable","name":"a","nameLocation":"702:1:22","nodeType":"VariableDeclaration","scope":7061,"src":"695:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7035,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7038,"mutability":"mutable","name":"b","nameLocation":"712:1:22","nodeType":"VariableDeclaration","scope":7061,"src":"705:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7037,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:22"},"returnParameters":{"id":7042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7061,"src":"738:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7040,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:22"},"scope":7170,"src":"662:299:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7079,"nodeType":"Block","src":"1102:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7072,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"1127:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7073,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"1131:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7075,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"1134:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7076,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"1137:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7071,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"1119:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7070,"id":7078,"nodeType":"Return","src":"1112:27:22"}]},"documentation":{"id":7062,"nodeType":"StructuredDocumentation","src":"967:66:22","text":" @dev Returns the largest of two signed numbers."},"id":7080,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:22","nodeType":"FunctionDefinition","parameters":{"id":7067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7064,"mutability":"mutable","name":"a","nameLocation":"1058:1:22","nodeType":"VariableDeclaration","scope":7080,"src":"1051:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7063,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7066,"mutability":"mutable","name":"b","nameLocation":"1068:1:22","nodeType":"VariableDeclaration","scope":7080,"src":"1061:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7065,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:22"},"returnParameters":{"id":7070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7080,"src":"1094:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7068,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:22"},"scope":7170,"src":"1038:108:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7098,"nodeType":"Block","src":"1288:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7091,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"1313:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7092,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"1317:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7094,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"1320:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7095,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"1323:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7090,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"1305:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7089,"id":7097,"nodeType":"Return","src":"1298:27:22"}]},"documentation":{"id":7081,"nodeType":"StructuredDocumentation","src":"1152:67:22","text":" @dev Returns the smallest of two signed numbers."},"id":7099,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:22","nodeType":"FunctionDefinition","parameters":{"id":7086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7083,"mutability":"mutable","name":"a","nameLocation":"1244:1:22","nodeType":"VariableDeclaration","scope":7099,"src":"1237:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7082,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7085,"mutability":"mutable","name":"b","nameLocation":"1254:1:22","nodeType":"VariableDeclaration","scope":7099,"src":"1247:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7084,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:22"},"returnParameters":{"id":7089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7099,"src":"1280:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7087,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:22"},"scope":7170,"src":"1224:108:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7142,"nodeType":"Block","src":"1537:162:22","statements":[{"assignments":[7110],"declarations":[{"constant":false,"id":7110,"mutability":"mutable","name":"x","nameLocation":"1606:1:22","nodeType":"VariableDeclaration","scope":7142,"src":"1599:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7109,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7123,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7111,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"1611:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7112,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"1615:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7115,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"1622:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7116,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"1626:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:22"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7124,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"1651:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7129,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"1671:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7127,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:22","typeDescriptions":{}}},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7125,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:22","typeDescriptions":{}}},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7134,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"1685:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7135,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"1689:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7137,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7139,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7108,"id":7141,"nodeType":"Return","src":"1644:48:22"}]},"documentation":{"id":7100,"nodeType":"StructuredDocumentation","src":"1338:126:22","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7143,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:22","nodeType":"FunctionDefinition","parameters":{"id":7105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7102,"mutability":"mutable","name":"a","nameLocation":"1493:1:22","nodeType":"VariableDeclaration","scope":7143,"src":"1486:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7101,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7104,"mutability":"mutable","name":"b","nameLocation":"1503:1:22","nodeType":"VariableDeclaration","scope":7143,"src":"1496:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7103,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:22"},"returnParameters":{"id":7108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7143,"src":"1529:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7106,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:22"},"scope":7170,"src":"1469:230:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7168,"nodeType":"Block","src":"1843:767:22","statements":[{"id":7167,"nodeType":"UncheckedBlock","src":"1853:751:22","statements":[{"assignments":[7152],"declarations":[{"constant":false,"id":7152,"mutability":"mutable","name":"mask","nameLocation":"2424:4:22","nodeType":"VariableDeclaration","scope":7167,"src":"2417:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7151,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7156,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7153,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"2431:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7159,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"2576:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7160,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7152,"src":"2580:4:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7162,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7163,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7152,"src":"2588:4:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7157,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:22","typeDescriptions":{}}},"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7150,"id":7166,"nodeType":"Return","src":"2560:33:22"}]}]},"documentation":{"id":7144,"nodeType":"StructuredDocumentation","src":"1705:78:22","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7169,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:22","nodeType":"FunctionDefinition","parameters":{"id":7147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7146,"mutability":"mutable","name":"n","nameLocation":"1808:1:22","nodeType":"VariableDeclaration","scope":7169,"src":"1801:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7145,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:22"},"returnParameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7169,"src":"1834:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:22"},"scope":7170,"src":"1788:822:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7171,"src":"258:2354:22","usedErrors":[],"usedEvents":[]}],"src":"109:2504:22"},"id":22},"contracts/Events.sol":{"ast":{"absolutePath":"contracts/Events.sol","exportedSymbols":{"TokenEvents":[7193]},"id":7194,"license":"SEE LICENSE IN LICENSE","nodeType":"SourceUnit","nodes":[{"id":7172,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"52:24:23"},{"abstract":true,"baseContracts":[],"canonicalName":"TokenEvents","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7193,"linearizedBaseContracts":[7193],"name":"TokenEvents","nameLocation":"98:11:23","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":7178,"name":"Mint","nameLocation":"123:4:23","nodeType":"EventDefinition","parameters":{"id":7177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7174,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"144:2:23","nodeType":"VariableDeclaration","scope":7178,"src":"128:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7173,"name":"address","nodeType":"ElementaryTypeName","src":"128:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7176,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"156:6:23","nodeType":"VariableDeclaration","scope":7178,"src":"148:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7175,"name":"uint256","nodeType":"ElementaryTypeName","src":"148:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"127:36:23"},"src":"117:47:23"},{"anonymous":false,"eventSelector":"c7b502dc96272fc1c98fbaad0d8ad6c0733fe881ae431ec0ff12ab3ceaee2bd4","id":7186,"name":"TaxTransferred","nameLocation":"176:14:23","nodeType":"EventDefinition","parameters":{"id":7185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7180,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"207:4:23","nodeType":"VariableDeclaration","scope":7186,"src":"191:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7179,"name":"address","nodeType":"ElementaryTypeName","src":"191:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7182,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"229:2:23","nodeType":"VariableDeclaration","scope":7186,"src":"213:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7181,"name":"address","nodeType":"ElementaryTypeName","src":"213:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7184,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"241:6:23","nodeType":"VariableDeclaration","scope":7186,"src":"233:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7183,"name":"uint256","nodeType":"ElementaryTypeName","src":"233:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"190:58:23"},"src":"170:79:23"},{"anonymous":false,"eventSelector":"fd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6","id":7192,"name":"TokensBurned","nameLocation":"261:12:23","nodeType":"EventDefinition","parameters":{"id":7191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7188,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"290:4:23","nodeType":"VariableDeclaration","scope":7192,"src":"274:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7187,"name":"address","nodeType":"ElementaryTypeName","src":"274:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7190,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"304:6:23","nodeType":"VariableDeclaration","scope":7192,"src":"296:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7189,"name":"uint256","nodeType":"ElementaryTypeName","src":"296:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"273:38:23"},"src":"255:57:23"}],"scope":7194,"src":"80:235:23","usedErrors":[],"usedEvents":[7178,7186,7192]}],"src":"52:263:23"},"id":23},"contracts/InternToken.sol":{"ast":{"absolutePath":"contracts/InternToken.sol","exportedSymbols":{"ERC20":[824],"ERC20Burnable":[948],"ERC20Pausable":[982],"ERC20Permit":[1136],"InternToken":[7522],"Ownable":[147],"TokenEvents":[7193]},"id":7523,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7195,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"83:24:24"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":7197,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7523,"sourceUnit":825,"src":"111:68:24","symbolAliases":[{"foreign":{"id":7196,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"119:5:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":7199,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7523,"sourceUnit":949,"src":"181:95:24","symbolAliases":[{"foreign":{"id":7198,"name":"ERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"189:13:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","id":7201,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7523,"sourceUnit":983,"src":"278:95:24","symbolAliases":[{"foreign":{"id":7200,"name":"ERC20Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"286:13:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":7203,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7523,"sourceUnit":1137,"src":"375:91:24","symbolAliases":[{"foreign":{"id":7202,"name":"ERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"383:11:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7523,"sourceUnit":148,"src":"468:67:24","symbolAliases":[{"foreign":{"id":7204,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"476:7:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/Events.sol","file":"./Events.sol","id":7207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7523,"sourceUnit":7194,"src":"537:41:24","symbolAliases":[{"foreign":{"id":7206,"name":"TokenEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"545:11:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7208,"name":"ERC20","nameLocations":["606:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"606:5:24"},"id":7209,"nodeType":"InheritanceSpecifier","src":"606:5:24"},{"baseName":{"id":7210,"name":"ERC20Burnable","nameLocations":["613:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":948,"src":"613:13:24"},"id":7211,"nodeType":"InheritanceSpecifier","src":"613:13:24"},{"baseName":{"id":7212,"name":"ERC20Pausable","nameLocations":["628:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":982,"src":"628:13:24"},"id":7213,"nodeType":"InheritanceSpecifier","src":"628:13:24"},{"baseName":{"id":7214,"name":"Ownable","nameLocations":["643:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"643:7:24"},"id":7215,"nodeType":"InheritanceSpecifier","src":"643:7:24"},{"baseName":{"id":7216,"name":"ERC20Permit","nameLocations":["652:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":1136,"src":"652:11:24"},"id":7217,"nodeType":"InheritanceSpecifier","src":"652:11:24"},{"baseName":{"id":7218,"name":"TokenEvents","nameLocations":["665:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":7193,"src":"665:11:24"},"id":7219,"nodeType":"InheritanceSpecifier","src":"665:11:24"}],"canonicalName":"InternToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7522,"linearizedBaseContracts":[7522,7193,1136,1296,3581,172,1198,147,982,1465,948,824,214,1162,902,1228],"name":"InternToken","nameLocation":"591:11:24","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"32cb6b0c","id":7226,"mutability":"constant","name":"MAX_SUPPLY","nameLocation":"708:10:24","nodeType":"VariableDeclaration","scope":7522,"src":"684:55:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7220,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"id":7225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030","id":7221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"721:7:24","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"731:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"737:2:24","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"731:8:24","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"721:18:24","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"4626402b","id":7228,"mutability":"mutable","name":"treasuryWallet","nameLocation":"761:14:24","nodeType":"VariableDeclaration","scope":7522,"src":"746:29:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7227,"name":"address","nodeType":"ElementaryTypeName","src":"746:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":7254,"nodeType":"Block","src":"944:54:24","statements":[{"expression":{"arguments":[{"id":7246,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"961:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_500000000000000000000000_by_1","typeString":"int_const 500000000000000000000000"},"id":7251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"353030303030","id":7247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"972:6:24","typeDescriptions":{"typeIdentifier":"t_rational_500000_by_1","typeString":"int_const 500000"},"value":"500000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":7250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"981:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":7249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"987:2:24","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"981:8:24","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"972:17:24","typeDescriptions":{"typeIdentifier":"t_rational_500000000000000000000000_by_1","typeString":"int_const 500000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_500000000000000000000000_by_1","typeString":"int_const 500000000000000000000000"}],"id":7245,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"955:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7253,"nodeType":"ExpressionStatement","src":"955:35:24"}]},"id":7255,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"496e7465726e546f6b656e","id":7235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"850:13:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_a6411b1a61eec4b2a9aaed327950913a75241b8ca98c755459920772da3314c7","typeString":"literal_string \"InternToken\""},"value":"InternToken"},{"hexValue":"494e54","id":7236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"865:5:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d296f13131fc5ceebedd6a34e674836391b2c9d18051e57af0ad1ac18c36aa","typeString":"literal_string \"INT\""},"value":"INT"}],"id":7237,"kind":"baseConstructorSpecifier","modifierName":{"id":7234,"name":"ERC20","nameLocations":["844:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"844:5:24"},"nodeType":"ModifierInvocation","src":"844:27:24"},{"arguments":[{"id":7239,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"889:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7240,"kind":"baseConstructorSpecifier","modifierName":{"id":7238,"name":"Ownable","nameLocations":["881:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"881:7:24"},"nodeType":"ModifierInvocation","src":"881:21:24"},{"arguments":[{"hexValue":"496e7465726e546f6b656e","id":7242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"924:13:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_a6411b1a61eec4b2a9aaed327950913a75241b8ca98c755459920772da3314c7","typeString":"literal_string \"InternToken\""},"value":"InternToken"}],"id":7243,"kind":"baseConstructorSpecifier","modifierName":{"id":7241,"name":"ERC20Permit","nameLocations":["912:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":1136,"src":"912:11:24"},"nodeType":"ModifierInvocation","src":"912:26:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7230,"mutability":"mutable","name":"recipient","nameLocation":"802:9:24","nodeType":"VariableDeclaration","scope":7255,"src":"794:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7229,"name":"address","nodeType":"ElementaryTypeName","src":"794:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7232,"mutability":"mutable","name":"initialOwner","nameLocation":"821:12:24","nodeType":"VariableDeclaration","scope":7255,"src":"813:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7231,"name":"address","nodeType":"ElementaryTypeName","src":"813:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"793:41:24"},"returnParameters":{"id":7244,"nodeType":"ParameterList","parameters":[],"src":"944:0:24"},"scope":7522,"src":"782:216:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7263,"nodeType":"Block","src":"1040:27:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7260,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"1051:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1051:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7262,"nodeType":"ExpressionStatement","src":"1051:8:24"}]},"functionSelector":"8456cb59","id":7264,"implemented":true,"kind":"function","modifiers":[{"id":7258,"kind":"modifierInvocation","modifierName":{"id":7257,"name":"onlyOwner","nameLocations":["1030:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1030:9:24"},"nodeType":"ModifierInvocation","src":"1030:9:24"}],"name":"pause","nameLocation":"1015:5:24","nodeType":"FunctionDefinition","parameters":{"id":7256,"nodeType":"ParameterList","parameters":[],"src":"1020:2:24"},"returnParameters":{"id":7259,"nodeType":"ParameterList","parameters":[],"src":"1040:0:24"},"scope":7522,"src":"1006:61:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7272,"nodeType":"Block","src":"1111:29:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7269,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"1122:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1122:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7271,"nodeType":"ExpressionStatement","src":"1122:10:24"}]},"functionSelector":"3f4ba83a","id":7273,"implemented":true,"kind":"function","modifiers":[{"id":7267,"kind":"modifierInvocation","modifierName":{"id":7266,"name":"onlyOwner","nameLocations":["1101:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1101:9:24"},"nodeType":"ModifierInvocation","src":"1101:9:24"}],"name":"unpause","nameLocation":"1084:7:24","nodeType":"FunctionDefinition","parameters":{"id":7265,"nodeType":"ParameterList","parameters":[],"src":"1091:2:24"},"returnParameters":{"id":7268,"nodeType":"ParameterList","parameters":[],"src":"1111:0:24"},"scope":7522,"src":"1075:65:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7304,"nodeType":"Block","src":"1217:278:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7281,"name":"_treasuryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"1236:15:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1263:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1255:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7282,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:24","typeDescriptions":{}}},"id":7285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1255:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1236:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e7465726e546f6b656e3a2074726561737572792077616c6c657420697320746865207a65726f2061646472657373","id":7287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1267:50:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9db009b096b479d8f6933c5ffa2093b96a52991fb1e4cc0214d2ac9b27ecc8c7","typeString":"literal_string \"InternToken: treasury wallet is the zero address\""},"value":"InternToken: treasury wallet is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9db009b096b479d8f6933c5ffa2093b96a52991fb1e4cc0214d2ac9b27ecc8c7","typeString":"literal_string \"InternToken: treasury wallet is the zero address\""}],"id":7280,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1228:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1228:90:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7289,"nodeType":"ExpressionStatement","src":"1228:90:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7291,"name":"_treasuryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"1337:15:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":7294,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1364:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_InternToken_$7522","typeString":"contract InternToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InternToken_$7522","typeString":"contract InternToken"}],"id":7293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1356:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7292,"name":"address","nodeType":"ElementaryTypeName","src":"1356:7:24","typeDescriptions":{}}},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1356:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1337:32:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e7465726e546f6b656e3a2074726561737572792077616c6c65742063616e6e6f742062652074686520636f6e747261637420697473656c66","id":7297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1371:60:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_13a5323e5436fac0297bca735d666ae7c3ae2ce43d6cbffe5ac355835e8a9fb6","typeString":"literal_string \"InternToken: treasury wallet cannot be the contract itself\""},"value":"InternToken: treasury wallet cannot be the contract itself"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13a5323e5436fac0297bca735d666ae7c3ae2ce43d6cbffe5ac355835e8a9fb6","typeString":"literal_string \"InternToken: treasury wallet cannot be the contract itself\""}],"id":7290,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1329:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1329:103:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7299,"nodeType":"ExpressionStatement","src":"1329:103:24"},{"expression":{"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7300,"name":"treasuryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"1445:14:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7301,"name":"_treasuryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"1462:15:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1445:32:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7303,"nodeType":"ExpressionStatement","src":"1445:32:24"}]},"functionSelector":"a8602fea","id":7305,"implemented":true,"kind":"function","modifiers":[{"id":7278,"kind":"modifierInvocation","modifierName":{"id":7277,"name":"onlyOwner","nameLocations":["1207:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1207:9:24"},"nodeType":"ModifierInvocation","src":"1207:9:24"}],"name":"setTreasuryWallet","nameLocation":"1157:17:24","nodeType":"FunctionDefinition","parameters":{"id":7276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7275,"mutability":"mutable","name":"_treasuryWallet","nameLocation":"1183:15:24","nodeType":"VariableDeclaration","scope":7305,"src":"1175:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7274,"name":"address","nodeType":"ElementaryTypeName","src":"1175:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1174:25:24"},"returnParameters":{"id":7279,"nodeType":"ParameterList","parameters":[],"src":"1217:0:24"},"scope":7522,"src":"1148:347:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7361,"nodeType":"Block","src":"2038:400:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7316,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"2057:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2071:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2063:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7317,"name":"address","nodeType":"ElementaryTypeName","src":"2063:7:24","typeDescriptions":{}}},"id":7320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2063:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2057:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e7465726e546f6b656e3a206d696e7420746f20746865207a65726f2061646472657373","id":7322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2075:39:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_568fe67c8e8527f93d3e65af3d04697a8f476a266300b67a63d5e056e85c9519","typeString":"literal_string \"InternToken: mint to the zero address\""},"value":"InternToken: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_568fe67c8e8527f93d3e65af3d04697a8f476a266300b67a63d5e056e85c9519","typeString":"literal_string \"InternToken: mint to the zero address\""}],"id":7315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2049:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2049:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7324,"nodeType":"ExpressionStatement","src":"2049:66:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7326,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"2134:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2143:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2134:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e7465726e546f6b656e3a206d696e7420616d6f756e74206d7573742062652067726561746572207468616e2030","id":7329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2146:49:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffbe722a9fd305986af135dde73be174202ccef47cd78653f16e32455e178c84","typeString":"literal_string \"InternToken: mint amount must be greater than 0\""},"value":"InternToken: mint amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ffbe722a9fd305986af135dde73be174202ccef47cd78653f16e32455e178c84","typeString":"literal_string \"InternToken: mint amount must be greater than 0\""}],"id":7325,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2126:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7331,"nodeType":"ExpressionStatement","src":"2126:70:24"},{"assignments":[7333],"declarations":[{"constant":false,"id":7333,"mutability":"mutable","name":"mintAmount","nameLocation":"2215:10:24","nodeType":"VariableDeclaration","scope":7361,"src":"2207:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7332,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7340,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7334,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"2228:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2237:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7336,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2243:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2243:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2237:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2228:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2207:46:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7342,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2272:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2272:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7344,"name":"mintAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"2288:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2272:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7346,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"2302:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2272:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e7465726e546f6b656e3a206d696e7420616d6f756e74206578636565647320746f74616c20737570706c79","id":7348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2314:47:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_951436ba811880c47ffbef1a1b1afd78ea19e2b29a413b3679d711f3b25e1501","typeString":"literal_string \"InternToken: mint amount exceeds total supply\""},"value":"InternToken: mint amount exceeds total supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_951436ba811880c47ffbef1a1b1afd78ea19e2b29a413b3679d711f3b25e1501","typeString":"literal_string \"InternToken: mint amount exceeds total supply\""}],"id":7341,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2264:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2264:98:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7350,"nodeType":"ExpressionStatement","src":"2264:98:24"},{"expression":{"arguments":[{"id":7352,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"2379:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7353,"name":"mintAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"2383:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7351,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2373:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7355,"nodeType":"ExpressionStatement","src":"2373:21:24"},{"eventCall":{"arguments":[{"id":7357,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"2415:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7358,"name":"mintAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"2419:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7356,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7178,"src":"2410:4:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2410:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7360,"nodeType":"EmitStatement","src":"2405:25:24"}]},"documentation":{"id":7306,"nodeType":"StructuredDocumentation","src":"1503:470:24","text":" @dev Mints `amount` tokens and assigns them to `to`, increasing the total supply.\n Requirements:\n - `to` cannot be the zero address.\n - `amount` must be greater than 0.\n - The total supply after minting must not exceed `MAX_SUPPLY`.\n Emits a {Mint} event.\n @param to The address to which the minted tokens will be assigned.\n @param amount The number of tokens to mint."},"functionSelector":"40c10f19","id":7362,"implemented":true,"kind":"function","modifiers":[{"id":7313,"kind":"modifierInvocation","modifierName":{"id":7312,"name":"onlyOwner","nameLocations":["2028:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2028:9:24"},"nodeType":"ModifierInvocation","src":"2028:9:24"}],"name":"mint","nameLocation":"1988:4:24","nodeType":"FunctionDefinition","parameters":{"id":7311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7308,"mutability":"mutable","name":"to","nameLocation":"2001:2:24","nodeType":"VariableDeclaration","scope":7362,"src":"1993:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7307,"name":"address","nodeType":"ElementaryTypeName","src":"1993:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7310,"mutability":"mutable","name":"amount","nameLocation":"2013:6:24","nodeType":"VariableDeclaration","scope":7362,"src":"2005:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7309,"name":"uint256","nodeType":"ElementaryTypeName","src":"2005:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1992:28:24"},"returnParameters":{"id":7314,"nodeType":"ParameterList","parameters":[],"src":"2038:0:24"},"scope":7522,"src":"1979:459:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7403,"nodeType":"Block","src":"2518:322:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7370,"name":"treasuryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"2537:14:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2563:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2555:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7371,"name":"address","nodeType":"ElementaryTypeName","src":"2555:7:24","typeDescriptions":{}}},"id":7374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2555:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2537:28:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54726561737572792077616c6c6574206e6f7420736574","id":7376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2567:25:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6b764185d3739b16932c4b21e6113072c4e801fae3cbd068bda517d69a2b702","typeString":"literal_string \"Treasury wallet not set\""},"value":"Treasury wallet not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6b764185d3739b16932c4b21e6113072c4e801fae3cbd068bda517d69a2b702","typeString":"literal_string \"Treasury wallet not set\""}],"id":7369,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2529:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2529:64:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7378,"nodeType":"ExpressionStatement","src":"2529:64:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7380,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"2612:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2622:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2612:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e7465726e546f6b656e3a207472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e2030","id":7383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2625:53:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8f695372713ca73e1ed7e8d6d02524ee967ad9719c0fbe55f7b3793a3c983c6","typeString":"literal_string \"InternToken: transfer amount must be greater than 0\""},"value":"InternToken: transfer amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8f695372713ca73e1ed7e8d6d02524ee967ad9719c0fbe55f7b3793a3c983c6","typeString":"literal_string \"InternToken: transfer amount must be greater than 0\""}],"id":7379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2604:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2604:75:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7385,"nodeType":"ExpressionStatement","src":"2604:75:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7388,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"2708:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7387,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"2698:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2698:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7390,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"2718:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2698:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e7465726e546f6b656e3a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":7392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2727:46:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac2d795607587893923b3aa1b5542e9f78e9f5392a2961a0545e2d20edfb88c","typeString":"literal_string \"InternToken: transfer amount exceeds balance\""},"value":"InternToken: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac2d795607587893923b3aa1b5542e9f78e9f5392a2961a0545e2d20edfb88c","typeString":"literal_string \"InternToken: transfer amount exceeds balance\""}],"id":7386,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2690:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2690:84:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7394,"nodeType":"ExpressionStatement","src":"2690:84:24"},{"expression":{"arguments":[{"id":7398,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"2801:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7399,"name":"treasuryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"2808:14:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7400,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"2824:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7395,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2785:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_InternToken_$7522_$","typeString":"type(contract super InternToken)"}},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2791:9:24","memberName":"_transfer","nodeType":"MemberAccess","referencedDeclaration":554,"src":"2785:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:47:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7402,"nodeType":"ExpressionStatement","src":"2785:47:24"}]},"id":7404,"implemented":true,"kind":"function","modifiers":[],"name":"transferToTreasury","nameLocation":"2459:18:24","nodeType":"FunctionDefinition","parameters":{"id":7367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7364,"mutability":"mutable","name":"_from","nameLocation":"2486:5:24","nodeType":"VariableDeclaration","scope":7404,"src":"2478:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7363,"name":"address","nodeType":"ElementaryTypeName","src":"2478:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7366,"mutability":"mutable","name":"_amount","nameLocation":"2501:7:24","nodeType":"VariableDeclaration","scope":7404,"src":"2493:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7365,"name":"uint256","nodeType":"ElementaryTypeName","src":"2493:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2477:32:24"},"returnParameters":{"id":7368,"nodeType":"ParameterList","parameters":[],"src":"2518:0:24"},"scope":7522,"src":"2450:390:24","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7499,"nodeType":"Block","src":"2924:821:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7414,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"2943:3:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2958:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2950:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7415,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:24","typeDescriptions":{}}},"id":7418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2950:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2943:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e7465726e546f6b656e3a207472616e7366657220746f20746865207a65726f2061646472657373","id":7420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2962:43:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ca180abd869d18a5831f2fb61268d0b877381babef90181ba20eeac3509d0b8","typeString":"literal_string \"InternToken: transfer to the zero address\""},"value":"InternToken: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3ca180abd869d18a5831f2fb61268d0b877381babef90181ba20eeac3509d0b8","typeString":"literal_string \"InternToken: transfer to the zero address\""}],"id":7413,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2935:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2935:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7422,"nodeType":"ExpressionStatement","src":"2935:71:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7424,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"3025:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3035:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3025:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e7465726e546f6b656e3a207472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e2030","id":7427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3038:53:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8f695372713ca73e1ed7e8d6d02524ee967ad9719c0fbe55f7b3793a3c983c6","typeString":"literal_string \"InternToken: transfer amount must be greater than 0\""},"value":"InternToken: transfer amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8f695372713ca73e1ed7e8d6d02524ee967ad9719c0fbe55f7b3793a3c983c6","typeString":"literal_string \"InternToken: transfer amount must be greater than 0\""}],"id":7423,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3017:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3017:75:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7429,"nodeType":"ExpressionStatement","src":"3017:75:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7432,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"3121:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7431,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"3111:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3111:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7434,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"3131:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3111:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e7465726e546f6b656e3a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":7436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3140:46:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac2d795607587893923b3aa1b5542e9f78e9f5392a2961a0545e2d20edfb88c","typeString":"literal_string \"InternToken: transfer amount exceeds balance\""},"value":"InternToken: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac2d795607587893923b3aa1b5542e9f78e9f5392a2961a0545e2d20edfb88c","typeString":"literal_string \"InternToken: transfer amount exceeds balance\""}],"id":7430,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3103:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3103:84:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7438,"nodeType":"ExpressionStatement","src":"3103:84:24"},{"expression":{"arguments":[{"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3206:9:24","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7440,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"3207:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3207:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e7465726e546f6b656e3a2043616e206e6f74207472616e73666572207768696c6520706175736564","id":7443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3217:44:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ebd0d5c058430fe624d9b753609f77424dc67b87594f7d18e9f83654b2a01b7","typeString":"literal_string \"InternToken: Can not transfer while paused\""},"value":"InternToken: Can not transfer while paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3ebd0d5c058430fe624d9b753609f77424dc67b87594f7d18e9f83654b2a01b7","typeString":"literal_string \"InternToken: Can not transfer while paused\""}],"id":7439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3198:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3198:64:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7445,"nodeType":"ExpressionStatement","src":"3198:64:24"},{"assignments":[7447],"declarations":[{"constant":false,"id":7447,"mutability":"mutable","name":"_sendAmount","nameLocation":"3281:11:24","nodeType":"VariableDeclaration","scope":7499,"src":"3273:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7446,"name":"uint256","nodeType":"ElementaryTypeName","src":"3273:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7453,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7448,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"3295:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":7449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3305:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3295:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3309:3:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"3295:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3273:39:24"},{"expression":{"arguments":[{"id":7455,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"3364:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7456,"name":"_sendAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"3371:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7454,"name":"transferToTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"3345:18:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7458,"nodeType":"ExpressionStatement","src":"3345:38:24"},{"eventCall":{"arguments":[{"id":7460,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"3414:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7461,"name":"treasuryWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"3421:14:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7462,"name":"_sendAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"3437:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7459,"name":"TaxTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7186,"src":"3399:14:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3399:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7464,"nodeType":"EmitStatement","src":"3394:55:24"},{"assignments":[7466],"declarations":[{"constant":false,"id":7466,"mutability":"mutable","name":"_burnAmount","nameLocation":"3468:11:24","nodeType":"VariableDeclaration","scope":7499,"src":"3460:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7465,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7472,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7467,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"3482:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":7468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3492:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3482:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3496:3:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"3482:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3460:39:24"},{"eventCall":{"arguments":[{"id":7474,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"3542:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7475,"name":"_burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"3549:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7473,"name":"TokensBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"3529:12:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3529:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7477,"nodeType":"EmitStatement","src":"3524:37:24"},{"expression":{"arguments":[{"id":7479,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"3578:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7480,"name":"_burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"3585:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7478,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"3572:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7482,"nodeType":"ExpressionStatement","src":"3572:25:24"},{"assignments":[7484],"declarations":[{"constant":false,"id":7484,"mutability":"mutable","name":"_finalAmount","nameLocation":"3616:12:24","nodeType":"VariableDeclaration","scope":7499,"src":"3608:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7483,"name":"uint256","nodeType":"ElementaryTypeName","src":"3608:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7490,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7485,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"3631:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7486,"name":"_sendAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"3641:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3631:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7488,"name":"_burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"3655:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3631:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3608:58:24"},{"expression":{"arguments":[{"id":7494,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"3712:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7495,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"3719:3:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7496,"name":"_finalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"3724:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7491,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3696:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_InternToken_$7522_$","typeString":"type(contract super InternToken)"}},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3702:9:24","memberName":"_transfer","nodeType":"MemberAccess","referencedDeclaration":554,"src":"3696:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3696:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7498,"nodeType":"ExpressionStatement","src":"3696:41:24"}]},"id":7500,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"2861:8:24","nodeType":"FunctionDefinition","parameters":{"id":7411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7406,"mutability":"mutable","name":"_from","nameLocation":"2878:5:24","nodeType":"VariableDeclaration","scope":7500,"src":"2870:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7405,"name":"address","nodeType":"ElementaryTypeName","src":"2870:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7408,"mutability":"mutable","name":"_to","nameLocation":"2893:3:24","nodeType":"VariableDeclaration","scope":7500,"src":"2885:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7407,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7410,"mutability":"mutable","name":"_amount","nameLocation":"2906:7:24","nodeType":"VariableDeclaration","scope":7500,"src":"2898:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2898:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2869:45:24"},"returnParameters":{"id":7412,"nodeType":"ParameterList","parameters":[],"src":"2924:0:24"},"scope":7522,"src":"2852:893:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[631,981],"body":{"id":7520,"nodeType":"Block","src":"3946:49:24","statements":[{"expression":{"arguments":[{"id":7515,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"3971:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7516,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7504,"src":"3977:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7506,"src":"3981:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7512,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3957:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_InternToken_$7522_$","typeString":"type(contract super InternToken)"}},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3963:7:24","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":981,"src":"3957:13:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3957:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7519,"nodeType":"ExpressionStatement","src":"3957:30:24"}]},"id":7521,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"3834:7:24","nodeType":"FunctionDefinition","overrides":{"id":7510,"nodeType":"OverrideSpecifier","overrides":[{"id":7508,"name":"ERC20","nameLocations":["3919:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"3919:5:24"},{"id":7509,"name":"ERC20Pausable","nameLocations":["3926:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":982,"src":"3926:13:24"}],"src":"3910:30:24"},"parameters":{"id":7507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7502,"mutability":"mutable","name":"from","nameLocation":"3850:4:24","nodeType":"VariableDeclaration","scope":7521,"src":"3842:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7501,"name":"address","nodeType":"ElementaryTypeName","src":"3842:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7504,"mutability":"mutable","name":"to","nameLocation":"3864:2:24","nodeType":"VariableDeclaration","scope":7521,"src":"3856:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7503,"name":"address","nodeType":"ElementaryTypeName","src":"3856:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7506,"mutability":"mutable","name":"value","nameLocation":"3876:5:24","nodeType":"VariableDeclaration","scope":7521,"src":"3868:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7505,"name":"uint256","nodeType":"ElementaryTypeName","src":"3868:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3841:41:24"},"returnParameters":{"id":7511,"nodeType":"ParameterList","parameters":[],"src":"3946:0:24"},"scope":7522,"src":"3825:170:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7523,"src":"582:3416:24","usedErrors":[13,18,184,189,194,203,208,213,1013,1020,1238,1370,1373,1479,1481,3017,3022,3027],"usedEvents":[24,152,836,845,1362,1367,7178,7186,7192]}],"src":"83:3917:24"},"id":24}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ERC20Pausable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209d7b477aa38de15cb42e11ec24c18d89ed6c781a66d5973788c6a9e812bb105064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 PUSH28 0x477AA38DE15CB42E11EC24C18D89ED6C781A66D5973788C6A9E812BB LT POP PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1255:3026:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209d7b477aa38de15cb42e11ec24c18d89ed6c781a66d5973788c6a9e812bb105064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 PUSH28 0x477AA38DE15CB42E11EC24C18D89ED6C781A66D5973788C6A9E812BB LT POP PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1255:3026:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324c39d5297afb136187e0a02fa806c282a2d4d9d4ba345dc57f45522daa24fb64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4C CODECOPY 0xD5 0x29 PUSH27 0xFB136187E0A02FA806C282A2D4D9D4BA345DC57F45522DAA24FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"297:16541:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324c39d5297afb136187e0a02fa806c282a2d4d9d4ba345dc57f45522daa24fb64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4C CODECOPY 0xD5 0x29 PUSH27 0xFB136187E0A02FA806C282A2D4D9D4BA345DC57F45522DAA24FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"297:16541:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220229dad1c21e0c8510b1531cf54c3713bb7b4a8f5f9dc4cd339a76e8551dbcc8864736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 SWAP14 0xAD SHR 0x21 0xE0 0xC8 MLOAD SIGNEXTEND ISZERO BALANCE 0xCF SLOAD 0xC3 PUSH18 0x3BB7B4A8F5F9DC4CD339A76E8551DBCC8864 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"521:3181:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220229dad1c21e0c8510b1531cf54c3713bb7b4a8f5f9dc4cd339a76e8551dbcc8864736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 SWAP14 0xAD SHR 0x21 0xE0 0xC8 MLOAD SIGNEXTEND ISZERO BALANCE 0xCF SLOAD 0xC3 PUSH18 0x3BB7B4A8F5F9DC4CD339A76E8551DBCC8864 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"521:3181:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/Events.sol":{"TokenEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TaxTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensBurned","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TaxTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Events.sol\":\"TokenEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Events.sol\":{\"keccak256\":\"0xcce86908b28a899dad59cce7b3c649e3a670c079f2752a007c9e962b2ddff596\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://35327cbb3e50993ea1e820141b6370288ea200d702ec8472bff5e964ef9dc78c\",\"dweb:/ipfs/QmWUzeLeSMm8smqyENZFUfB1HjPjbDYy4QEtbZ2USzzJbE\"]}},\"version\":1}"}},"contracts/InternToken.sol":{"InternToken":{"abi":[{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TaxTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasuryWallet","type":"address"}],"name":"setTreasuryWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasuryWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1031":{"entryPoint":null,"id":1031,"parameterSlots":1,"returnSlots":0},"@_1382":{"entryPoint":null,"id":1382,"parameterSlots":0,"returnSlots":0},"@_3451":{"entryPoint":null,"id":3451,"parameterSlots":2,"returnSlots":0},"@_361":{"entryPoint":null,"id":361,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7255":{"entryPoint":null,"id":7255,"parameterSlots":2,"returnSlots":0},"@_buildDomainSeparator_3498":{"entryPoint":973,"id":3498,"parameterSlots":0,"returnSlots":1},"@_mint_664":{"entryPoint":1066,"id":664,"parameterSlots":2,"returnSlots":0},"@_requireNotPaused_1419":{"entryPoint":1390,"id":1419,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":687,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_631":{"entryPoint":1464,"id":631,"parameterSlots":3,"returnSlots":0},"@_update_7521":{"entryPoint":1326,"id":7521,"parameterSlots":3,"returnSlots":0},"@_update_981":{"entryPoint":1350,"id":981,"parameterSlots":3,"returnSlots":0},"@getStringSlot_1783":{"entryPoint":1316,"id":1783,"parameterSlots":1,"returnSlots":1},"@paused_1407":{"entryPoint":2024,"id":1407,"parameterSlots":0,"returnSlots":1},"@toShortStringWithFallback_1623":{"entryPoint":885,"id":1623,"parameterSlots":2,"returnSlots":1},"@toShortString_1525":{"entryPoint":1207,"id":1525,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":2130,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":2153,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3089,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3145,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3350,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3162,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3719,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":3179,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3415,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3780,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":3462,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2382,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":3451,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2224,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3272,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3660,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2703,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2084,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3135,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2052,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2518,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2664,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":3501,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":2538,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2858,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3289,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2403,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2329,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2828,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":2528,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2796,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3613,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2282,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2235,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2578,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":3478,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2047,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3333,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2419,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2783,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2636,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2432,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2588,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2104,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2631,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11217:25","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:25","statements":[{"nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:25"},"nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:25"},"nodeType":"YulFunctionCall","src":"187:12:25"},"nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:25"},"nodeType":"YulFunctionCall","src":"310:12:25"},"nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nodeType":"YulBlock","src":"379:81:25","statements":[{"nodeType":"YulAssignment","src":"389:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:25"},"nodeType":"YulFunctionCall","src":"400:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:25","type":""}],"src":"334:126:25"},{"body":{"nodeType":"YulBlock","src":"511:51:25","statements":[{"nodeType":"YulAssignment","src":"521:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:25"},"nodeType":"YulFunctionCall","src":"532:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:25","type":""}],"src":"466:96:25"},{"body":{"nodeType":"YulBlock","src":"611:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:25"},"nodeType":"YulFunctionCall","src":"670:12:25"},"nodeType":"YulExpressionStatement","src":"670:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:25"},"nodeType":"YulFunctionCall","src":"641:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:25"},"nodeType":"YulFunctionCall","src":"631:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:25"},"nodeType":"YulFunctionCall","src":"624:43:25"},"nodeType":"YulIf","src":"621:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:25","type":""}],"src":"568:122:25"},{"body":{"nodeType":"YulBlock","src":"759:80:25","statements":[{"nodeType":"YulAssignment","src":"769:22:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:25"},"nodeType":"YulFunctionCall","src":"778:13:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:25"},"nodeType":"YulFunctionCall","src":"800:33:25"},"nodeType":"YulExpressionStatement","src":"800:33:25"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:25","type":""}],"src":"696:143:25"},{"body":{"nodeType":"YulBlock","src":"939:413:25","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:25"},"nodeType":"YulFunctionCall","src":"987:79:25"},"nodeType":"YulExpressionStatement","src":"987:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:25"},"nodeType":"YulFunctionCall","src":"956:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:25"},"nodeType":"YulFunctionCall","src":"952:32:25"},"nodeType":"YulIf","src":"949:119:25"},{"nodeType":"YulBlock","src":"1078:128:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:25"},"nodeType":"YulFunctionCall","src":"1164:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:25"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:25"},"nodeType":"YulFunctionCall","src":"1132:64:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:25"}]}]},{"nodeType":"YulBlock","src":"1216:129:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:25","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:25"},"nodeType":"YulFunctionCall","src":"1303:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:25"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:25"},"nodeType":"YulFunctionCall","src":"1271:64:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:25","type":""}],"src":"845:507:25"},{"body":{"nodeType":"YulBlock","src":"1417:40:25","statements":[{"nodeType":"YulAssignment","src":"1428:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1444:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1438:5:25"},"nodeType":"YulFunctionCall","src":"1438:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1428:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1400:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1410:6:25","type":""}],"src":"1358:99:25"},{"body":{"nodeType":"YulBlock","src":"1491:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1508:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1511:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1501:6:25"},"nodeType":"YulFunctionCall","src":"1501:88:25"},"nodeType":"YulExpressionStatement","src":"1501:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1605:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1608:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1598:6:25"},"nodeType":"YulFunctionCall","src":"1598:15:25"},"nodeType":"YulExpressionStatement","src":"1598:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1629:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1632:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1622:6:25"},"nodeType":"YulFunctionCall","src":"1622:15:25"},"nodeType":"YulExpressionStatement","src":"1622:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1463:180:25"},{"body":{"nodeType":"YulBlock","src":"1677:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1694:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1697:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1687:6:25"},"nodeType":"YulFunctionCall","src":"1687:88:25"},"nodeType":"YulExpressionStatement","src":"1687:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1791:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1794:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1784:6:25"},"nodeType":"YulFunctionCall","src":"1784:15:25"},"nodeType":"YulExpressionStatement","src":"1784:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1815:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1818:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1808:6:25"},"nodeType":"YulFunctionCall","src":"1808:15:25"},"nodeType":"YulExpressionStatement","src":"1808:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1649:180:25"},{"body":{"nodeType":"YulBlock","src":"1886:269:25","statements":[{"nodeType":"YulAssignment","src":"1896:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1910:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"1916:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1906:3:25"},"nodeType":"YulFunctionCall","src":"1906:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1896:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"1927:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1957:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"1963:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1953:3:25"},"nodeType":"YulFunctionCall","src":"1953:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1931:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2004:51:25","statements":[{"nodeType":"YulAssignment","src":"2018:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2032:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2040:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2028:3:25"},"nodeType":"YulFunctionCall","src":"2028:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2018:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1984:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1977:6:25"},"nodeType":"YulFunctionCall","src":"1977:26:25"},"nodeType":"YulIf","src":"1974:81:25"},{"body":{"nodeType":"YulBlock","src":"2107:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2121:16:25"},"nodeType":"YulFunctionCall","src":"2121:18:25"},"nodeType":"YulExpressionStatement","src":"2121:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2071:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2094:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2102:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2091:2:25"},"nodeType":"YulFunctionCall","src":"2091:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2068:2:25"},"nodeType":"YulFunctionCall","src":"2068:38:25"},"nodeType":"YulIf","src":"2065:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1870:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1879:6:25","type":""}],"src":"1835:320:25"},{"body":{"nodeType":"YulBlock","src":"2215:87:25","statements":[{"nodeType":"YulAssignment","src":"2225:11:25","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2233:3:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2225:4:25"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2253:1:25","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2256:3:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2246:6:25"},"nodeType":"YulFunctionCall","src":"2246:14:25"},"nodeType":"YulExpressionStatement","src":"2246:14:25"},{"nodeType":"YulAssignment","src":"2269:26:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2287:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2290:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2277:9:25"},"nodeType":"YulFunctionCall","src":"2277:18:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2269:4:25"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2202:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2210:4:25","type":""}],"src":"2161:141:25"},{"body":{"nodeType":"YulBlock","src":"2352:49:25","statements":[{"nodeType":"YulAssignment","src":"2362:33:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"2387:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2376:3:25"},"nodeType":"YulFunctionCall","src":"2376:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"2392:2:25","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2372:3:25"},"nodeType":"YulFunctionCall","src":"2372:23:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2362:6:25"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2335:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2345:6:25","type":""}],"src":"2308:93:25"},{"body":{"nodeType":"YulBlock","src":"2460:54:25","statements":[{"nodeType":"YulAssignment","src":"2470:37:25","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2495:4:25"},{"name":"value","nodeType":"YulIdentifier","src":"2501:5:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2491:3:25"},"nodeType":"YulFunctionCall","src":"2491:16:25"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2470:8:25"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2435:4:25","type":""},{"name":"value","nodeType":"YulTypedName","src":"2441:5:25","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2451:8:25","type":""}],"src":"2407:107:25"},{"body":{"nodeType":"YulBlock","src":"2596:317:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2606:35:25","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2627:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:25","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2623:3:25"},"nodeType":"YulFunctionCall","src":"2623:18:25"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2610:9:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2650:109:25","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2681:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2692:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2662:18:25"},"nodeType":"YulFunctionCall","src":"2662:97:25"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2654:4:25","type":""}]},{"nodeType":"YulAssignment","src":"2768:51:25","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2799:9:25"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2810:8:25"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2780:18:25"},"nodeType":"YulFunctionCall","src":"2780:39:25"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2768:8:25"}]},{"nodeType":"YulAssignment","src":"2828:30:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2841:5:25"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2852:4:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2848:3:25"},"nodeType":"YulFunctionCall","src":"2848:9:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2837:3:25"},"nodeType":"YulFunctionCall","src":"2837:21:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2828:5:25"}]},{"nodeType":"YulAssignment","src":"2867:40:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2880:5:25"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2891:8:25"},{"name":"mask","nodeType":"YulIdentifier","src":"2901:4:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2887:3:25"},"nodeType":"YulFunctionCall","src":"2887:19:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2877:2:25"},"nodeType":"YulFunctionCall","src":"2877:30:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2867:6:25"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2557:5:25","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2564:10:25","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2576:8:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2589:6:25","type":""}],"src":"2520:393:25"},{"body":{"nodeType":"YulBlock","src":"2964:32:25","statements":[{"nodeType":"YulAssignment","src":"2974:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"2985:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2974:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2946:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2956:7:25","type":""}],"src":"2919:77:25"},{"body":{"nodeType":"YulBlock","src":"3034:28:25","statements":[{"nodeType":"YulAssignment","src":"3044:12:25","value":{"name":"value","nodeType":"YulIdentifier","src":"3051:5:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3044:3:25"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3020:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3030:3:25","type":""}],"src":"3002:60:25"},{"body":{"nodeType":"YulBlock","src":"3128:82:25","statements":[{"nodeType":"YulAssignment","src":"3138:66:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3196:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3178:17:25"},"nodeType":"YulFunctionCall","src":"3178:24:25"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3169:8:25"},"nodeType":"YulFunctionCall","src":"3169:34:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3151:17:25"},"nodeType":"YulFunctionCall","src":"3151:53:25"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3138:9:25"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3108:5:25","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3118:9:25","type":""}],"src":"3068:142:25"},{"body":{"nodeType":"YulBlock","src":"3263:28:25","statements":[{"nodeType":"YulAssignment","src":"3273:12:25","value":{"name":"value","nodeType":"YulIdentifier","src":"3280:5:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3273:3:25"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3249:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3259:3:25","type":""}],"src":"3216:75:25"},{"body":{"nodeType":"YulBlock","src":"3373:193:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3383:63:25","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3438:7:25"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3407:30:25"},"nodeType":"YulFunctionCall","src":"3407:39:25"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3387:16:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3462:4:25"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3502:4:25"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3496:5:25"},"nodeType":"YulFunctionCall","src":"3496:11:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3509:6:25"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3541:16:25"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3517:23:25"},"nodeType":"YulFunctionCall","src":"3517:41:25"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3468:27:25"},"nodeType":"YulFunctionCall","src":"3468:91:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3455:6:25"},"nodeType":"YulFunctionCall","src":"3455:105:25"},"nodeType":"YulExpressionStatement","src":"3455:105:25"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3350:4:25","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3356:6:25","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3364:7:25","type":""}],"src":"3297:269:25"},{"body":{"nodeType":"YulBlock","src":"3621:24:25","statements":[{"nodeType":"YulAssignment","src":"3631:8:25","value":{"kind":"number","nodeType":"YulLiteral","src":"3638:1:25","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3631:3:25"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3617:3:25","type":""}],"src":"3572:73:25"},{"body":{"nodeType":"YulBlock","src":"3704:136:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3714:46:25","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3728:30:25"},"nodeType":"YulFunctionCall","src":"3728:32:25"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3718:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3813:4:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3819:6:25"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3827:6:25"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3769:43:25"},"nodeType":"YulFunctionCall","src":"3769:65:25"},"nodeType":"YulExpressionStatement","src":"3769:65:25"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3690:4:25","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3696:6:25","type":""}],"src":"3651:189:25"},{"body":{"nodeType":"YulBlock","src":"3896:136:25","statements":[{"body":{"nodeType":"YulBlock","src":"3963:63:25","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4007:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"4014:1:25","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"3977:29:25"},"nodeType":"YulFunctionCall","src":"3977:39:25"},"nodeType":"YulExpressionStatement","src":"3977:39:25"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3916:5:25"},{"name":"end","nodeType":"YulIdentifier","src":"3923:3:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3913:2:25"},"nodeType":"YulFunctionCall","src":"3913:14:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3928:26:25","statements":[{"nodeType":"YulAssignment","src":"3930:22:25","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3943:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"3950:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:25"},"nodeType":"YulFunctionCall","src":"3939:13:25"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3930:5:25"}]}]},"pre":{"nodeType":"YulBlock","src":"3910:2:25","statements":[]},"src":"3906:120:25"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3884:5:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"3891:3:25","type":""}],"src":"3846:186:25"},{"body":{"nodeType":"YulBlock","src":"4117:464:25","statements":[{"body":{"nodeType":"YulBlock","src":"4143:431:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4157:54:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4205:5:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4173:31:25"},"nodeType":"YulFunctionCall","src":"4173:38:25"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4161:8:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4224:63:25","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4247:8:25"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4275:10:25"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4257:17:25"},"nodeType":"YulFunctionCall","src":"4257:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4243:3:25"},"nodeType":"YulFunctionCall","src":"4243:44:25"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4228:11:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"4444:27:25","statements":[{"nodeType":"YulAssignment","src":"4446:23:25","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4461:8:25"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4446:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4428:10:25"},{"kind":"number","nodeType":"YulLiteral","src":"4440:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4425:2:25"},"nodeType":"YulFunctionCall","src":"4425:18:25"},"nodeType":"YulIf","src":"4422:49:25"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4513:11:25"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4530:8:25"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4558:3:25"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4540:17:25"},"nodeType":"YulFunctionCall","src":"4540:22:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4526:3:25"},"nodeType":"YulFunctionCall","src":"4526:37:25"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4484:28:25"},"nodeType":"YulFunctionCall","src":"4484:80:25"},"nodeType":"YulExpressionStatement","src":"4484:80:25"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4134:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"4139:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4131:2:25"},"nodeType":"YulFunctionCall","src":"4131:11:25"},"nodeType":"YulIf","src":"4128:446:25"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4093:5:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"4100:3:25","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"4105:10:25","type":""}],"src":"4038:543:25"},{"body":{"nodeType":"YulBlock","src":"4650:54:25","statements":[{"nodeType":"YulAssignment","src":"4660:37:25","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4685:4:25"},{"name":"value","nodeType":"YulIdentifier","src":"4691:5:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4681:3:25"},"nodeType":"YulFunctionCall","src":"4681:16:25"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4660:8:25"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4625:4:25","type":""},{"name":"value","nodeType":"YulTypedName","src":"4631:5:25","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4641:8:25","type":""}],"src":"4587:117:25"},{"body":{"nodeType":"YulBlock","src":"4761:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4771:68:25","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4820:1:25","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4823:5:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4816:3:25"},"nodeType":"YulFunctionCall","src":"4816:13:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4835:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4831:3:25"},"nodeType":"YulFunctionCall","src":"4831:6:25"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4787:28:25"},"nodeType":"YulFunctionCall","src":"4787:51:25"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4783:3:25"},"nodeType":"YulFunctionCall","src":"4783:56:25"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4775:4:25","type":""}]},{"nodeType":"YulAssignment","src":"4848:25:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4862:4:25"},{"name":"mask","nodeType":"YulIdentifier","src":"4868:4:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4858:3:25"},"nodeType":"YulFunctionCall","src":"4858:15:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4848:6:25"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4738:4:25","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4744:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4754:6:25","type":""}],"src":"4710:169:25"},{"body":{"nodeType":"YulBlock","src":"4965:214:25","statements":[{"nodeType":"YulAssignment","src":"5098:37:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5125:4:25"},{"name":"len","nodeType":"YulIdentifier","src":"5131:3:25"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5106:18:25"},"nodeType":"YulFunctionCall","src":"5106:29:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5098:4:25"}]},{"nodeType":"YulAssignment","src":"5144:29:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5155:4:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5165:1:25","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5168:3:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5161:3:25"},"nodeType":"YulFunctionCall","src":"5161:11:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5152:2:25"},"nodeType":"YulFunctionCall","src":"5152:21:25"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"5144:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4946:4:25","type":""},{"name":"len","nodeType":"YulTypedName","src":"4952:3:25","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4960:4:25","type":""}],"src":"4884:295:25"},{"body":{"nodeType":"YulBlock","src":"5276:1303:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5287:51:25","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5334:3:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5301:32:25"},"nodeType":"YulFunctionCall","src":"5301:37:25"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5291:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5423:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5425:16:25"},"nodeType":"YulFunctionCall","src":"5425:18:25"},"nodeType":"YulExpressionStatement","src":"5425:18:25"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5395:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5403:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5392:2:25"},"nodeType":"YulFunctionCall","src":"5392:30:25"},"nodeType":"YulIf","src":"5389:56:25"},{"nodeType":"YulVariableDeclaration","src":"5455:52:25","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5501:4:25"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5495:5:25"},"nodeType":"YulFunctionCall","src":"5495:11:25"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5469:25:25"},"nodeType":"YulFunctionCall","src":"5469:38:25"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5459:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5600:4:25"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5606:6:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"5614:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5554:45:25"},"nodeType":"YulFunctionCall","src":"5554:67:25"},"nodeType":"YulExpressionStatement","src":"5554:67:25"},{"nodeType":"YulVariableDeclaration","src":"5631:18:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5648:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5635:9:25","type":""}]},{"nodeType":"YulAssignment","src":"5659:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5672:4:25","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5659:9:25"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5723:611:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5737:37:25","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5756:6:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5768:4:25","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5764:3:25"},"nodeType":"YulFunctionCall","src":"5764:9:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5752:3:25"},"nodeType":"YulFunctionCall","src":"5752:22:25"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5741:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5788:51:25","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5834:4:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5802:31:25"},"nodeType":"YulFunctionCall","src":"5802:37:25"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5792:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5852:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5861:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5856:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"5920:163:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5945:6:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5963:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5968:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5959:3:25"},"nodeType":"YulFunctionCall","src":"5959:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5953:5:25"},"nodeType":"YulFunctionCall","src":"5953:26:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5938:6:25"},"nodeType":"YulFunctionCall","src":"5938:42:25"},"nodeType":"YulExpressionStatement","src":"5938:42:25"},{"nodeType":"YulAssignment","src":"5997:24:25","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6011:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6019:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6007:3:25"},"nodeType":"YulFunctionCall","src":"6007:14:25"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5997:6:25"}]},{"nodeType":"YulAssignment","src":"6038:31:25","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6055:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6066:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6051:3:25"},"nodeType":"YulFunctionCall","src":"6051:18:25"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6038:9:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5886:1:25"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5889:7:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5883:2:25"},"nodeType":"YulFunctionCall","src":"5883:14:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5898:21:25","statements":[{"nodeType":"YulAssignment","src":"5900:17:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5909:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"5912:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5905:3:25"},"nodeType":"YulFunctionCall","src":"5905:12:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5900:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"5879:3:25","statements":[]},"src":"5875:208:25"},{"body":{"nodeType":"YulBlock","src":"6119:156:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6137:43:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6164:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6169:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6160:3:25"},"nodeType":"YulFunctionCall","src":"6160:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6154:5:25"},"nodeType":"YulFunctionCall","src":"6154:26:25"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"6141:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6204:6:25"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6231:9:25"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6246:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6254:4:25","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6242:3:25"},"nodeType":"YulFunctionCall","src":"6242:17:25"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6212:18:25"},"nodeType":"YulFunctionCall","src":"6212:48:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6197:6:25"},"nodeType":"YulFunctionCall","src":"6197:64:25"},"nodeType":"YulExpressionStatement","src":"6197:64:25"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"6102:7:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"6111:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6099:2:25"},"nodeType":"YulFunctionCall","src":"6099:19:25"},"nodeType":"YulIf","src":"6096:179:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6295:4:25"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6309:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"6317:1:25","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6305:3:25"},"nodeType":"YulFunctionCall","src":"6305:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"6321:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6301:3:25"},"nodeType":"YulFunctionCall","src":"6301:22:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6288:6:25"},"nodeType":"YulFunctionCall","src":"6288:36:25"},"nodeType":"YulExpressionStatement","src":"6288:36:25"}]},"nodeType":"YulCase","src":"5716:618:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5721:1:25","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6351:222:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6365:14:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6378:1:25","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6369:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"6402:67:25","statements":[{"nodeType":"YulAssignment","src":"6420:35:25","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6439:3:25"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6444:9:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6435:3:25"},"nodeType":"YulFunctionCall","src":"6435:19:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6429:5:25"},"nodeType":"YulFunctionCall","src":"6429:26:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6420:5:25"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6395:6:25"},"nodeType":"YulIf","src":"6392:77:25"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6489:4:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6548:5:25"},{"name":"newLen","nodeType":"YulIdentifier","src":"6555:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6495:52:25"},"nodeType":"YulFunctionCall","src":"6495:67:25"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6482:6:25"},"nodeType":"YulFunctionCall","src":"6482:81:25"},"nodeType":"YulExpressionStatement","src":"6482:81:25"}]},"nodeType":"YulCase","src":"6343:230:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5696:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"5704:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5693:2:25"},"nodeType":"YulFunctionCall","src":"5693:14:25"},"nodeType":"YulSwitch","src":"5686:887:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5265:4:25","type":""},{"name":"src","nodeType":"YulTypedName","src":"5271:3:25","type":""}],"src":"5184:1395:25"},{"body":{"nodeType":"YulBlock","src":"6650:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6667:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6690:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6672:17:25"},"nodeType":"YulFunctionCall","src":"6672:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6660:6:25"},"nodeType":"YulFunctionCall","src":"6660:37:25"},"nodeType":"YulExpressionStatement","src":"6660:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6638:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6645:3:25","type":""}],"src":"6585:118:25"},{"body":{"nodeType":"YulBlock","src":"6807:124:25","statements":[{"nodeType":"YulAssignment","src":"6817:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6829:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6840:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6825:3:25"},"nodeType":"YulFunctionCall","src":"6825:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6817:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6897:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6910:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6921:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6906:3:25"},"nodeType":"YulFunctionCall","src":"6906:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6853:43:25"},"nodeType":"YulFunctionCall","src":"6853:71:25"},"nodeType":"YulExpressionStatement","src":"6853:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6779:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6791:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6802:4:25","type":""}],"src":"6709:222:25"},{"body":{"nodeType":"YulBlock","src":"6982:32:25","statements":[{"nodeType":"YulAssignment","src":"6992:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"7003:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6992:7:25"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6964:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6974:7:25","type":""}],"src":"6937:77:25"},{"body":{"nodeType":"YulBlock","src":"7085:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7102:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7125:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"7107:17:25"},"nodeType":"YulFunctionCall","src":"7107:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7095:6:25"},"nodeType":"YulFunctionCall","src":"7095:37:25"},"nodeType":"YulExpressionStatement","src":"7095:37:25"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7073:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7080:3:25","type":""}],"src":"7020:118:25"},{"body":{"nodeType":"YulBlock","src":"7209:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7226:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7249:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7231:17:25"},"nodeType":"YulFunctionCall","src":"7231:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7219:6:25"},"nodeType":"YulFunctionCall","src":"7219:37:25"},"nodeType":"YulExpressionStatement","src":"7219:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7197:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7204:3:25","type":""}],"src":"7144:118:25"},{"body":{"nodeType":"YulBlock","src":"7478:454:25","statements":[{"nodeType":"YulAssignment","src":"7488:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7500:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7511:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7496:3:25"},"nodeType":"YulFunctionCall","src":"7496:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7488:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7569:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7582:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7593:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7578:3:25"},"nodeType":"YulFunctionCall","src":"7578:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7525:43:25"},"nodeType":"YulFunctionCall","src":"7525:71:25"},"nodeType":"YulExpressionStatement","src":"7525:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7650:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7663:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7674:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7659:3:25"},"nodeType":"YulFunctionCall","src":"7659:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7606:43:25"},"nodeType":"YulFunctionCall","src":"7606:72:25"},"nodeType":"YulExpressionStatement","src":"7606:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7732:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7745:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7756:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7741:3:25"},"nodeType":"YulFunctionCall","src":"7741:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7688:43:25"},"nodeType":"YulFunctionCall","src":"7688:72:25"},"nodeType":"YulExpressionStatement","src":"7688:72:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"7814:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7827:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7838:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7823:3:25"},"nodeType":"YulFunctionCall","src":"7823:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7770:43:25"},"nodeType":"YulFunctionCall","src":"7770:72:25"},"nodeType":"YulExpressionStatement","src":"7770:72:25"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"7896:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7909:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7920:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7905:3:25"},"nodeType":"YulFunctionCall","src":"7905:19:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7852:43:25"},"nodeType":"YulFunctionCall","src":"7852:73:25"},"nodeType":"YulExpressionStatement","src":"7852:73:25"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7418:9:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7430:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7438:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7446:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7454:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7462:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7473:4:25","type":""}],"src":"7268:664:25"},{"body":{"nodeType":"YulBlock","src":"8034:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8051:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8056:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8044:6:25"},"nodeType":"YulFunctionCall","src":"8044:19:25"},"nodeType":"YulExpressionStatement","src":"8044:19:25"},{"nodeType":"YulAssignment","src":"8072:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8091:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"8096:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8087:3:25"},"nodeType":"YulFunctionCall","src":"8087:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8072:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8006:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"8011:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8022:11:25","type":""}],"src":"7938:169:25"},{"body":{"nodeType":"YulBlock","src":"8175:184:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8185:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"8194:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8189:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"8254:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8279:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"8284:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8275:3:25"},"nodeType":"YulFunctionCall","src":"8275:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8298:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"8303:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8294:3:25"},"nodeType":"YulFunctionCall","src":"8294:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8288:5:25"},"nodeType":"YulFunctionCall","src":"8288:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8268:6:25"},"nodeType":"YulFunctionCall","src":"8268:39:25"},"nodeType":"YulExpressionStatement","src":"8268:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8215:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"8218:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8212:2:25"},"nodeType":"YulFunctionCall","src":"8212:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8226:19:25","statements":[{"nodeType":"YulAssignment","src":"8228:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8237:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"8240:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8233:3:25"},"nodeType":"YulFunctionCall","src":"8233:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8228:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"8208:3:25","statements":[]},"src":"8204:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8337:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8342:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8333:3:25"},"nodeType":"YulFunctionCall","src":"8333:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"8351:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8326:6:25"},"nodeType":"YulFunctionCall","src":"8326:27:25"},"nodeType":"YulExpressionStatement","src":"8326:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8157:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8162:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"8167:6:25","type":""}],"src":"8113:246:25"},{"body":{"nodeType":"YulBlock","src":"8413:54:25","statements":[{"nodeType":"YulAssignment","src":"8423:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8441:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"8448:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8437:3:25"},"nodeType":"YulFunctionCall","src":"8437:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8457:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8453:3:25"},"nodeType":"YulFunctionCall","src":"8453:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8433:3:25"},"nodeType":"YulFunctionCall","src":"8433:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8423:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8396:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8406:6:25","type":""}],"src":"8365:102:25"},{"body":{"nodeType":"YulBlock","src":"8565:285:25","statements":[{"nodeType":"YulVariableDeclaration","src":"8575:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8622:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8589:32:25"},"nodeType":"YulFunctionCall","src":"8589:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8579:6:25","type":""}]},{"nodeType":"YulAssignment","src":"8637:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8703:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8708:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8644:58:25"},"nodeType":"YulFunctionCall","src":"8644:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8637:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8763:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"8770:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8759:3:25"},"nodeType":"YulFunctionCall","src":"8759:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"8777:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"8782:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8724:34:25"},"nodeType":"YulFunctionCall","src":"8724:65:25"},"nodeType":"YulExpressionStatement","src":"8724:65:25"},{"nodeType":"YulAssignment","src":"8798:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8809:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8836:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8814:21:25"},"nodeType":"YulFunctionCall","src":"8814:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8805:3:25"},"nodeType":"YulFunctionCall","src":"8805:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8798:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8546:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8553:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8561:3:25","type":""}],"src":"8473:377:25"},{"body":{"nodeType":"YulBlock","src":"8974:195:25","statements":[{"nodeType":"YulAssignment","src":"8984:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8996:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9007:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8992:3:25"},"nodeType":"YulFunctionCall","src":"8992:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8984:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9031:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9042:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9027:3:25"},"nodeType":"YulFunctionCall","src":"9027:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9050:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"9056:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9046:3:25"},"nodeType":"YulFunctionCall","src":"9046:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9020:6:25"},"nodeType":"YulFunctionCall","src":"9020:47:25"},"nodeType":"YulExpressionStatement","src":"9020:47:25"},{"nodeType":"YulAssignment","src":"9076:86:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9148:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"9157:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9084:63:25"},"nodeType":"YulFunctionCall","src":"9084:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9076:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8946:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8958:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8969:4:25","type":""}],"src":"8856:313:25"},{"body":{"nodeType":"YulBlock","src":"9233:40:25","statements":[{"nodeType":"YulAssignment","src":"9244:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9260:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9254:5:25"},"nodeType":"YulFunctionCall","src":"9254:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9244:6:25"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9216:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9226:6:25","type":""}],"src":"9175:98:25"},{"body":{"nodeType":"YulBlock","src":"9335:60:25","statements":[{"nodeType":"YulAssignment","src":"9345:11:25","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9353:3:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9345:4:25"}]},{"nodeType":"YulAssignment","src":"9366:22:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9378:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"9383:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9374:3:25"},"nodeType":"YulFunctionCall","src":"9374:14:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9366:4:25"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9322:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9330:4:25","type":""}],"src":"9279:116:25"},{"body":{"nodeType":"YulBlock","src":"9456:99:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9467:42:25","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9504:3:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9498:5:25"},"nodeType":"YulFunctionCall","src":"9498:10:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"9480:17:25"},"nodeType":"YulFunctionCall","src":"9480:29:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9471:5:25","type":""}]},{"nodeType":"YulAssignment","src":"9519:29:25","value":{"name":"value","nodeType":"YulIdentifier","src":"9543:5:25"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"9519:11:25"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9436:3:25","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"9444:11:25","type":""}],"src":"9401:154:25"},{"body":{"nodeType":"YulBlock","src":"9651:504:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9662:52:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9708:5:25"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9676:31:25"},"nodeType":"YulFunctionCall","src":"9676:38:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9666:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9723:21:25","value":{"name":"array","nodeType":"YulIdentifier","src":"9739:5:25"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"9727:8:25","type":""}]},{"nodeType":"YulAssignment","src":"9754:52:25","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9800:5:25"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9766:33:25"},"nodeType":"YulFunctionCall","src":"9766:40:25"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"9754:8:25"}]},{"nodeType":"YulAssignment","src":"9816:44:25","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"9851:8:25"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"9825:25:25"},"nodeType":"YulFunctionCall","src":"9825:35:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9816:5:25"}]},{"body":{"nodeType":"YulBlock","src":"9888:260:25","statements":[{"nodeType":"YulAssignment","src":"9902:236:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9932:5:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9999:1:25","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10006:2:25","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"10010:6:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10002:3:25"},"nodeType":"YulFunctionCall","src":"10002:15:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9995:3:25"},"nodeType":"YulFunctionCall","src":"9995:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"10040:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"9955:18:25"},"nodeType":"YulFunctionCall","src":"9955:169:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9911:3:25"},"nodeType":"YulFunctionCall","src":"9911:227:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9902:5:25"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9876:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9884:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9873:2:25"},"nodeType":"YulFunctionCall","src":"9873:14:25"},"nodeType":"YulIf","src":"9870:278:25"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"9635:5:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9645:5:25","type":""}],"src":"9561:594:25"},{"body":{"nodeType":"YulBlock","src":"10189:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10206:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10209:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10199:6:25"},"nodeType":"YulFunctionCall","src":"10199:88:25"},"nodeType":"YulExpressionStatement","src":"10199:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10303:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10306:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10296:6:25"},"nodeType":"YulFunctionCall","src":"10296:15:25"},"nodeType":"YulExpressionStatement","src":"10296:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10327:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10330:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10320:6:25"},"nodeType":"YulFunctionCall","src":"10320:15:25"},"nodeType":"YulExpressionStatement","src":"10320:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10161:180:25"},{"body":{"nodeType":"YulBlock","src":"10391:147:25","statements":[{"nodeType":"YulAssignment","src":"10401:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10424:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10406:17:25"},"nodeType":"YulFunctionCall","src":"10406:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"10401:1:25"}]},{"nodeType":"YulAssignment","src":"10435:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10458:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10440:17:25"},"nodeType":"YulFunctionCall","src":"10440:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"10435:1:25"}]},{"nodeType":"YulAssignment","src":"10469:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10480:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"10483:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10476:3:25"},"nodeType":"YulFunctionCall","src":"10476:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10469:3:25"}]},{"body":{"nodeType":"YulBlock","src":"10509:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10511:16:25"},"nodeType":"YulFunctionCall","src":"10511:18:25"},"nodeType":"YulExpressionStatement","src":"10511:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10501:1:25"},{"name":"sum","nodeType":"YulIdentifier","src":"10504:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10498:2:25"},"nodeType":"YulFunctionCall","src":"10498:10:25"},"nodeType":"YulIf","src":"10495:36:25"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10378:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"10381:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10387:3:25","type":""}],"src":"10347:191:25"},{"body":{"nodeType":"YulBlock","src":"10698:288:25","statements":[{"nodeType":"YulAssignment","src":"10708:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10720:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10731:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10716:3:25"},"nodeType":"YulFunctionCall","src":"10716:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10708:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10788:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10801:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10812:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10797:3:25"},"nodeType":"YulFunctionCall","src":"10797:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10744:43:25"},"nodeType":"YulFunctionCall","src":"10744:71:25"},"nodeType":"YulExpressionStatement","src":"10744:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10869:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10882:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10893:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10878:3:25"},"nodeType":"YulFunctionCall","src":"10878:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10825:43:25"},"nodeType":"YulFunctionCall","src":"10825:72:25"},"nodeType":"YulExpressionStatement","src":"10825:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10951:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10964:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10975:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10960:3:25"},"nodeType":"YulFunctionCall","src":"10960:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10907:43:25"},"nodeType":"YulFunctionCall","src":"10907:72:25"},"nodeType":"YulExpressionStatement","src":"10907:72:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10654:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10666:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10674:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10682:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10693:4:25","type":""}],"src":"10544:442:25"},{"body":{"nodeType":"YulBlock","src":"11090:124:25","statements":[{"nodeType":"YulAssignment","src":"11100:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11112:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11123:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11108:3:25"},"nodeType":"YulFunctionCall","src":"11108:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11100:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11180:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11193:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11204:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11189:3:25"},"nodeType":"YulFunctionCall","src":"11189:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11136:43:25"},"nodeType":"YulFunctionCall","src":"11136:71:25"},"nodeType":"YulExpressionStatement","src":"11136:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11062:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11074:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11085:4:25","type":""}],"src":"10992:222:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101606040523480156200001257600080fd5b50604051620039ca380380620039ca833981810160405281019062000038919062000869565b6040518060400160405280600b81526020017f496e7465726e546f6b656e000000000000000000000000000000000000000000815250806040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250836040518060400160405280600b81526020017f496e7465726e546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f494e540000000000000000000000000000000000000000000000000000000000815250816003908162000123919062000b2a565b50806004908162000135919062000b2a565b5050506000600560006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001c85760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001bf919062000c22565b60405180910390fd5b620001d981620002af60201b60201c565b50620001f06006836200037560201b90919060201c565b61012081815250506200020e6007826200037560201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a081815250506200024d620003cd60201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505050620002a7826969e10de76676d08000006200042a60201b60201c565b505062000ee1565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006020835110156200039b576200039383620004b760201b60201c565b9050620003c7565b82620003ad836200052460201b60201c565b6000019081620003be919062000b2a565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016200040f95949392919062000c6b565b60405160208183030381529060405280519060200120905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200049f5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000496919062000c22565b60405180910390fd5b620004b3600083836200052e60201b60201c565b5050565b600080829050601f815111156200050757826040517f305a27a9000000000000000000000000000000000000000000000000000000008152600401620004fe919062000d57565b60405180910390fd5b805181620005159062000dad565b60001c1760001b915050919050565b6000819050919050565b620005418383836200054660201b60201c565b505050565b620005566200056e60201b60201c565b62000569838383620005b860201b60201c565b505050565b6200057e620007e860201b60201c565b15620005b6576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200060e57806002600082825462000601919062000e4c565b92505081905550620006e4565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156200069d578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620006949392919062000e87565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200072f57806002600082825403925050819055506200077c565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620007db919062000ec4565b60405180910390a3505050565b6000600560009054906101000a900460ff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620008318262000804565b9050919050565b620008438162000824565b81146200084f57600080fd5b50565b600081519050620008638162000838565b92915050565b60008060408385031215620008835762000882620007ff565b5b6000620008938582860162000852565b9250506020620008a68582860162000852565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200093257607f821691505b602082108103620009485762000947620008ea565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620009b27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000973565b620009be868362000973565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000a0b62000a05620009ff84620009d6565b620009e0565b620009d6565b9050919050565b6000819050919050565b62000a2783620009ea565b62000a3f62000a368262000a12565b84845462000980565b825550505050565b600090565b62000a5662000a47565b62000a6381848462000a1c565b505050565b5b8181101562000a8b5762000a7f60008262000a4c565b60018101905062000a69565b5050565b601f82111562000ada5762000aa4816200094e565b62000aaf8462000963565b8101602085101562000abf578190505b62000ad762000ace8562000963565b83018262000a68565b50505b505050565b600082821c905092915050565b600062000aff6000198460080262000adf565b1980831691505092915050565b600062000b1a838362000aec565b9150826002028217905092915050565b62000b3582620008b0565b67ffffffffffffffff81111562000b515762000b50620008bb565b5b62000b5d825462000919565b62000b6a82828562000a8f565b600060209050601f83116001811462000ba2576000841562000b8d578287015190505b62000b99858262000b0c565b86555062000c09565b601f19841662000bb2866200094e565b60005b8281101562000bdc5784890151825560018201915060208501945060208101905062000bb5565b8683101562000bfc578489015162000bf8601f89168262000aec565b8355505b6001600288020188555050505b505050505050565b62000c1c8162000824565b82525050565b600060208201905062000c39600083018462000c11565b92915050565b6000819050919050565b62000c548162000c3f565b82525050565b62000c6581620009d6565b82525050565b600060a08201905062000c82600083018862000c49565b62000c91602083018762000c49565b62000ca0604083018662000c49565b62000caf606083018562000c5a565b62000cbe608083018462000c11565b9695505050505050565b600082825260208201905092915050565b60005b8381101562000cf957808201518184015260208101905062000cdc565b60008484015250505050565b6000601f19601f8301169050919050565b600062000d2382620008b0565b62000d2f818562000cc8565b935062000d4181856020860162000cd9565b62000d4c8162000d05565b840191505092915050565b6000602082019050818103600083015262000d73818462000d16565b905092915050565b600081519050919050565b6000819050602082019050919050565b600062000da4825162000c3f565b80915050919050565b600062000dba8262000d7b565b8262000dc68462000d86565b905062000dd38162000d96565b9250602082101562000e165762000e117fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080262000973565b831692505b5050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000e5982620009d6565b915062000e6683620009d6565b925082820190508082111562000e815762000e8062000e1d565b5b92915050565b600060608201905062000e9e600083018662000c11565b62000ead602083018562000c5a565b62000ebc604083018462000c5a565b949350505050565b600060208201905062000edb600083018462000c5a565b92915050565b60805160a05160c05160e051610100516101205161014051612a8e62000f3c60003960006113450152600061130a015260006116450152600061162401526000610eee01526000610f4401526000610f6d0152612a8e6000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806370a08231116100de5780638da5cb5b11610097578063a9059cbb11610071578063a9059cbb146103f8578063d505accf14610428578063dd62ed3e14610444578063f2fde38b1461047457610173565b80638da5cb5b146103a057806395d89b41146103be578063a8602fea146103dc57610173565b806370a08231146102ec578063715018a61461031c57806379cc6790146103265780637ecebe00146103425780638456cb591461037257806384b0196e1461037c57610173565b80633644e515116101305780633644e515146102505780633f4ba83a1461026e57806340c10f191461027857806342966c68146102945780634626402b146102b05780635c975abb146102ce57610173565b806306fdde0314610178578063095ea7b31461019657806318160ddd146101c657806323b872dd146101e4578063313ce5671461021457806332cb6b0c14610232575b600080fd5b610180610490565b60405161018d9190611df0565b60405180910390f35b6101b060048036038101906101ab9190611eab565b610522565b6040516101bd9190611f06565b60405180910390f35b6101ce610545565b6040516101db9190611f30565b60405180910390f35b6101fe60048036038101906101f99190611f4b565b61054f565b60405161020b9190611f06565b60405180910390f35b61021c61057e565b6040516102299190611fba565b60405180910390f35b61023a610587565b6040516102479190611f30565b60405180910390f35b610258610595565b6040516102659190611fee565b60405180910390f35b6102766105a4565b005b610292600480360381019061028d9190611eab565b6105b6565b005b6102ae60048036038101906102a99190612009565b61074f565b005b6102b8610763565b6040516102c59190612045565b60405180910390f35b6102d6610789565b6040516102e39190611f06565b60405180910390f35b61030660048036038101906103019190612060565b6107a0565b6040516103139190611f30565b60405180910390f35b6103246107e8565b005b610340600480360381019061033b9190611eab565b6107fc565b005b61035c60048036038101906103579190612060565b61081c565b6040516103699190611f30565b60405180910390f35b61037a61082e565b005b610384610840565b6040516103979796959493929190612186565b60405180910390f35b6103a86108ea565b6040516103b59190612045565b60405180910390f35b6103c6610914565b6040516103d39190611df0565b60405180910390f35b6103f660048036038101906103f19190612060565b6109a6565b005b610412600480360381019061040d9190611eab565b610acf565b60405161041f9190611f06565b60405180910390f35b610442600480360381019061043d9190612262565b610af2565b005b61045e60048036038101906104599190612304565b610c3a565b60405161046b9190611f30565b60405180910390f35b61048e60048036038101906104899190612060565b610cc1565b005b60606003805461049f90612373565b80601f01602080910402602001604051908101604052809291908181526020018280546104cb90612373565b80156105185780601f106104ed57610100808354040283529160200191610518565b820191906000526020600020905b8154815290600101906020018083116104fb57829003601f168201915b5050505050905090565b60008061052d610d47565b905061053a818585610d4f565b600191505092915050565b6000600254905090565b60008061055a610d47565b9050610567858285610d61565b610572858585610df6565b60019150509392505050565b60006012905090565b69d3c21bcecceda100000081565b600061059f610eea565b905090565b6105ac610fa1565b6105b4611028565b565b6105be610fa1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361062d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062490612416565b60405180910390fd5b60008111610670576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610667906124a8565b60405180910390fd5b600061067a61057e565b600a610686919061262a565b826106919190612675565b905069d3c21bcecceda1000000816106a7610545565b6106b191906126b7565b11156106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e99061275d565b60405180910390fd5b6106fc838261108b565b8273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040516107429190611f30565b60405180910390a2505050565b61076061075a610d47565b8261110d565b50565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560009054906101000a900460ff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107f0610fa1565b6107fa600061118f565b565b61080e82610808610d47565b83610d61565b610818828261110d565b5050565b600061082782611255565b9050919050565b610836610fa1565b61083e61129e565b565b600060608060008060006060610854611301565b61085c61133c565b46306000801b600067ffffffffffffffff81111561087d5761087c61277d565b5b6040519080825280602002602001820160405280156108ab5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461092390612373565b80601f016020809104026020016040519081016040528092919081815260200182805461094f90612373565b801561099c5780601f106109715761010080835404028352916020019161099c565b820191906000526020600020905b81548152906001019060200180831161097f57829003601f168201915b5050505050905090565b6109ae610fa1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a149061281e565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a82906128b0565b60405180910390fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080610ada610d47565b9050610ae7818585610df6565b600191505092915050565b83421115610b3757836040517f62791302000000000000000000000000000000000000000000000000000000008152600401610b2e9190611f30565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b668c611377565b89604051602001610b7c969594939291906128d0565b6040516020818303038152906040528051906020012090506000610b9f826113ce565b90506000610baf828787876113e8565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c2357808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610c1a929190612931565b60405180910390fd5b610c2e8a8a8a610d4f565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610cc9610fa1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d3b5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d329190612045565b60405180910390fd5b610d448161118f565b50565b600033905090565b610d5c8383836001611418565b505050565b6000610d6d8484610c3a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610df05781811015610de0578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610dd79392919061295a565b60405180910390fd5b610def84848484036000611418565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e685760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e5f9190612045565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610eda5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ed19190612045565b60405180910390fd5b610ee58383836115ef565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610f6657507f000000000000000000000000000000000000000000000000000000000000000046145b15610f93577f00000000000000000000000000000000000000000000000000000000000000009050610f9e565b610f9b6115ff565b90505b90565b610fa9610d47565b73ffffffffffffffffffffffffffffffffffffffff16610fc76108ea565b73ffffffffffffffffffffffffffffffffffffffff161461102657610fea610d47565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161101d9190612045565b60405180910390fd5b565b611030611695565b6000600560006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611074610d47565b6040516110819190612045565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110fd5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110f49190612045565b60405180910390fd5b611109600083836115ef565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361117f5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111769190612045565b60405180910390fd5b61118b826000836115ef565b5050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6112a66116d5565b6001600560006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112ea610d47565b6040516112f79190612045565b60405180910390a1565b606061133760067f000000000000000000000000000000000000000000000000000000000000000061171690919063ffffffff16565b905090565b606061137260077f000000000000000000000000000000000000000000000000000000000000000061171690919063ffffffff16565b905090565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b60006113e16113db610eea565b836117c6565b9050919050565b6000806000806113fa88888888611807565b92509250925061140a82826118fb565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361148a5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016114819190612045565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114fc5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114f39190612045565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156115e9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115e09190611f30565b60405180910390a35b50505050565b6115fa838383611a5f565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000463060405160200161167a959493929190612991565b60405160208183030381529060405280519060200120905090565b61169d610789565b6116d3576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6116dd610789565b15611714576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b606060ff60001b83146117335761172c83611a77565b90506117c0565b81805461173f90612373565b80601f016020809104026020016040519081016040528092919081815260200182805461176b90612373565b80156117b85780601f1061178d576101008083540402835291602001916117b8565b820191906000526020600020905b81548152906001019060200180831161179b57829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156118475760006003859250925092506118f1565b60006001888888886040516000815260200160405260405161186c94939291906129e4565b6020604051602081039080840390855afa15801561188e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036118e257600060016000801b935093509350506118f1565b8060008060001b935093509350505b9450945094915050565b6000600381111561190f5761190e612a29565b5b82600381111561192257611921612a29565b5b0315611a5b576001600381111561193c5761193b612a29565b5b82600381111561194f5761194e612a29565b5b03611986576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561199a57611999612a29565b5b8260038111156119ad576119ac612a29565b5b036119f2578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016119e99190611f30565b60405180910390fd5b600380811115611a0557611a04612a29565b5b826003811115611a1857611a17612a29565b5b03611a5a57806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611a519190611fee565b60405180910390fd5b5b5050565b611a676116d5565b611a72838383611aeb565b505050565b60606000611a8483611d10565b90506000602067ffffffffffffffff811115611aa357611aa261277d565b5b6040519080825280601f01601f191660200182016040528015611ad55781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b3d578060026000828254611b3191906126b7565b92505081905550611c10565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611bc9578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611bc09392919061295a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c595780600260008282540392505081905550611ca6565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611d039190611f30565b60405180910390a3505050565b60008060ff8360001c169050601f811115611d57576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d9a578082015181840152602081019050611d7f565b60008484015250505050565b6000601f19601f8301169050919050565b6000611dc282611d60565b611dcc8185611d6b565b9350611ddc818560208601611d7c565b611de581611da6565b840191505092915050565b60006020820190508181036000830152611e0a8184611db7565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e4282611e17565b9050919050565b611e5281611e37565b8114611e5d57600080fd5b50565b600081359050611e6f81611e49565b92915050565b6000819050919050565b611e8881611e75565b8114611e9357600080fd5b50565b600081359050611ea581611e7f565b92915050565b60008060408385031215611ec257611ec1611e12565b5b6000611ed085828601611e60565b9250506020611ee185828601611e96565b9150509250929050565b60008115159050919050565b611f0081611eeb565b82525050565b6000602082019050611f1b6000830184611ef7565b92915050565b611f2a81611e75565b82525050565b6000602082019050611f456000830184611f21565b92915050565b600080600060608486031215611f6457611f63611e12565b5b6000611f7286828701611e60565b9350506020611f8386828701611e60565b9250506040611f9486828701611e96565b9150509250925092565b600060ff82169050919050565b611fb481611f9e565b82525050565b6000602082019050611fcf6000830184611fab565b92915050565b6000819050919050565b611fe881611fd5565b82525050565b60006020820190506120036000830184611fdf565b92915050565b60006020828403121561201f5761201e611e12565b5b600061202d84828501611e96565b91505092915050565b61203f81611e37565b82525050565b600060208201905061205a6000830184612036565b92915050565b60006020828403121561207657612075611e12565b5b600061208484828501611e60565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6120c28161208d565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6120fd81611e75565b82525050565b600061210f83836120f4565b60208301905092915050565b6000602082019050919050565b6000612133826120c8565b61213d81856120d3565b9350612148836120e4565b8060005b838110156121795781516121608882612103565b975061216b8361211b565b92505060018101905061214c565b5085935050505092915050565b600060e08201905061219b600083018a6120b9565b81810360208301526121ad8189611db7565b905081810360408301526121c18188611db7565b90506121d06060830187611f21565b6121dd6080830186612036565b6121ea60a0830185611fdf565b81810360c08301526121fc8184612128565b905098975050505050505050565b61221381611f9e565b811461221e57600080fd5b50565b6000813590506122308161220a565b92915050565b61223f81611fd5565b811461224a57600080fd5b50565b60008135905061225c81612236565b92915050565b600080600080600080600060e0888a03121561228157612280611e12565b5b600061228f8a828b01611e60565b97505060206122a08a828b01611e60565b96505060406122b18a828b01611e96565b95505060606122c28a828b01611e96565b94505060806122d38a828b01612221565b93505060a06122e48a828b0161224d565b92505060c06122f58a828b0161224d565b91505092959891949750929550565b6000806040838503121561231b5761231a611e12565b5b600061232985828601611e60565b925050602061233a85828601611e60565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061238b57607f821691505b60208210810361239e5761239d612344565b5b50919050565b7f496e7465726e546f6b656e3a206d696e7420746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612400602583611d6b565b915061240b826123a4565b604082019050919050565b6000602082019050818103600083015261242f816123f3565b9050919050565b7f496e7465726e546f6b656e3a206d696e7420616d6f756e74206d75737420626560008201527f2067726561746572207468616e20300000000000000000000000000000000000602082015250565b6000612492602f83611d6b565b915061249d82612436565b604082019050919050565b600060208201905081810360008301526124c181612485565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111561254e5780860481111561252a576125296124c8565b5b60018516156125395780820291505b8081029050612547856124f7565b945061250e565b94509492505050565b6000826125675760019050612623565b816125755760009050612623565b816001811461258b5760028114612595576125c4565b6001915050612623565b60ff8411156125a7576125a66124c8565b5b8360020a9150848211156125be576125bd6124c8565b5b50612623565b5060208310610133831016604e8410600b84101617156125f95782820a9050838111156125f4576125f36124c8565b5b612623565b6126068484846001612504565b9250905081840481111561261d5761261c6124c8565b5b81810290505b9392505050565b600061263582611e75565b915061264083611f9e565b925061266d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612557565b905092915050565b600061268082611e75565b915061268b83611e75565b925082820261269981611e75565b915082820484148315176126b0576126af6124c8565b5b5092915050565b60006126c282611e75565b91506126cd83611e75565b92508282019050808211156126e5576126e46124c8565b5b92915050565b7f496e7465726e546f6b656e3a206d696e7420616d6f756e74206578636565647360008201527f20746f74616c20737570706c7900000000000000000000000000000000000000602082015250565b6000612747602d83611d6b565b9150612752826126eb565b604082019050919050565b600060208201905081810360008301526127768161273a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f496e7465726e546f6b656e3a2074726561737572792077616c6c65742069732060008201527f746865207a65726f206164647265737300000000000000000000000000000000602082015250565b6000612808603083611d6b565b9150612813826127ac565b604082019050919050565b60006020820190508181036000830152612837816127fb565b9050919050565b7f496e7465726e546f6b656e3a2074726561737572792077616c6c65742063616e60008201527f6e6f742062652074686520636f6e747261637420697473656c66000000000000602082015250565b600061289a603a83611d6b565b91506128a58261283e565b604082019050919050565b600060208201905081810360008301526128c98161288d565b9050919050565b600060c0820190506128e56000830189611fdf565b6128f26020830188612036565b6128ff6040830187612036565b61290c6060830186611f21565b6129196080830185611f21565b61292660a0830184611f21565b979650505050505050565b60006040820190506129466000830185612036565b6129536020830184612036565b9392505050565b600060608201905061296f6000830186612036565b61297c6020830185611f21565b6129896040830184611f21565b949350505050565b600060a0820190506129a66000830188611fdf565b6129b36020830187611fdf565b6129c06040830186611fdf565b6129cd6060830185611f21565b6129da6080830184612036565b9695505050505050565b60006080820190506129f96000830187611fdf565b612a066020830186611fab565b612a136040830185611fdf565b612a206060830184611fdf565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220ebb6bfd07fd6f688ed14b6a3fbf6cd8ea66e62f76674fb4bcf89adc105aac07d64736f6c63430008140033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x39CA CODESIZE SUB DUP1 PUSH3 0x39CA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x869 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E7465726E546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E7465726E546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x494E540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x123 SWAP2 SWAP1 PUSH3 0xB2A JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x135 SWAP2 SWAP1 PUSH3 0xB2A JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1C8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1BF SWAP2 SWAP1 PUSH3 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1D9 DUP2 PUSH3 0x2AF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1F0 PUSH1 0x6 DUP4 PUSH3 0x375 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x20E PUSH1 0x7 DUP3 PUSH3 0x375 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x24D PUSH3 0x3CD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x2A7 DUP3 PUSH10 0x69E10DE76676D0800000 PUSH3 0x42A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0xEE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x39B JUMPI PUSH3 0x393 DUP4 PUSH3 0x4B7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x3C7 JUMP JUMPDEST DUP3 PUSH3 0x3AD DUP4 PUSH3 0x524 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x3BE SWAP2 SWAP1 PUSH3 0xB2A JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x40F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xC6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x49F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x496 SWAP2 SWAP1 PUSH3 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x4B3 PUSH1 0x0 DUP4 DUP4 PUSH3 0x52E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x507 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4FE SWAP2 SWAP1 PUSH3 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x515 SWAP1 PUSH3 0xDAD JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x541 DUP4 DUP4 DUP4 PUSH3 0x546 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x556 PUSH3 0x56E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x569 DUP4 DUP4 DUP4 PUSH3 0x5B8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x57E PUSH3 0x7E8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x5B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x60E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x601 SWAP2 SWAP1 PUSH3 0xE4C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x6E4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x69D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x694 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x72F JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x77C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x7DB SWAP2 SWAP1 PUSH3 0xEC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x831 DUP3 PUSH3 0x804 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x843 DUP2 PUSH3 0x824 JUMP JUMPDEST DUP2 EQ PUSH3 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x863 DUP2 PUSH3 0x838 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x883 JUMPI PUSH3 0x882 PUSH3 0x7FF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x893 DUP6 DUP3 DUP7 ADD PUSH3 0x852 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x8A6 DUP6 DUP3 DUP7 ADD PUSH3 0x852 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x932 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x948 JUMPI PUSH3 0x947 PUSH3 0x8EA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x9B2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x973 JUMP JUMPDEST PUSH3 0x9BE DUP7 DUP4 PUSH3 0x973 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA0B PUSH3 0xA05 PUSH3 0x9FF DUP5 PUSH3 0x9D6 JUMP JUMPDEST PUSH3 0x9E0 JUMP JUMPDEST PUSH3 0x9D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA27 DUP4 PUSH3 0x9EA JUMP JUMPDEST PUSH3 0xA3F PUSH3 0xA36 DUP3 PUSH3 0xA12 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x980 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0xA56 PUSH3 0xA47 JUMP JUMPDEST PUSH3 0xA63 DUP2 DUP5 DUP5 PUSH3 0xA1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xA8B JUMPI PUSH3 0xA7F PUSH1 0x0 DUP3 PUSH3 0xA4C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xA69 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xADA JUMPI PUSH3 0xAA4 DUP2 PUSH3 0x94E JUMP JUMPDEST PUSH3 0xAAF DUP5 PUSH3 0x963 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xABF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xAD7 PUSH3 0xACE DUP6 PUSH3 0x963 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xA68 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xAFF PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xADF JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB1A DUP4 DUP4 PUSH3 0xAEC JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xB35 DUP3 PUSH3 0x8B0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xB51 JUMPI PUSH3 0xB50 PUSH3 0x8BB JUMP JUMPDEST JUMPDEST PUSH3 0xB5D DUP3 SLOAD PUSH3 0x919 JUMP JUMPDEST PUSH3 0xB6A DUP3 DUP3 DUP6 PUSH3 0xA8F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xBA2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xB8D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xB99 DUP6 DUP3 PUSH3 0xB0C JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xC09 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xBB2 DUP7 PUSH3 0x94E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xBDC JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xBB5 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xBFC JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xBF8 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xAEC JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xC1C DUP2 PUSH3 0x824 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xC39 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xC11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC54 DUP2 PUSH3 0xC3F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xC65 DUP2 PUSH3 0x9D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0xC82 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0xC49 JUMP JUMPDEST PUSH3 0xC91 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xC49 JUMP JUMPDEST PUSH3 0xCA0 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xC49 JUMP JUMPDEST PUSH3 0xCAF PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xC5A JUMP JUMPDEST PUSH3 0xCBE PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0xC11 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xCF9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xCDC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD23 DUP3 PUSH3 0x8B0 JUMP JUMPDEST PUSH3 0xD2F DUP2 DUP6 PUSH3 0xCC8 JUMP JUMPDEST SWAP4 POP PUSH3 0xD41 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xCD9 JUMP JUMPDEST PUSH3 0xD4C DUP2 PUSH3 0xD05 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xD73 DUP2 DUP5 PUSH3 0xD16 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xDA4 DUP3 MLOAD PUSH3 0xC3F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xDBA DUP3 PUSH3 0xD7B JUMP JUMPDEST DUP3 PUSH3 0xDC6 DUP5 PUSH3 0xD86 JUMP JUMPDEST SWAP1 POP PUSH3 0xDD3 DUP2 PUSH3 0xD96 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xE16 JUMPI PUSH3 0xE11 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x973 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0xE59 DUP3 PUSH3 0x9D6 JUMP JUMPDEST SWAP2 POP PUSH3 0xE66 DUP4 PUSH3 0x9D6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xE81 JUMPI PUSH3 0xE80 PUSH3 0xE1D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xE9E PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0xC11 JUMP JUMPDEST PUSH3 0xEAD PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xC5A JUMP JUMPDEST PUSH3 0xEBC PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xC5A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xEDB PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xC5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x2A8E PUSH3 0xF3C PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1345 ADD MSTORE PUSH1 0x0 PUSH2 0x130A ADD MSTORE PUSH1 0x0 PUSH2 0x1645 ADD MSTORE PUSH1 0x0 PUSH2 0x1624 ADD MSTORE PUSH1 0x0 PUSH2 0xEEE ADD MSTORE PUSH1 0x0 PUSH2 0xF44 ADD MSTORE PUSH1 0x0 PUSH2 0xF6D ADD MSTORE PUSH2 0x2A8E PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x474 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xA8602FEA EQ PUSH2 0x3DC JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x37C JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2CE JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x232 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1EAB JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0x545 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1FBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0x587 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH2 0x5A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x1EAB JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x2009 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D6 PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0x7E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1EAB JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH2 0x82E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x384 PUSH2 0x840 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A8 PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C6 PUSH2 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1EAB JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x442 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x2262 JUMP JUMPDEST PUSH2 0xAF2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x2304 JUMP JUMPDEST PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0xCC1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x49F SWAP1 PUSH2 0x2373 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4CB SWAP1 PUSH2 0x2373 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x518 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x518 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x52D PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP PUSH2 0x53A DUP2 DUP6 DUP6 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x55A PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP PUSH2 0x567 DUP6 DUP3 DUP6 PUSH2 0xD61 JUMP JUMPDEST PUSH2 0x572 DUP6 DUP6 DUP6 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59F PUSH2 0xEEA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5AC PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x5B4 PUSH2 0x1028 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5BE PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x62D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x624 SWAP1 PUSH2 0x2416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x667 SWAP1 PUSH2 0x24A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x67A PUSH2 0x57E JUMP JUMPDEST PUSH1 0xA PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x262A JUMP JUMPDEST DUP3 PUSH2 0x691 SWAP2 SWAP1 PUSH2 0x2675 JUMP JUMPDEST SWAP1 POP PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH2 0x6A7 PUSH2 0x545 JUMP JUMPDEST PUSH2 0x6B1 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST GT ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E9 SWAP1 PUSH2 0x275D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6FC DUP4 DUP3 PUSH2 0x108B JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP3 PUSH1 0x40 MLOAD PUSH2 0x742 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x760 PUSH2 0x75A PUSH2 0xD47 JUMP JUMPDEST DUP3 PUSH2 0x110D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F0 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x7FA PUSH1 0x0 PUSH2 0x118F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x80E DUP3 PUSH2 0x808 PUSH2 0xD47 JUMP JUMPDEST DUP4 PUSH2 0xD61 JUMP JUMPDEST PUSH2 0x818 DUP3 DUP3 PUSH2 0x110D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x827 DUP3 PUSH2 0x1255 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x836 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x83E PUSH2 0x129E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x854 PUSH2 0x1301 JUMP JUMPDEST PUSH2 0x85C PUSH2 0x133C JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x87D JUMPI PUSH2 0x87C PUSH2 0x277D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8AB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x923 SWAP1 PUSH2 0x2373 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x94F SWAP1 PUSH2 0x2373 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x99C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x971 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x99C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x97F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9AE PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA14 SWAP1 PUSH2 0x281E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA82 SWAP1 PUSH2 0x28B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xADA PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE7 DUP2 DUP6 DUP6 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xB37 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2E SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xB66 DUP13 PUSH2 0x1377 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB7C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xB9F DUP3 PUSH2 0x13CE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBAF DUP3 DUP8 DUP8 DUP8 PUSH2 0x13E8 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC23 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1A SWAP3 SWAP2 SWAP1 PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC2E DUP11 DUP11 DUP11 PUSH2 0xD4F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC9 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD3B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD32 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD44 DUP2 PUSH2 0x118F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD5C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1418 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6D DUP5 DUP5 PUSH2 0xC3A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xDF0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xDE0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x295A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEF DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1418 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE68 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5F SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED1 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEE5 DUP4 DUP4 DUP4 PUSH2 0x15EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xF66 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xF93 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xF9E JUMP JUMPDEST PUSH2 0xF9B PUSH2 0x15FF JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xFA9 PUSH2 0xD47 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFC7 PUSH2 0x8EA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1026 JUMPI PUSH2 0xFEA PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101D SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1030 PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1074 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1081 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10FD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F4 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1109 PUSH1 0x0 DUP4 DUP4 PUSH2 0x15EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1176 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x118B DUP3 PUSH1 0x0 DUP4 PUSH2 0x15EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A6 PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x12EA PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F7 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1337 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1716 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1372 PUSH1 0x7 PUSH32 0x0 PUSH2 0x1716 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E1 PUSH2 0x13DB PUSH2 0xEEA JUMP JUMPDEST DUP4 PUSH2 0x17C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x13FA DUP9 DUP9 DUP9 DUP9 PUSH2 0x1807 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x140A DUP3 DUP3 PUSH2 0x18FB JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x148A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1481 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14FC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F3 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x15E9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x15E0 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x15FA DUP4 DUP4 DUP4 PUSH2 0x1A5F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x167A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2991 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x169D PUSH2 0x789 JUMP JUMPDEST PUSH2 0x16D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x16DD PUSH2 0x789 JUMP JUMPDEST ISZERO PUSH2 0x1714 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1733 JUMPI PUSH2 0x172C DUP4 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 POP PUSH2 0x17C0 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x173F SWAP1 PUSH2 0x2373 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x176B SWAP1 PUSH2 0x2373 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x178D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x179B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1847 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x18F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x186C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x188E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18E2 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x18F1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x190F JUMPI PUSH2 0x190E PUSH2 0x2A29 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1922 JUMPI PUSH2 0x1921 PUSH2 0x2A29 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1A5B JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x193C JUMPI PUSH2 0x193B PUSH2 0x2A29 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x194F JUMPI PUSH2 0x194E PUSH2 0x2A29 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1986 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x199A JUMPI PUSH2 0x1999 PUSH2 0x2A29 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19AD JUMPI PUSH2 0x19AC PUSH2 0x2A29 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x19F2 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E9 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1A05 JUMPI PUSH2 0x1A04 PUSH2 0x2A29 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A18 JUMPI PUSH2 0x1A17 PUSH2 0x2A29 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1A5A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A51 SWAP2 SWAP1 PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1A67 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x1A72 DUP4 DUP4 DUP4 PUSH2 0x1AEB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1A84 DUP4 PUSH2 0x1D10 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AA3 JUMPI PUSH2 0x1AA2 PUSH2 0x277D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AD5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B3D JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B31 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1BC9 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x295A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C59 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1CA6 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D03 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1D57 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D9A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D7F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC2 DUP3 PUSH2 0x1D60 JUMP JUMPDEST PUSH2 0x1DCC DUP2 DUP6 PUSH2 0x1D6B JUMP JUMPDEST SWAP4 POP PUSH2 0x1DDC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x1DE5 DUP2 PUSH2 0x1DA6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E0A DUP2 DUP5 PUSH2 0x1DB7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E42 DUP3 PUSH2 0x1E17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E52 DUP2 PUSH2 0x1E37 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E6F DUP2 PUSH2 0x1E49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E88 DUP2 PUSH2 0x1E75 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EA5 DUP2 PUSH2 0x1E7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EC2 JUMPI PUSH2 0x1EC1 PUSH2 0x1E12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED0 DUP6 DUP3 DUP7 ADD PUSH2 0x1E60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EE1 DUP6 DUP3 DUP7 ADD PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F00 DUP2 PUSH2 0x1EEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F1B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F2A DUP2 PUSH2 0x1E75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F45 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F64 JUMPI PUSH2 0x1F63 PUSH2 0x1E12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F72 DUP7 DUP3 DUP8 ADD PUSH2 0x1E60 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F83 DUP7 DUP3 DUP8 ADD PUSH2 0x1E60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F94 DUP7 DUP3 DUP8 ADD PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FB4 DUP2 PUSH2 0x1F9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FCF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FE8 DUP2 PUSH2 0x1FD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2003 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x201F JUMPI PUSH2 0x201E PUSH2 0x1E12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x202D DUP5 DUP3 DUP6 ADD PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x203F DUP2 PUSH2 0x1E37 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x205A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2036 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2076 JUMPI PUSH2 0x2075 PUSH2 0x1E12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2084 DUP5 DUP3 DUP6 ADD PUSH2 0x1E60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C2 DUP2 PUSH2 0x208D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20FD DUP2 PUSH2 0x1E75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x210F DUP4 DUP4 PUSH2 0x20F4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2133 DUP3 PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x213D DUP2 DUP6 PUSH2 0x20D3 JUMP JUMPDEST SWAP4 POP PUSH2 0x2148 DUP4 PUSH2 0x20E4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2179 JUMPI DUP2 MLOAD PUSH2 0x2160 DUP9 DUP3 PUSH2 0x2103 JUMP JUMPDEST SWAP8 POP PUSH2 0x216B DUP4 PUSH2 0x211B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x214C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x219B PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x20B9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x21AD DUP2 DUP10 PUSH2 0x1DB7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x21C1 DUP2 DUP9 PUSH2 0x1DB7 JUMP JUMPDEST SWAP1 POP PUSH2 0x21D0 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x21DD PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x21EA PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1FDF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x21FC DUP2 DUP5 PUSH2 0x2128 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2213 DUP2 PUSH2 0x1F9E JUMP JUMPDEST DUP2 EQ PUSH2 0x221E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2230 DUP2 PUSH2 0x220A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x223F DUP2 PUSH2 0x1FD5 JUMP JUMPDEST DUP2 EQ PUSH2 0x224A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x225C DUP2 PUSH2 0x2236 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2281 JUMPI PUSH2 0x2280 PUSH2 0x1E12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x228F DUP11 DUP3 DUP12 ADD PUSH2 0x1E60 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x22A0 DUP11 DUP3 DUP12 ADD PUSH2 0x1E60 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x22B1 DUP11 DUP3 DUP12 ADD PUSH2 0x1E96 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x22C2 DUP11 DUP3 DUP12 ADD PUSH2 0x1E96 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x22D3 DUP11 DUP3 DUP12 ADD PUSH2 0x2221 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x22E4 DUP11 DUP3 DUP12 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x22F5 DUP11 DUP3 DUP12 ADD PUSH2 0x224D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x231B JUMPI PUSH2 0x231A PUSH2 0x1E12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2329 DUP6 DUP3 DUP7 ADD PUSH2 0x1E60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x233A DUP6 DUP3 DUP7 ADD PUSH2 0x1E60 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x238B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x239E JUMPI PUSH2 0x239D PUSH2 0x2344 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E7465726E546F6B656E3A206D696E7420746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2400 PUSH1 0x25 DUP4 PUSH2 0x1D6B JUMP JUMPDEST SWAP2 POP PUSH2 0x240B DUP3 PUSH2 0x23A4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x242F DUP2 PUSH2 0x23F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E7465726E546F6B656E3A206D696E7420616D6F756E74206D757374206265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2067726561746572207468616E20300000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2492 PUSH1 0x2F DUP4 PUSH2 0x1D6B JUMP JUMPDEST SWAP2 POP PUSH2 0x249D DUP3 PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24C1 DUP2 PUSH2 0x2485 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x254E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x252A JUMPI PUSH2 0x2529 PUSH2 0x24C8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2539 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2547 DUP6 PUSH2 0x24F7 JUMP JUMPDEST SWAP5 POP PUSH2 0x250E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2567 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2623 JUMP JUMPDEST DUP2 PUSH2 0x2575 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2623 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x258B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2595 JUMPI PUSH2 0x25C4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2623 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x25A7 JUMPI PUSH2 0x25A6 PUSH2 0x24C8 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x25BE JUMPI PUSH2 0x25BD PUSH2 0x24C8 JUMP JUMPDEST JUMPDEST POP PUSH2 0x2623 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x25F9 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x25F4 JUMPI PUSH2 0x25F3 PUSH2 0x24C8 JUMP JUMPDEST JUMPDEST PUSH2 0x2623 JUMP JUMPDEST PUSH2 0x2606 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2504 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x261D JUMPI PUSH2 0x261C PUSH2 0x24C8 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2635 DUP3 PUSH2 0x1E75 JUMP JUMPDEST SWAP2 POP PUSH2 0x2640 DUP4 PUSH2 0x1F9E JUMP JUMPDEST SWAP3 POP PUSH2 0x266D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2557 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2680 DUP3 PUSH2 0x1E75 JUMP JUMPDEST SWAP2 POP PUSH2 0x268B DUP4 PUSH2 0x1E75 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2699 DUP2 PUSH2 0x1E75 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x26B0 JUMPI PUSH2 0x26AF PUSH2 0x24C8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C2 DUP3 PUSH2 0x1E75 JUMP JUMPDEST SWAP2 POP PUSH2 0x26CD DUP4 PUSH2 0x1E75 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26E5 JUMPI PUSH2 0x26E4 PUSH2 0x24C8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E7465726E546F6B656E3A206D696E7420616D6F756E742065786365656473 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F74616C20737570706C7900000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2747 PUSH1 0x2D DUP4 PUSH2 0x1D6B JUMP JUMPDEST SWAP2 POP PUSH2 0x2752 DUP3 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2776 DUP2 PUSH2 0x273A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E7465726E546F6B656E3A2074726561737572792077616C6C657420697320 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746865207A65726F206164647265737300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2808 PUSH1 0x30 DUP4 PUSH2 0x1D6B JUMP JUMPDEST SWAP2 POP PUSH2 0x2813 DUP3 PUSH2 0x27AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2837 DUP2 PUSH2 0x27FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E7465726E546F6B656E3A2074726561737572792077616C6C65742063616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F742062652074686520636F6E747261637420697473656C66000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289A PUSH1 0x3A DUP4 PUSH2 0x1D6B JUMP JUMPDEST SWAP2 POP PUSH2 0x28A5 DUP3 PUSH2 0x283E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28C9 DUP2 PUSH2 0x288D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x28E5 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x28F2 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x28FF PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x290C PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x2919 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x2926 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1F21 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2946 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x2953 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2036 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x296F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x297C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x2989 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F21 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x29A6 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x29B3 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x29C0 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x29CD PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x29DA PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2036 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x29F9 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x2A06 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1FAB JUMP JUMPDEST PUSH2 0x2A13 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x2A20 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1FDF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0xB6 0xBF 0xD0 PUSH32 0xD6F688ED14B6A3FBF6CD8EA66E62F76674FB4BCF89ADC105AAC07D64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"582:3416:24:-:0;;;782:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1577:52:7;;;;;;;;;;;;;;;;;1616:4;3328:431:18;;;;;;;;;;;;;;;;;889:12:24;1601:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1241:5:13;1231:7;;:15;;;;;;;;;;;;;;;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3401:45:18;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1577:52:7;955:35:24::3;961:9;972:17;955:5;;;:35;;:::i;:::-;782:216:::0;;582:3416;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2887:340:14:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;;;:20;;:::i;:::-;3050:27;;;;3006:215;3149:5;3108:32;3134:5;3108:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3192:17;;3168:42;;2887:340;;;;;:::o;4113:179:18:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;1708:286:14:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3468:175:15:-;3536:20;3617:10;3607:20;;3468:175;;;:::o;3825:170:24:-;3957:30;3971:4;3977:2;3981:5;3957:13;;;:30;;:::i;:::-;3825:170;;;:::o;1113:145:6:-;1474:19:13;:17;;;:19;;:::i;:::-;1221:30:6::1;1235:4;1241:2;1245:5;1221:13;;;:30;;:::i;:::-;1113:145:::0;;;:::o;2002:128:13:-;2067:8;:6;;;:8;;:::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;6008:1107:3:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;1850:84:13:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;88:117:25:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;6937:77::-;6974:7;7003:5;6992:16;;6937:77;;;:::o;7020:118::-;7107:24;7125:5;7107:24;:::i;:::-;7102:3;7095:37;7020:118;;:::o;7144:::-;7231:24;7249:5;7231:24;:::i;:::-;7226:3;7219:37;7144:118;;:::o;7268:664::-;7473:4;7511:3;7500:9;7496:19;7488:27;;7525:71;7593:1;7582:9;7578:17;7569:6;7525:71;:::i;:::-;7606:72;7674:2;7663:9;7659:18;7650:6;7606:72;:::i;:::-;7688;7756:2;7745:9;7741:18;7732:6;7688:72;:::i;:::-;7770;7838:2;7827:9;7823:18;7814:6;7770:72;:::i;:::-;7852:73;7920:3;7909:9;7905:19;7896:6;7852:73;:::i;:::-;7268:664;;;;;;;;:::o;7938:169::-;8022:11;8056:6;8051:3;8044:19;8096:4;8091:3;8087:14;8072:29;;7938:169;;;;:::o;8113:246::-;8194:1;8204:113;8218:6;8215:1;8212:13;8204:113;;;8303:1;8298:3;8294:11;8288:18;8284:1;8279:3;8275:11;8268:39;8240:2;8237:1;8233:10;8228:15;;8204:113;;;8351:1;8342:6;8337:3;8333:16;8326:27;8175:184;8113:246;;;:::o;8365:102::-;8406:6;8457:2;8453:7;8448:2;8441:5;8437:14;8433:28;8423:38;;8365:102;;;:::o;8473:377::-;8561:3;8589:39;8622:5;8589:39;:::i;:::-;8644:71;8708:6;8703:3;8644:71;:::i;:::-;8637:78;;8724:65;8782:6;8777:3;8770:4;8763:5;8759:16;8724:65;:::i;:::-;8814:29;8836:6;8814:29;:::i;:::-;8809:3;8805:39;8798:46;;8565:285;8473:377;;;;:::o;8856:313::-;8969:4;9007:2;8996:9;8992:18;8984:26;;9056:9;9050:4;9046:20;9042:1;9031:9;9027:17;9020:47;9084:78;9157:4;9148:6;9084:78;:::i;:::-;9076:86;;8856:313;;;;:::o;9175:98::-;9226:6;9260:5;9254:12;9244:22;;9175:98;;;:::o;9279:116::-;9330:4;9353:3;9345:11;;9383:4;9378:3;9374:14;9366:22;;9279:116;;;:::o;9401:154::-;9444:11;9480:29;9504:3;9498:10;9480:29;:::i;:::-;9543:5;9519:29;;9456:99;9401:154;;;:::o;9561:594::-;9645:5;9676:38;9708:5;9676:38;:::i;:::-;9739:5;9766:40;9800:5;9766:40;:::i;:::-;9754:52;;9825:35;9851:8;9825:35;:::i;:::-;9816:44;;9884:2;9876:6;9873:14;9870:278;;;9955:169;10040:66;10010:6;10006:2;10002:15;9999:1;9995:23;9955:169;:::i;:::-;9932:5;9911:227;9902:236;;9870:278;9651:504;;9561:594;;;:::o;10161:180::-;10209:77;10206:1;10199:88;10306:4;10303:1;10296:15;10330:4;10327:1;10320:15;10347:191;10387:3;10406:20;10424:1;10406:20;:::i;:::-;10401:25;;10440:20;10458:1;10440:20;:::i;:::-;10435:25;;10483:1;10480;10476:9;10469:16;;10504:3;10501:1;10498:10;10495:36;;;10511:18;;:::i;:::-;10495:36;10347:191;;;;:::o;10544:442::-;10693:4;10731:2;10720:9;10716:18;10708:26;;10744:71;10812:1;10801:9;10797:17;10788:6;10744:71;:::i;:::-;10825:72;10893:2;10882:9;10878:18;10869:6;10825:72;:::i;:::-;10907;10975:2;10964:9;10960:18;10951:6;10907:72;:::i;:::-;10544:442;;;;;;:::o;10992:222::-;11085:4;11123:2;11112:9;11108:18;11100:26;;11136:71;11204:1;11193:9;11189:17;11180:6;11136:71;:::i;:::-;10992:222;;;;:::o;582:3416:24:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1135":{"entryPoint":1429,"id":1135,"parameterSlots":0,"returnSlots":1},"@MAX_SUPPLY_7226":{"entryPoint":1415,"id":7226,"parameterSlots":0,"returnSlots":0},"@_EIP712Name_3568":{"entryPoint":4865,"id":3568,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3580":{"entryPoint":4924,"id":3580,"parameterSlots":0,"returnSlots":1},"@_approve_715":{"entryPoint":3407,"id":715,"parameterSlots":3,"returnSlots":0},"@_approve_775":{"entryPoint":5144,"id":775,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3498":{"entryPoint":5631,"id":3498,"parameterSlots":0,"returnSlots":1},"@_burn_697":{"entryPoint":4365,"id":697,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":4001,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_3477":{"entryPoint":3818,"id":3477,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3514":{"entryPoint":5070,"id":3514,"parameterSlots":1,"returnSlots":1},"@_mint_664":{"entryPoint":4235,"id":664,"parameterSlots":2,"returnSlots":0},"@_msgSender_1210":{"entryPoint":3399,"id":1210,"parameterSlots":0,"returnSlots":1},"@_pause_1448":{"entryPoint":4766,"id":1448,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_1419":{"entryPoint":5845,"id":1419,"parameterSlots":0,"returnSlots":0},"@_requirePaused_1432":{"entryPoint":5781,"id":1432,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_823":{"entryPoint":3425,"id":823,"parameterSlots":3,"returnSlots":0},"@_throwError_3353":{"entryPoint":6395,"id":3353,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":4495,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_554":{"entryPoint":3574,"id":554,"parameterSlots":3,"returnSlots":0},"@_unpause_1464":{"entryPoint":4136,"id":1464,"parameterSlots":0,"returnSlots":0},"@_update_631":{"entryPoint":6891,"id":631,"parameterSlots":3,"returnSlots":0},"@_update_7521":{"entryPoint":5615,"id":7521,"parameterSlots":3,"returnSlots":0},"@_update_981":{"entryPoint":6751,"id":981,"parameterSlots":3,"returnSlots":0},"@_useNonce_1270":{"entryPoint":4983,"id":1270,"parameterSlots":1,"returnSlots":1},"@allowance_451":{"entryPoint":3130,"id":451,"parameterSlots":2,"returnSlots":1},"@approve_475":{"entryPoint":1314,"id":475,"parameterSlots":2,"returnSlots":1},"@balanceOf_410":{"entryPoint":1952,"id":410,"parameterSlots":1,"returnSlots":1},"@burnFrom_947":{"entryPoint":2044,"id":947,"parameterSlots":2,"returnSlots":0},"@burn_926":{"entryPoint":1871,"id":926,"parameterSlots":1,"returnSlots":0},"@byteLength_1583":{"entryPoint":7440,"id":1583,"parameterSlots":1,"returnSlots":1},"@decimals_388":{"entryPoint":1406,"id":388,"parameterSlots":0,"returnSlots":1},"@eip712Domain_3556":{"entryPoint":2112,"id":3556,"parameterSlots":0,"returnSlots":7},"@mint_7362":{"entryPoint":1462,"id":7362,"parameterSlots":2,"returnSlots":0},"@name_370":{"entryPoint":1168,"id":370,"parameterSlots":0,"returnSlots":1},"@nonces_1125":{"entryPoint":2076,"id":1125,"parameterSlots":1,"returnSlots":1},"@nonces_1255":{"entryPoint":4693,"id":1255,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":2282,"id":67,"parameterSlots":0,"returnSlots":1},"@pause_7264":{"entryPoint":2094,"id":7264,"parameterSlots":0,"returnSlots":0},"@paused_1407":{"entryPoint":1929,"id":1407,"parameterSlots":0,"returnSlots":1},"@permit_1108":{"entryPoint":2802,"id":1108,"parameterSlots":7,"returnSlots":0},"@recover_3304":{"entryPoint":5096,"id":3304,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2024,"id":98,"parameterSlots":0,"returnSlots":0},"@setTreasuryWallet_7305":{"entryPoint":2470,"id":7305,"parameterSlots":1,"returnSlots":0},"@symbol_379":{"entryPoint":2324,"id":379,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_1650":{"entryPoint":5910,"id":1650,"parameterSlots":2,"returnSlots":1},"@toString_1551":{"entryPoint":6775,"id":1551,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3654":{"entryPoint":6086,"id":3654,"parameterSlots":2,"returnSlots":1},"@totalSupply_397":{"entryPoint":1349,"id":397,"parameterSlots":0,"returnSlots":1},"@transferFrom_507":{"entryPoint":1359,"id":507,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":3265,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_434":{"entryPoint":2767,"id":434,"parameterSlots":2,"returnSlots":1},"@treasuryWallet_7228":{"entryPoint":1891,"id":7228,"parameterSlots":0,"returnSlots":0},"@tryRecover_3268":{"entryPoint":6151,"id":3268,"parameterSlots":4,"returnSlots":3},"@unpause_7273":{"entryPoint":1444,"id":7273,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":7776,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":8781,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7830,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":8737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8288,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8964,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8011,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":8802,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7851,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":8201,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":8451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8246,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":8488,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7927,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":8377,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":8159,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7607,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_13a5323e5436fac0297bca735d666ae7c3ae2ce43d6cbffe5ac355835e8a9fb6_to_t_string_memory_ptr_fromStack":{"entryPoint":10381,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_568fe67c8e8527f93d3e65af3d04697a8f476a266300b67a63d5e056e85c9519_to_t_string_memory_ptr_fromStack":{"entryPoint":9203,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_951436ba811880c47ffbef1a1b1afd78ea19e2b29a413b3679d711f3b25e1501_to_t_string_memory_ptr_fromStack":{"entryPoint":10042,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9db009b096b479d8f6933c5ffa2093b96a52991fb1e4cc0214d2ac9b27ecc8c7_to_t_string_memory_ptr_fromStack":{"entryPoint":10235,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ffbe722a9fd305986af135dde73be174202ccef47cd78653f16e32455e178c84_to_t_string_memory_ptr_fromStack":{"entryPoint":9349,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":8436,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7969,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":8107,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8261,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":10545,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":10586,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8582,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":8174,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":10448,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":10641,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":10724,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7664,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_13a5323e5436fac0297bca735d666ae7c3ae2ce43d6cbffe5ac355835e8a9fb6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10416,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_568fe67c8e8527f93d3e65af3d04697a8f476a266300b67a63d5e056e85c9519__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9238,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_951436ba811880c47ffbef1a1b1afd78ea19e2b29a413b3679d711f3b25e1501__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10077,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9db009b096b479d8f6933c5ffa2093b96a52991fb1e4cc0214d2ac9b27ecc8c7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10270,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ffbe722a9fd305986af135dde73be174202ccef47cd78653f16e32455e178c84__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9384,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7984,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":8122,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8420,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8392,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7520,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8475,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":8403,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7531,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9911,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":9476,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":9770,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":9559,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":9845,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7735,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7915,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":8333,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":8149,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7703,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7797,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":8094,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7548,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9075,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9416,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":10793,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":9028,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10109,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7698,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7590,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":9463,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_13a5323e5436fac0297bca735d666ae7c3ae2ce43d6cbffe5ac355835e8a9fb6":{"entryPoint":10302,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_568fe67c8e8527f93d3e65af3d04697a8f476a266300b67a63d5e056e85c9519":{"entryPoint":9124,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_951436ba811880c47ffbef1a1b1afd78ea19e2b29a413b3679d711f3b25e1501":{"entryPoint":9963,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9db009b096b479d8f6933c5ffa2093b96a52991fb1e4cc0214d2ac9b27ecc8c7":{"entryPoint":10156,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ffbe722a9fd305986af135dde73be174202ccef47cd78653f16e32455e178c84":{"entryPoint":9270,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7753,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":8758,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7807,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":8714,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23645:25","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:25","statements":[{"nodeType":"YulAssignment","src":"77:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:25"},"nodeType":"YulFunctionCall","src":"87:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:25","type":""}],"src":"7:99:25"},{"body":{"nodeType":"YulBlock","src":"208:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:25"},"nodeType":"YulFunctionCall","src":"218:19:25"},"nodeType":"YulExpressionStatement","src":"218:19:25"},{"nodeType":"YulAssignment","src":"246:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:25"},"nodeType":"YulFunctionCall","src":"261:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:25","type":""}],"src":"112:169:25"},{"body":{"nodeType":"YulBlock","src":"349:184:25","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:25"},"nodeType":"YulFunctionCall","src":"449:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:25"},"nodeType":"YulFunctionCall","src":"468:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:25"},"nodeType":"YulFunctionCall","src":"462:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:25"},"nodeType":"YulFunctionCall","src":"442:39:25"},"nodeType":"YulExpressionStatement","src":"442:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:25"},"nodeType":"YulFunctionCall","src":"386:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:25","statements":[{"nodeType":"YulAssignment","src":"402:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:25"},"nodeType":"YulFunctionCall","src":"407:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:25","statements":[]},"src":"378:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:25"},"nodeType":"YulFunctionCall","src":"507:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:25"},"nodeType":"YulFunctionCall","src":"500:27:25"},"nodeType":"YulExpressionStatement","src":"500:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:25","type":""}],"src":"287:246:25"},{"body":{"nodeType":"YulBlock","src":"587:54:25","statements":[{"nodeType":"YulAssignment","src":"597:38:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:25"},"nodeType":"YulFunctionCall","src":"611:14:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:25"},"nodeType":"YulFunctionCall","src":"627:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:25"},"nodeType":"YulFunctionCall","src":"607:28:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:25"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:25","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:25","type":""}],"src":"539:102:25"},{"body":{"nodeType":"YulBlock","src":"739:285:25","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:25"},"nodeType":"YulFunctionCall","src":"763:39:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:25","type":""}]},{"nodeType":"YulAssignment","src":"811:78:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:25"},"nodeType":"YulFunctionCall","src":"818:71:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:25"},"nodeType":"YulFunctionCall","src":"933:16:25"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:25"},"nodeType":"YulFunctionCall","src":"898:65:25"},"nodeType":"YulExpressionStatement","src":"898:65:25"},{"nodeType":"YulAssignment","src":"972:46:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:25"},"nodeType":"YulFunctionCall","src":"988:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:25"},"nodeType":"YulFunctionCall","src":"979:39:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:25","type":""}],"src":"647:377:25"},{"body":{"nodeType":"YulBlock","src":"1148:195:25","statements":[{"nodeType":"YulAssignment","src":"1158:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:25"},"nodeType":"YulFunctionCall","src":"1166:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:25"},"nodeType":"YulFunctionCall","src":"1201:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:25"},"nodeType":"YulFunctionCall","src":"1220:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:25"},"nodeType":"YulFunctionCall","src":"1194:47:25"},"nodeType":"YulExpressionStatement","src":"1194:47:25"},{"nodeType":"YulAssignment","src":"1250:86:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:25"},"nodeType":"YulFunctionCall","src":"1258:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:25","type":""}],"src":"1030:313:25"},{"body":{"nodeType":"YulBlock","src":"1389:35:25","statements":[{"nodeType":"YulAssignment","src":"1399:19:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:25"},"nodeType":"YulFunctionCall","src":"1409:9:25"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:25"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:25","type":""}],"src":"1349:75:25"},{"body":{"nodeType":"YulBlock","src":"1519:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:25"},"nodeType":"YulFunctionCall","src":"1529:12:25"},"nodeType":"YulExpressionStatement","src":"1529:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:25"},{"body":{"nodeType":"YulBlock","src":"1642:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:25"},"nodeType":"YulFunctionCall","src":"1652:12:25"},"nodeType":"YulExpressionStatement","src":"1652:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:25"},{"body":{"nodeType":"YulBlock","src":"1721:81:25","statements":[{"nodeType":"YulAssignment","src":"1731:65:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:25"},"nodeType":"YulFunctionCall","src":"1742:54:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:25"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:25","type":""}],"src":"1676:126:25"},{"body":{"nodeType":"YulBlock","src":"1853:51:25","statements":[{"nodeType":"YulAssignment","src":"1863:35:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:25"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:25"},"nodeType":"YulFunctionCall","src":"1874:24:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:25"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:25","type":""}],"src":"1808:96:25"},{"body":{"nodeType":"YulBlock","src":"1953:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:25"},"nodeType":"YulFunctionCall","src":"2012:12:25"},"nodeType":"YulExpressionStatement","src":"2012:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:25"},"nodeType":"YulFunctionCall","src":"1983:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:25"},"nodeType":"YulFunctionCall","src":"1973:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:25"},"nodeType":"YulFunctionCall","src":"1966:43:25"},"nodeType":"YulIf","src":"1963:63:25"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:25","type":""}],"src":"1910:122:25"},{"body":{"nodeType":"YulBlock","src":"2090:87:25","statements":[{"nodeType":"YulAssignment","src":"2100:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:25"},"nodeType":"YulFunctionCall","src":"2109:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:25"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:25"},"nodeType":"YulFunctionCall","src":"2138:33:25"},"nodeType":"YulExpressionStatement","src":"2138:33:25"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:25","type":""}],"src":"2038:139:25"},{"body":{"nodeType":"YulBlock","src":"2228:32:25","statements":[{"nodeType":"YulAssignment","src":"2238:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:25"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:25","type":""}],"src":"2183:77:25"},{"body":{"nodeType":"YulBlock","src":"2309:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:25"},"nodeType":"YulFunctionCall","src":"2368:12:25"},"nodeType":"YulExpressionStatement","src":"2368:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:25"},"nodeType":"YulFunctionCall","src":"2339:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:25"},"nodeType":"YulFunctionCall","src":"2329:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:25"},"nodeType":"YulFunctionCall","src":"2322:43:25"},"nodeType":"YulIf","src":"2319:63:25"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:25","type":""}],"src":"2266:122:25"},{"body":{"nodeType":"YulBlock","src":"2446:87:25","statements":[{"nodeType":"YulAssignment","src":"2456:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:25"},"nodeType":"YulFunctionCall","src":"2465:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:25"},"nodeType":"YulFunctionCall","src":"2494:33:25"},"nodeType":"YulExpressionStatement","src":"2494:33:25"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:25","type":""}],"src":"2394:139:25"},{"body":{"nodeType":"YulBlock","src":"2622:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:25"},"nodeType":"YulFunctionCall","src":"2670:79:25"},"nodeType":"YulExpressionStatement","src":"2670:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:25"},"nodeType":"YulFunctionCall","src":"2639:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:25"},"nodeType":"YulFunctionCall","src":"2635:32:25"},"nodeType":"YulIf","src":"2632:119:25"},{"nodeType":"YulBlock","src":"2761:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:25","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:25"},"nodeType":"YulFunctionCall","src":"2836:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:25"},"nodeType":"YulFunctionCall","src":"2815:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:25"}]}]},{"nodeType":"YulBlock","src":"2888:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:25","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:25"},"nodeType":"YulFunctionCall","src":"2964:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:25"},"nodeType":"YulFunctionCall","src":"2943:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:25","type":""}],"src":"2539:474:25"},{"body":{"nodeType":"YulBlock","src":"3061:48:25","statements":[{"nodeType":"YulAssignment","src":"3071:32:25","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:25"},"nodeType":"YulFunctionCall","src":"3089:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:25"},"nodeType":"YulFunctionCall","src":"3082:21:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:25"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:25","type":""}],"src":"3019:90:25"},{"body":{"nodeType":"YulBlock","src":"3174:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:25"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:25"},"nodeType":"YulFunctionCall","src":"3196:21:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:25"},"nodeType":"YulFunctionCall","src":"3184:34:25"},"nodeType":"YulExpressionStatement","src":"3184:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:25","type":""}],"src":"3115:109:25"},{"body":{"nodeType":"YulBlock","src":"3322:118:25","statements":[{"nodeType":"YulAssignment","src":"3332:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:25"},"nodeType":"YulFunctionCall","src":"3340:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:25"},"nodeType":"YulFunctionCall","src":"3415:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:25"},"nodeType":"YulFunctionCall","src":"3368:65:25"},"nodeType":"YulExpressionStatement","src":"3368:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:25","type":""}],"src":"3230:210:25"},{"body":{"nodeType":"YulBlock","src":"3511:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:25"},"nodeType":"YulFunctionCall","src":"3533:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:25"},"nodeType":"YulFunctionCall","src":"3521:37:25"},"nodeType":"YulExpressionStatement","src":"3521:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:25","type":""}],"src":"3446:118:25"},{"body":{"nodeType":"YulBlock","src":"3668:124:25","statements":[{"nodeType":"YulAssignment","src":"3678:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:25"},"nodeType":"YulFunctionCall","src":"3686:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:25"},"nodeType":"YulFunctionCall","src":"3767:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:25"},"nodeType":"YulFunctionCall","src":"3714:71:25"},"nodeType":"YulExpressionStatement","src":"3714:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:25","type":""}],"src":"3570:222:25"},{"body":{"nodeType":"YulBlock","src":"3898:519:25","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:25"},"nodeType":"YulFunctionCall","src":"3946:79:25"},"nodeType":"YulExpressionStatement","src":"3946:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:25"},"nodeType":"YulFunctionCall","src":"3915:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:25"},"nodeType":"YulFunctionCall","src":"3911:32:25"},"nodeType":"YulIf","src":"3908:119:25"},{"nodeType":"YulBlock","src":"4037:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:25"},"nodeType":"YulFunctionCall","src":"4112:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:25"},"nodeType":"YulFunctionCall","src":"4091:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:25"}]}]},{"nodeType":"YulBlock","src":"4164:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:25"},"nodeType":"YulFunctionCall","src":"4240:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:25"},"nodeType":"YulFunctionCall","src":"4219:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:25"}]}]},{"nodeType":"YulBlock","src":"4292:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:25","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:25"},"nodeType":"YulFunctionCall","src":"4368:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:25"},"nodeType":"YulFunctionCall","src":"4347:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:25","type":""}],"src":"3798:619:25"},{"body":{"nodeType":"YulBlock","src":"4466:43:25","statements":[{"nodeType":"YulAssignment","src":"4476:27:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:25"},"nodeType":"YulFunctionCall","src":"4487:16:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:25"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:25","type":""}],"src":"4423:86:25"},{"body":{"nodeType":"YulBlock","src":"4576:51:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:25"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:25"},"nodeType":"YulFunctionCall","src":"4598:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:25"},"nodeType":"YulFunctionCall","src":"4586:35:25"},"nodeType":"YulExpressionStatement","src":"4586:35:25"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:25","type":""}],"src":"4515:112:25"},{"body":{"nodeType":"YulBlock","src":"4727:120:25","statements":[{"nodeType":"YulAssignment","src":"4737:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:25"},"nodeType":"YulFunctionCall","src":"4745:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:25"},"nodeType":"YulFunctionCall","src":"4822:17:25"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:25"},"nodeType":"YulFunctionCall","src":"4773:67:25"},"nodeType":"YulExpressionStatement","src":"4773:67:25"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:25","type":""}],"src":"4633:214:25"},{"body":{"nodeType":"YulBlock","src":"4898:32:25","statements":[{"nodeType":"YulAssignment","src":"4908:16:25","value":{"name":"value","nodeType":"YulIdentifier","src":"4919:5:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4908:7:25"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4880:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4890:7:25","type":""}],"src":"4853:77:25"},{"body":{"nodeType":"YulBlock","src":"5001:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5018:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5041:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5023:17:25"},"nodeType":"YulFunctionCall","src":"5023:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5011:6:25"},"nodeType":"YulFunctionCall","src":"5011:37:25"},"nodeType":"YulExpressionStatement","src":"5011:37:25"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4989:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4996:3:25","type":""}],"src":"4936:118:25"},{"body":{"nodeType":"YulBlock","src":"5158:124:25","statements":[{"nodeType":"YulAssignment","src":"5168:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5191:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:25"},"nodeType":"YulFunctionCall","src":"5176:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5168:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5248:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5261:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5272:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5257:3:25"},"nodeType":"YulFunctionCall","src":"5257:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5204:43:25"},"nodeType":"YulFunctionCall","src":"5204:71:25"},"nodeType":"YulExpressionStatement","src":"5204:71:25"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5130:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5142:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5153:4:25","type":""}],"src":"5060:222:25"},{"body":{"nodeType":"YulBlock","src":"5354:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"5400:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5402:77:25"},"nodeType":"YulFunctionCall","src":"5402:79:25"},"nodeType":"YulExpressionStatement","src":"5402:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5375:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5371:3:25"},"nodeType":"YulFunctionCall","src":"5371:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"5396:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5367:3:25"},"nodeType":"YulFunctionCall","src":"5367:32:25"},"nodeType":"YulIf","src":"5364:119:25"},{"nodeType":"YulBlock","src":"5493:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5508:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"5522:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5512:6:25","type":""}]},{"nodeType":"YulAssignment","src":"5537:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5572:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"5583:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:25"},"nodeType":"YulFunctionCall","src":"5568:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5592:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5547:20:25"},"nodeType":"YulFunctionCall","src":"5547:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5537:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5324:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5335:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5347:6:25","type":""}],"src":"5288:329:25"},{"body":{"nodeType":"YulBlock","src":"5688:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5705:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5728:5:25"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5710:17:25"},"nodeType":"YulFunctionCall","src":"5710:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5698:6:25"},"nodeType":"YulFunctionCall","src":"5698:37:25"},"nodeType":"YulExpressionStatement","src":"5698:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5676:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5683:3:25","type":""}],"src":"5623:118:25"},{"body":{"nodeType":"YulBlock","src":"5845:124:25","statements":[{"nodeType":"YulAssignment","src":"5855:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5867:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5878:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5863:3:25"},"nodeType":"YulFunctionCall","src":"5863:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5855:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5935:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5948:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5959:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5944:3:25"},"nodeType":"YulFunctionCall","src":"5944:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5891:43:25"},"nodeType":"YulFunctionCall","src":"5891:71:25"},"nodeType":"YulExpressionStatement","src":"5891:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5817:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5829:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5840:4:25","type":""}],"src":"5747:222:25"},{"body":{"nodeType":"YulBlock","src":"6041:263:25","statements":[{"body":{"nodeType":"YulBlock","src":"6087:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6089:77:25"},"nodeType":"YulFunctionCall","src":"6089:79:25"},"nodeType":"YulExpressionStatement","src":"6089:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6062:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"6071:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6058:3:25"},"nodeType":"YulFunctionCall","src":"6058:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"6083:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6054:3:25"},"nodeType":"YulFunctionCall","src":"6054:32:25"},"nodeType":"YulIf","src":"6051:119:25"},{"nodeType":"YulBlock","src":"6180:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"6195:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"6209:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6199:6:25","type":""}]},{"nodeType":"YulAssignment","src":"6224:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6259:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"6270:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6255:3:25"},"nodeType":"YulFunctionCall","src":"6255:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6279:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6234:20:25"},"nodeType":"YulFunctionCall","src":"6234:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6224:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6011:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6022:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6034:6:25","type":""}],"src":"5975:329:25"},{"body":{"nodeType":"YulBlock","src":"6354:105:25","statements":[{"nodeType":"YulAssignment","src":"6364:89:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6379:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"6386:66:25","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6375:3:25"},"nodeType":"YulFunctionCall","src":"6375:78:25"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6364:7:25"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6336:5:25","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6346:7:25","type":""}],"src":"6310:149:25"},{"body":{"nodeType":"YulBlock","src":"6528:52:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6545:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6567:5:25"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"6550:16:25"},"nodeType":"YulFunctionCall","src":"6550:23:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6538:6:25"},"nodeType":"YulFunctionCall","src":"6538:36:25"},"nodeType":"YulExpressionStatement","src":"6538:36:25"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6516:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6523:3:25","type":""}],"src":"6465:115:25"},{"body":{"nodeType":"YulBlock","src":"6660:40:25","statements":[{"nodeType":"YulAssignment","src":"6671:22:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6687:5:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6681:5:25"},"nodeType":"YulFunctionCall","src":"6681:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6671:6:25"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6643:5:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6653:6:25","type":""}],"src":"6586:114:25"},{"body":{"nodeType":"YulBlock","src":"6817:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6834:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"6839:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6827:6:25"},"nodeType":"YulFunctionCall","src":"6827:19:25"},"nodeType":"YulExpressionStatement","src":"6827:19:25"},{"nodeType":"YulAssignment","src":"6855:29:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6874:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"6879:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6870:3:25"},"nodeType":"YulFunctionCall","src":"6870:14:25"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6855:11:25"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6789:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"6794:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6805:11:25","type":""}],"src":"6706:184:25"},{"body":{"nodeType":"YulBlock","src":"6968:60:25","statements":[{"nodeType":"YulAssignment","src":"6978:11:25","value":{"name":"ptr","nodeType":"YulIdentifier","src":"6986:3:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6978:4:25"}]},{"nodeType":"YulAssignment","src":"6999:22:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7011:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"7016:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7007:3:25"},"nodeType":"YulFunctionCall","src":"7007:14:25"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6999:4:25"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6955:3:25","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"6963:4:25","type":""}],"src":"6896:132:25"},{"body":{"nodeType":"YulBlock","src":"7089:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7106:3:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7129:5:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7111:17:25"},"nodeType":"YulFunctionCall","src":"7111:24:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7099:6:25"},"nodeType":"YulFunctionCall","src":"7099:37:25"},"nodeType":"YulExpressionStatement","src":"7099:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7077:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7084:3:25","type":""}],"src":"7034:108:25"},{"body":{"nodeType":"YulBlock","src":"7228:99:25","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7272:6:25"},{"name":"pos","nodeType":"YulIdentifier","src":"7280:3:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7238:33:25"},"nodeType":"YulFunctionCall","src":"7238:46:25"},"nodeType":"YulExpressionStatement","src":"7238:46:25"},{"nodeType":"YulAssignment","src":"7293:28:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7311:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"7316:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7307:3:25"},"nodeType":"YulFunctionCall","src":"7307:14:25"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"7293:10:25"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"7201:6:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7209:3:25","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"7217:10:25","type":""}],"src":"7148:179:25"},{"body":{"nodeType":"YulBlock","src":"7408:38:25","statements":[{"nodeType":"YulAssignment","src":"7418:22:25","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7430:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"7435:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7426:3:25"},"nodeType":"YulFunctionCall","src":"7426:14:25"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"7418:4:25"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7395:3:25","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"7403:4:25","type":""}],"src":"7333:113:25"},{"body":{"nodeType":"YulBlock","src":"7606:608:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7616:68:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7678:5:25"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7630:47:25"},"nodeType":"YulFunctionCall","src":"7630:54:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7620:6:25","type":""}]},{"nodeType":"YulAssignment","src":"7693:93:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7774:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"7779:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7700:73:25"},"nodeType":"YulFunctionCall","src":"7700:86:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7693:3:25"}]},{"nodeType":"YulVariableDeclaration","src":"7795:71:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7860:5:25"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7810:49:25"},"nodeType":"YulFunctionCall","src":"7810:56:25"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"7799:7:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7875:21:25","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"7889:7:25"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7879:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"7965:224:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7979:34:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8006:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8000:5:25"},"nodeType":"YulFunctionCall","src":"8000:13:25"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"7983:13:25","type":""}]},{"nodeType":"YulAssignment","src":"8026:70:25","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"8077:13:25"},{"name":"pos","nodeType":"YulIdentifier","src":"8092:3:25"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8033:43:25"},"nodeType":"YulFunctionCall","src":"8033:63:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8026:3:25"}]},{"nodeType":"YulAssignment","src":"8109:70:25","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8172:6:25"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8119:52:25"},"nodeType":"YulFunctionCall","src":"8119:60:25"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8109:6:25"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7927:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"7930:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7924:2:25"},"nodeType":"YulFunctionCall","src":"7924:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7938:18:25","statements":[{"nodeType":"YulAssignment","src":"7940:14:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7949:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"7952:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7945:3:25"},"nodeType":"YulFunctionCall","src":"7945:9:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7940:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"7909:14:25","statements":[{"nodeType":"YulVariableDeclaration","src":"7911:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"7920:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7915:1:25","type":""}]}]},"src":"7905:284:25"},{"nodeType":"YulAssignment","src":"8198:10:25","value":{"name":"pos","nodeType":"YulIdentifier","src":"8205:3:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8198:3:25"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7585:5:25","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7592:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7601:3:25","type":""}],"src":"7482:732:25"},{"body":{"nodeType":"YulBlock","src":"8574:861:25","statements":[{"nodeType":"YulAssignment","src":"8584:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8596:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8607:3:25","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8592:3:25"},"nodeType":"YulFunctionCall","src":"8592:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8584:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8663:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8676:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8687:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8672:3:25"},"nodeType":"YulFunctionCall","src":"8672:17:25"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"8621:41:25"},"nodeType":"YulFunctionCall","src":"8621:69:25"},"nodeType":"YulExpressionStatement","src":"8621:69:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8711:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8722:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8707:3:25"},"nodeType":"YulFunctionCall","src":"8707:18:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8731:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"8737:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8727:3:25"},"nodeType":"YulFunctionCall","src":"8727:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8700:6:25"},"nodeType":"YulFunctionCall","src":"8700:48:25"},"nodeType":"YulExpressionStatement","src":"8700:48:25"},{"nodeType":"YulAssignment","src":"8757:86:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8829:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"8838:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8765:63:25"},"nodeType":"YulFunctionCall","src":"8765:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8757:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8864:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8875:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8860:3:25"},"nodeType":"YulFunctionCall","src":"8860:18:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8884:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"8890:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8880:3:25"},"nodeType":"YulFunctionCall","src":"8880:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8853:6:25"},"nodeType":"YulFunctionCall","src":"8853:48:25"},"nodeType":"YulExpressionStatement","src":"8853:48:25"},{"nodeType":"YulAssignment","src":"8910:86:25","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8982:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"8991:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8918:63:25"},"nodeType":"YulFunctionCall","src":"8918:78:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8910:4:25"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9050:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9063:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9074:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9059:3:25"},"nodeType":"YulFunctionCall","src":"9059:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9006:43:25"},"nodeType":"YulFunctionCall","src":"9006:72:25"},"nodeType":"YulExpressionStatement","src":"9006:72:25"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9132:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9145:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9156:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9141:3:25"},"nodeType":"YulFunctionCall","src":"9141:19:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9088:43:25"},"nodeType":"YulFunctionCall","src":"9088:73:25"},"nodeType":"YulExpressionStatement","src":"9088:73:25"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9215:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9228:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9239:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9224:3:25"},"nodeType":"YulFunctionCall","src":"9224:19:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"9171:43:25"},"nodeType":"YulFunctionCall","src":"9171:73:25"},"nodeType":"YulExpressionStatement","src":"9171:73:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9265:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"9276:3:25","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9261:3:25"},"nodeType":"YulFunctionCall","src":"9261:19:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9286:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"9292:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9282:3:25"},"nodeType":"YulFunctionCall","src":"9282:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9254:6:25"},"nodeType":"YulFunctionCall","src":"9254:49:25"},"nodeType":"YulExpressionStatement","src":"9254:49:25"},{"nodeType":"YulAssignment","src":"9312:116:25","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"9414:6:25"},{"name":"tail","nodeType":"YulIdentifier","src":"9423:4:25"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9320:93:25"},"nodeType":"YulFunctionCall","src":"9320:108:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9312:4:25"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8498:9:25","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8510:6:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8518:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8526:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8534:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8542:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8550:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8558:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8569:4:25","type":""}],"src":"8220:1215:25"},{"body":{"nodeType":"YulBlock","src":"9482:77:25","statements":[{"body":{"nodeType":"YulBlock","src":"9537:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9546:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9549:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9539:6:25"},"nodeType":"YulFunctionCall","src":"9539:12:25"},"nodeType":"YulExpressionStatement","src":"9539:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9505:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9528:5:25"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"9512:15:25"},"nodeType":"YulFunctionCall","src":"9512:22:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9502:2:25"},"nodeType":"YulFunctionCall","src":"9502:33:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9495:6:25"},"nodeType":"YulFunctionCall","src":"9495:41:25"},"nodeType":"YulIf","src":"9492:61:25"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9475:5:25","type":""}],"src":"9441:118:25"},{"body":{"nodeType":"YulBlock","src":"9615:85:25","statements":[{"nodeType":"YulAssignment","src":"9625:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9647:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9634:12:25"},"nodeType":"YulFunctionCall","src":"9634:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9625:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9688:5:25"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"9663:24:25"},"nodeType":"YulFunctionCall","src":"9663:31:25"},"nodeType":"YulExpressionStatement","src":"9663:31:25"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9593:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"9601:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9609:5:25","type":""}],"src":"9565:135:25"},{"body":{"nodeType":"YulBlock","src":"9749:79:25","statements":[{"body":{"nodeType":"YulBlock","src":"9806:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9815:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9818:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9808:6:25"},"nodeType":"YulFunctionCall","src":"9808:12:25"},"nodeType":"YulExpressionStatement","src":"9808:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9772:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9797:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"9779:17:25"},"nodeType":"YulFunctionCall","src":"9779:24:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9769:2:25"},"nodeType":"YulFunctionCall","src":"9769:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9762:6:25"},"nodeType":"YulFunctionCall","src":"9762:43:25"},"nodeType":"YulIf","src":"9759:63:25"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9742:5:25","type":""}],"src":"9706:122:25"},{"body":{"nodeType":"YulBlock","src":"9886:87:25","statements":[{"nodeType":"YulAssignment","src":"9896:29:25","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9918:6:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9905:12:25"},"nodeType":"YulFunctionCall","src":"9905:20:25"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9896:5:25"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9961:5:25"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"9934:26:25"},"nodeType":"YulFunctionCall","src":"9934:33:25"},"nodeType":"YulExpressionStatement","src":"9934:33:25"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9864:6:25","type":""},{"name":"end","nodeType":"YulTypedName","src":"9872:3:25","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9880:5:25","type":""}],"src":"9834:139:25"},{"body":{"nodeType":"YulBlock","src":"10145:1033:25","statements":[{"body":{"nodeType":"YulBlock","src":"10192:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10194:77:25"},"nodeType":"YulFunctionCall","src":"10194:79:25"},"nodeType":"YulExpressionStatement","src":"10194:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10166:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"10175:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10162:3:25"},"nodeType":"YulFunctionCall","src":"10162:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"10187:3:25","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10158:3:25"},"nodeType":"YulFunctionCall","src":"10158:33:25"},"nodeType":"YulIf","src":"10155:120:25"},{"nodeType":"YulBlock","src":"10285:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10300:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10314:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10304:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10329:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10364:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10375:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10360:3:25"},"nodeType":"YulFunctionCall","src":"10360:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10384:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10339:20:25"},"nodeType":"YulFunctionCall","src":"10339:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10329:6:25"}]}]},{"nodeType":"YulBlock","src":"10412:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10427:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10441:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10431:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10457:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10492:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10503:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10488:3:25"},"nodeType":"YulFunctionCall","src":"10488:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10512:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10467:20:25"},"nodeType":"YulFunctionCall","src":"10467:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10457:6:25"}]}]},{"nodeType":"YulBlock","src":"10540:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10555:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10569:2:25","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10559:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10585:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10620:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10631:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10616:3:25"},"nodeType":"YulFunctionCall","src":"10616:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10640:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10595:20:25"},"nodeType":"YulFunctionCall","src":"10595:53:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10585:6:25"}]}]},{"nodeType":"YulBlock","src":"10668:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10683:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10697:2:25","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10687:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10713:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10748:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10759:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10744:3:25"},"nodeType":"YulFunctionCall","src":"10744:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10768:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10723:20:25"},"nodeType":"YulFunctionCall","src":"10723:53:25"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10713:6:25"}]}]},{"nodeType":"YulBlock","src":"10796:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10811:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10825:3:25","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10815:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10842:61:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10875:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"10886:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10871:3:25"},"nodeType":"YulFunctionCall","src":"10871:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10895:7:25"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"10852:18:25"},"nodeType":"YulFunctionCall","src":"10852:51:25"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10842:6:25"}]}]},{"nodeType":"YulBlock","src":"10923:119:25","statements":[{"nodeType":"YulVariableDeclaration","src":"10938:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"10952:3:25","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10942:6:25","type":""}]},{"nodeType":"YulAssignment","src":"10969:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11004:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11015:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11000:3:25"},"nodeType":"YulFunctionCall","src":"11000:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11024:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"10979:20:25"},"nodeType":"YulFunctionCall","src":"10979:53:25"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"10969:6:25"}]}]},{"nodeType":"YulBlock","src":"11052:119:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11067:17:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11081:3:25","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11071:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11098:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11133:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11144:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11129:3:25"},"nodeType":"YulFunctionCall","src":"11129:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11153:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11108:20:25"},"nodeType":"YulFunctionCall","src":"11108:53:25"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"11098:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10067:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10078:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10090:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10098:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10106:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10114:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10122:6:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10130:6:25","type":""},{"name":"value6","nodeType":"YulTypedName","src":"10138:6:25","type":""}],"src":"9979:1199:25"},{"body":{"nodeType":"YulBlock","src":"11267:391:25","statements":[{"body":{"nodeType":"YulBlock","src":"11313:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11315:77:25"},"nodeType":"YulFunctionCall","src":"11315:79:25"},"nodeType":"YulExpressionStatement","src":"11315:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11288:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"11297:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11284:3:25"},"nodeType":"YulFunctionCall","src":"11284:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"11309:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11280:3:25"},"nodeType":"YulFunctionCall","src":"11280:32:25"},"nodeType":"YulIf","src":"11277:119:25"},{"nodeType":"YulBlock","src":"11406:117:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11421:15:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11435:1:25","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11425:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11450:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11485:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11496:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11481:3:25"},"nodeType":"YulFunctionCall","src":"11481:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11505:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11460:20:25"},"nodeType":"YulFunctionCall","src":"11460:53:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11450:6:25"}]}]},{"nodeType":"YulBlock","src":"11533:118:25","statements":[{"nodeType":"YulVariableDeclaration","src":"11548:16:25","value":{"kind":"number","nodeType":"YulLiteral","src":"11562:2:25","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11552:6:25","type":""}]},{"nodeType":"YulAssignment","src":"11578:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11613:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"11624:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11609:3:25"},"nodeType":"YulFunctionCall","src":"11609:22:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11633:7:25"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11588:20:25"},"nodeType":"YulFunctionCall","src":"11588:53:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11578:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11229:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11240:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11252:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11260:6:25","type":""}],"src":"11184:474:25"},{"body":{"nodeType":"YulBlock","src":"11692:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11709:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11712:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11702:6:25"},"nodeType":"YulFunctionCall","src":"11702:88:25"},"nodeType":"YulExpressionStatement","src":"11702:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11806:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11809:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11799:6:25"},"nodeType":"YulFunctionCall","src":"11799:15:25"},"nodeType":"YulExpressionStatement","src":"11799:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11830:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11833:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11823:6:25"},"nodeType":"YulFunctionCall","src":"11823:15:25"},"nodeType":"YulExpressionStatement","src":"11823:15:25"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"11664:180:25"},{"body":{"nodeType":"YulBlock","src":"11901:269:25","statements":[{"nodeType":"YulAssignment","src":"11911:22:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11925:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"11931:1:25","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11921:3:25"},"nodeType":"YulFunctionCall","src":"11921:12:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11911:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"11942:38:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11972:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"11978:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11968:3:25"},"nodeType":"YulFunctionCall","src":"11968:12:25"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11946:18:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"12019:51:25","statements":[{"nodeType":"YulAssignment","src":"12033:27:25","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12047:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12055:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12043:3:25"},"nodeType":"YulFunctionCall","src":"12043:17:25"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12033:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11999:18:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11992:6:25"},"nodeType":"YulFunctionCall","src":"11992:26:25"},"nodeType":"YulIf","src":"11989:81:25"},{"body":{"nodeType":"YulBlock","src":"12122:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"12136:16:25"},"nodeType":"YulFunctionCall","src":"12136:18:25"},"nodeType":"YulExpressionStatement","src":"12136:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12086:18:25"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12109:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12117:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12106:2:25"},"nodeType":"YulFunctionCall","src":"12106:14:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12083:2:25"},"nodeType":"YulFunctionCall","src":"12083:38:25"},"nodeType":"YulIf","src":"12080:84:25"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11885:4:25","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11894:6:25","type":""}],"src":"11850:320:25"},{"body":{"nodeType":"YulBlock","src":"12282:118:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12304:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12312:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12300:3:25"},"nodeType":"YulFunctionCall","src":"12300:14:25"},{"hexValue":"496e7465726e546f6b656e3a206d696e7420746f20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"12316:34:25","type":"","value":"InternToken: mint to the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12293:6:25"},"nodeType":"YulFunctionCall","src":"12293:58:25"},"nodeType":"YulExpressionStatement","src":"12293:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12372:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12380:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12368:3:25"},"nodeType":"YulFunctionCall","src":"12368:15:25"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"12385:7:25","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12361:6:25"},"nodeType":"YulFunctionCall","src":"12361:32:25"},"nodeType":"YulExpressionStatement","src":"12361:32:25"}]},"name":"store_literal_in_memory_568fe67c8e8527f93d3e65af3d04697a8f476a266300b67a63d5e056e85c9519","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12274:6:25","type":""}],"src":"12176:224:25"},{"body":{"nodeType":"YulBlock","src":"12552:220:25","statements":[{"nodeType":"YulAssignment","src":"12562:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12628:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12633:2:25","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12569:58:25"},"nodeType":"YulFunctionCall","src":"12569:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12562:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12734:3:25"}],"functionName":{"name":"store_literal_in_memory_568fe67c8e8527f93d3e65af3d04697a8f476a266300b67a63d5e056e85c9519","nodeType":"YulIdentifier","src":"12645:88:25"},"nodeType":"YulFunctionCall","src":"12645:93:25"},"nodeType":"YulExpressionStatement","src":"12645:93:25"},{"nodeType":"YulAssignment","src":"12747:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12758:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"12763:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12754:3:25"},"nodeType":"YulFunctionCall","src":"12754:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12747:3:25"}]}]},"name":"abi_encode_t_stringliteral_568fe67c8e8527f93d3e65af3d04697a8f476a266300b67a63d5e056e85c9519_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12540:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12548:3:25","type":""}],"src":"12406:366:25"},{"body":{"nodeType":"YulBlock","src":"12949:248:25","statements":[{"nodeType":"YulAssignment","src":"12959:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12971:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12982:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12967:3:25"},"nodeType":"YulFunctionCall","src":"12967:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12959:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13006:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"13017:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13002:3:25"},"nodeType":"YulFunctionCall","src":"13002:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13025:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"13031:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13021:3:25"},"nodeType":"YulFunctionCall","src":"13021:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12995:6:25"},"nodeType":"YulFunctionCall","src":"12995:47:25"},"nodeType":"YulExpressionStatement","src":"12995:47:25"},{"nodeType":"YulAssignment","src":"13051:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13185:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_568fe67c8e8527f93d3e65af3d04697a8f476a266300b67a63d5e056e85c9519_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13059:124:25"},"nodeType":"YulFunctionCall","src":"13059:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13051:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_568fe67c8e8527f93d3e65af3d04697a8f476a266300b67a63d5e056e85c9519__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12929:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12944:4:25","type":""}],"src":"12778:419:25"},{"body":{"nodeType":"YulBlock","src":"13309:128:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13331:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13339:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13327:3:25"},"nodeType":"YulFunctionCall","src":"13327:14:25"},{"hexValue":"496e7465726e546f6b656e3a206d696e7420616d6f756e74206d757374206265","kind":"string","nodeType":"YulLiteral","src":"13343:34:25","type":"","value":"InternToken: mint amount must be"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13320:6:25"},"nodeType":"YulFunctionCall","src":"13320:58:25"},"nodeType":"YulExpressionStatement","src":"13320:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13399:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"13407:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13395:3:25"},"nodeType":"YulFunctionCall","src":"13395:15:25"},{"hexValue":"2067726561746572207468616e2030","kind":"string","nodeType":"YulLiteral","src":"13412:17:25","type":"","value":" greater than 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13388:6:25"},"nodeType":"YulFunctionCall","src":"13388:42:25"},"nodeType":"YulExpressionStatement","src":"13388:42:25"}]},"name":"store_literal_in_memory_ffbe722a9fd305986af135dde73be174202ccef47cd78653f16e32455e178c84","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13301:6:25","type":""}],"src":"13203:234:25"},{"body":{"nodeType":"YulBlock","src":"13589:220:25","statements":[{"nodeType":"YulAssignment","src":"13599:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13665:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"13670:2:25","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13606:58:25"},"nodeType":"YulFunctionCall","src":"13606:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13599:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13771:3:25"}],"functionName":{"name":"store_literal_in_memory_ffbe722a9fd305986af135dde73be174202ccef47cd78653f16e32455e178c84","nodeType":"YulIdentifier","src":"13682:88:25"},"nodeType":"YulFunctionCall","src":"13682:93:25"},"nodeType":"YulExpressionStatement","src":"13682:93:25"},{"nodeType":"YulAssignment","src":"13784:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13795:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"13800:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13791:3:25"},"nodeType":"YulFunctionCall","src":"13791:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13784:3:25"}]}]},"name":"abi_encode_t_stringliteral_ffbe722a9fd305986af135dde73be174202ccef47cd78653f16e32455e178c84_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13577:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13585:3:25","type":""}],"src":"13443:366:25"},{"body":{"nodeType":"YulBlock","src":"13986:248:25","statements":[{"nodeType":"YulAssignment","src":"13996:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14008:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14019:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14004:3:25"},"nodeType":"YulFunctionCall","src":"14004:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13996:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14043:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"14054:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14039:3:25"},"nodeType":"YulFunctionCall","src":"14039:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14062:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"14068:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14058:3:25"},"nodeType":"YulFunctionCall","src":"14058:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14032:6:25"},"nodeType":"YulFunctionCall","src":"14032:47:25"},"nodeType":"YulExpressionStatement","src":"14032:47:25"},{"nodeType":"YulAssignment","src":"14088:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14222:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_ffbe722a9fd305986af135dde73be174202ccef47cd78653f16e32455e178c84_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14096:124:25"},"nodeType":"YulFunctionCall","src":"14096:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14088:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_ffbe722a9fd305986af135dde73be174202ccef47cd78653f16e32455e178c84__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13966:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13981:4:25","type":""}],"src":"13815:419:25"},{"body":{"nodeType":"YulBlock","src":"14268:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14285:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14288:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14278:6:25"},"nodeType":"YulFunctionCall","src":"14278:88:25"},"nodeType":"YulExpressionStatement","src":"14278:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14382:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14385:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14375:6:25"},"nodeType":"YulFunctionCall","src":"14375:15:25"},"nodeType":"YulExpressionStatement","src":"14375:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14406:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14409:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14399:6:25"},"nodeType":"YulFunctionCall","src":"14399:15:25"},"nodeType":"YulExpressionStatement","src":"14399:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14240:180:25"},{"body":{"nodeType":"YulBlock","src":"14477:51:25","statements":[{"nodeType":"YulAssignment","src":"14487:34:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14512:1:25","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"14515:5:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14508:3:25"},"nodeType":"YulFunctionCall","src":"14508:13:25"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"14487:8:25"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14458:5:25","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"14468:8:25","type":""}],"src":"14426:102:25"},{"body":{"nodeType":"YulBlock","src":"14607:775:25","statements":[{"nodeType":"YulAssignment","src":"14617:15:25","value":{"name":"_power","nodeType":"YulIdentifier","src":"14626:6:25"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"14617:5:25"}]},{"nodeType":"YulAssignment","src":"14641:14:25","value":{"name":"_base","nodeType":"YulIdentifier","src":"14650:5:25"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"14641:4:25"}]},{"body":{"nodeType":"YulBlock","src":"14699:677:25","statements":[{"body":{"nodeType":"YulBlock","src":"14787:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14789:16:25"},"nodeType":"YulFunctionCall","src":"14789:18:25"},"nodeType":"YulExpressionStatement","src":"14789:18:25"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"14765:4:25"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"14775:3:25"},{"name":"base","nodeType":"YulIdentifier","src":"14780:4:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14771:3:25"},"nodeType":"YulFunctionCall","src":"14771:14:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14762:2:25"},"nodeType":"YulFunctionCall","src":"14762:24:25"},"nodeType":"YulIf","src":"14759:50:25"},{"body":{"nodeType":"YulBlock","src":"14854:419:25","statements":[{"nodeType":"YulAssignment","src":"15234:25:25","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"15247:5:25"},{"name":"base","nodeType":"YulIdentifier","src":"15254:4:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15243:3:25"},"nodeType":"YulFunctionCall","src":"15243:16:25"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15234:5:25"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"14829:8:25"},{"kind":"number","nodeType":"YulLiteral","src":"14839:1:25","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14825:3:25"},"nodeType":"YulFunctionCall","src":"14825:16:25"},"nodeType":"YulIf","src":"14822:451:25"},{"nodeType":"YulAssignment","src":"15286:23:25","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15298:4:25"},{"name":"base","nodeType":"YulIdentifier","src":"15304:4:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15294:3:25"},"nodeType":"YulFunctionCall","src":"15294:15:25"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"15286:4:25"}]},{"nodeType":"YulAssignment","src":"15322:44:25","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15357:8:25"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"15334:22:25"},"nodeType":"YulFunctionCall","src":"15334:32:25"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"15322:8:25"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"14675:8:25"},{"kind":"number","nodeType":"YulLiteral","src":"14685:1:25","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14672:2:25"},"nodeType":"YulFunctionCall","src":"14672:15:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14688:2:25","statements":[]},"pre":{"nodeType":"YulBlock","src":"14668:3:25","statements":[]},"src":"14664:712:25"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"14562:6:25","type":""},{"name":"_base","nodeType":"YulTypedName","src":"14570:5:25","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"14577:8:25","type":""},{"name":"max","nodeType":"YulTypedName","src":"14587:3:25","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"14595:5:25","type":""},{"name":"base","nodeType":"YulTypedName","src":"14602:4:25","type":""}],"src":"14534:848:25"},{"body":{"nodeType":"YulBlock","src":"15448:1013:25","statements":[{"body":{"nodeType":"YulBlock","src":"15643:20:25","statements":[{"nodeType":"YulAssignment","src":"15645:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"15654:1:25","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15645:5:25"}]},{"nodeType":"YulLeave","src":"15656:5:25"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15633:8:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15626:6:25"},"nodeType":"YulFunctionCall","src":"15626:16:25"},"nodeType":"YulIf","src":"15623:40:25"},{"body":{"nodeType":"YulBlock","src":"15688:20:25","statements":[{"nodeType":"YulAssignment","src":"15690:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"15699:1:25","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15690:5:25"}]},{"nodeType":"YulLeave","src":"15701:5:25"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"15682:4:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15675:6:25"},"nodeType":"YulFunctionCall","src":"15675:12:25"},"nodeType":"YulIf","src":"15672:36:25"},{"cases":[{"body":{"nodeType":"YulBlock","src":"15818:20:25","statements":[{"nodeType":"YulAssignment","src":"15820:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"15829:1:25","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15820:5:25"}]},{"nodeType":"YulLeave","src":"15831:5:25"}]},"nodeType":"YulCase","src":"15811:27:25","value":{"kind":"number","nodeType":"YulLiteral","src":"15816:1:25","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"15862:176:25","statements":[{"body":{"nodeType":"YulBlock","src":"15897:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15899:16:25"},"nodeType":"YulFunctionCall","src":"15899:18:25"},"nodeType":"YulExpressionStatement","src":"15899:18:25"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"15882:8:25"},{"kind":"number","nodeType":"YulLiteral","src":"15892:3:25","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15879:2:25"},"nodeType":"YulFunctionCall","src":"15879:17:25"},"nodeType":"YulIf","src":"15876:43:25"},{"nodeType":"YulAssignment","src":"15932:25:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15945:1:25","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"15948:8:25"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"15941:3:25"},"nodeType":"YulFunctionCall","src":"15941:16:25"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"15932:5:25"}]},{"body":{"nodeType":"YulBlock","src":"15988:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15990:16:25"},"nodeType":"YulFunctionCall","src":"15990:18:25"},"nodeType":"YulExpressionStatement","src":"15990:18:25"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"15976:5:25"},{"name":"max","nodeType":"YulIdentifier","src":"15983:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15973:2:25"},"nodeType":"YulFunctionCall","src":"15973:14:25"},"nodeType":"YulIf","src":"15970:40:25"},{"nodeType":"YulLeave","src":"16023:5:25"}]},"nodeType":"YulCase","src":"15847:191:25","value":{"kind":"number","nodeType":"YulLiteral","src":"15852:1:25","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"15768:4:25"},"nodeType":"YulSwitch","src":"15761:277:25"},{"body":{"nodeType":"YulBlock","src":"16170:123:25","statements":[{"nodeType":"YulAssignment","src":"16184:28:25","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16197:4:25"},{"name":"exponent","nodeType":"YulIdentifier","src":"16203:8:25"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"16193:3:25"},"nodeType":"YulFunctionCall","src":"16193:19:25"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16184:5:25"}]},{"body":{"nodeType":"YulBlock","src":"16243:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16245:16:25"},"nodeType":"YulFunctionCall","src":"16245:18:25"},"nodeType":"YulExpressionStatement","src":"16245:18:25"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"16231:5:25"},{"name":"max","nodeType":"YulIdentifier","src":"16238:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16228:2:25"},"nodeType":"YulFunctionCall","src":"16228:14:25"},"nodeType":"YulIf","src":"16225:40:25"},{"nodeType":"YulLeave","src":"16278:5:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16073:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"16079:2:25","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16070:2:25"},"nodeType":"YulFunctionCall","src":"16070:12:25"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16087:8:25"},{"kind":"number","nodeType":"YulLiteral","src":"16097:2:25","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16084:2:25"},"nodeType":"YulFunctionCall","src":"16084:16:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16066:3:25"},"nodeType":"YulFunctionCall","src":"16066:35:25"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16122:4:25"},{"kind":"number","nodeType":"YulLiteral","src":"16128:3:25","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16119:2:25"},"nodeType":"YulFunctionCall","src":"16119:13:25"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16137:8:25"},{"kind":"number","nodeType":"YulLiteral","src":"16147:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16134:2:25"},"nodeType":"YulFunctionCall","src":"16134:16:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16115:3:25"},"nodeType":"YulFunctionCall","src":"16115:36:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"16050:2:25"},"nodeType":"YulFunctionCall","src":"16050:111:25"},"nodeType":"YulIf","src":"16047:246:25"},{"nodeType":"YulAssignment","src":"16303:57:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16337:1:25","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"16340:4:25"},{"name":"exponent","nodeType":"YulIdentifier","src":"16346:8:25"},{"name":"max","nodeType":"YulIdentifier","src":"16356:3:25"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"16318:18:25"},"nodeType":"YulFunctionCall","src":"16318:42:25"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16303:5:25"},{"name":"base","nodeType":"YulIdentifier","src":"16310:4:25"}]},{"body":{"nodeType":"YulBlock","src":"16399:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16401:16:25"},"nodeType":"YulFunctionCall","src":"16401:18:25"},"nodeType":"YulExpressionStatement","src":"16401:18:25"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"16376:5:25"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"16387:3:25"},{"name":"base","nodeType":"YulIdentifier","src":"16392:4:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16383:3:25"},"nodeType":"YulFunctionCall","src":"16383:14:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16373:2:25"},"nodeType":"YulFunctionCall","src":"16373:25:25"},"nodeType":"YulIf","src":"16370:51:25"},{"nodeType":"YulAssignment","src":"16430:25:25","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"16443:5:25"},{"name":"base","nodeType":"YulIdentifier","src":"16450:4:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16439:3:25"},"nodeType":"YulFunctionCall","src":"16439:16:25"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16430:5:25"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"15418:4:25","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"15424:8:25","type":""},{"name":"max","nodeType":"YulTypedName","src":"15434:3:25","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"15442:5:25","type":""}],"src":"15388:1073:25"},{"body":{"nodeType":"YulBlock","src":"16531:217:25","statements":[{"nodeType":"YulAssignment","src":"16541:31:25","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16567:4:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16549:17:25"},"nodeType":"YulFunctionCall","src":"16549:23:25"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"16541:4:25"}]},{"nodeType":"YulAssignment","src":"16581:37:25","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"16609:8:25"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"16593:15:25"},"nodeType":"YulFunctionCall","src":"16593:25:25"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"16581:8:25"}]},{"nodeType":"YulAssignment","src":"16628:113:25","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"16658:4:25"},{"name":"exponent","nodeType":"YulIdentifier","src":"16664:8:25"},{"kind":"number","nodeType":"YulLiteral","src":"16674:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"16637:20:25"},"nodeType":"YulFunctionCall","src":"16637:104:25"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"16628:5:25"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"16506:4:25","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"16512:8:25","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"16525:5:25","type":""}],"src":"16467:281:25"},{"body":{"nodeType":"YulBlock","src":"16802:362:25","statements":[{"nodeType":"YulAssignment","src":"16812:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16835:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16817:17:25"},"nodeType":"YulFunctionCall","src":"16817:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16812:1:25"}]},{"nodeType":"YulAssignment","src":"16846:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16869:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16851:17:25"},"nodeType":"YulFunctionCall","src":"16851:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16846:1:25"}]},{"nodeType":"YulVariableDeclaration","src":"16880:28:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16903:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"16906:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16899:3:25"},"nodeType":"YulFunctionCall","src":"16899:9:25"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"16884:11:25","type":""}]},{"nodeType":"YulAssignment","src":"16917:41:25","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"16946:11:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16928:17:25"},"nodeType":"YulFunctionCall","src":"16928:30:25"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"16917:7:25"}]},{"body":{"nodeType":"YulBlock","src":"17135:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17137:16:25"},"nodeType":"YulFunctionCall","src":"17137:18:25"},"nodeType":"YulExpressionStatement","src":"17137:18:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17068:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17061:6:25"},"nodeType":"YulFunctionCall","src":"17061:9:25"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17091:1:25"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"17098:7:25"},{"name":"x","nodeType":"YulIdentifier","src":"17107:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17094:3:25"},"nodeType":"YulFunctionCall","src":"17094:15:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17088:2:25"},"nodeType":"YulFunctionCall","src":"17088:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"17041:2:25"},"nodeType":"YulFunctionCall","src":"17041:83:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17021:6:25"},"nodeType":"YulFunctionCall","src":"17021:113:25"},"nodeType":"YulIf","src":"17018:139:25"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16785:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"16788:1:25","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"16794:7:25","type":""}],"src":"16754:410:25"},{"body":{"nodeType":"YulBlock","src":"17214:147:25","statements":[{"nodeType":"YulAssignment","src":"17224:25:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17247:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17229:17:25"},"nodeType":"YulFunctionCall","src":"17229:20:25"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17224:1:25"}]},{"nodeType":"YulAssignment","src":"17258:25:25","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17281:1:25"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17263:17:25"},"nodeType":"YulFunctionCall","src":"17263:20:25"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17258:1:25"}]},{"nodeType":"YulAssignment","src":"17292:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17303:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"17306:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17299:3:25"},"nodeType":"YulFunctionCall","src":"17299:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17292:3:25"}]},{"body":{"nodeType":"YulBlock","src":"17332:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17334:16:25"},"nodeType":"YulFunctionCall","src":"17334:18:25"},"nodeType":"YulExpressionStatement","src":"17334:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17324:1:25"},{"name":"sum","nodeType":"YulIdentifier","src":"17327:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17321:2:25"},"nodeType":"YulFunctionCall","src":"17321:10:25"},"nodeType":"YulIf","src":"17318:36:25"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17201:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"17204:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17210:3:25","type":""}],"src":"17170:191:25"},{"body":{"nodeType":"YulBlock","src":"17473:126:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17495:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"17503:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17491:3:25"},"nodeType":"YulFunctionCall","src":"17491:14:25"},{"hexValue":"496e7465726e546f6b656e3a206d696e7420616d6f756e742065786365656473","kind":"string","nodeType":"YulLiteral","src":"17507:34:25","type":"","value":"InternToken: mint amount exceeds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17484:6:25"},"nodeType":"YulFunctionCall","src":"17484:58:25"},"nodeType":"YulExpressionStatement","src":"17484:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17563:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"17571:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17559:3:25"},"nodeType":"YulFunctionCall","src":"17559:15:25"},{"hexValue":"20746f74616c20737570706c79","kind":"string","nodeType":"YulLiteral","src":"17576:15:25","type":"","value":" total supply"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17552:6:25"},"nodeType":"YulFunctionCall","src":"17552:40:25"},"nodeType":"YulExpressionStatement","src":"17552:40:25"}]},"name":"store_literal_in_memory_951436ba811880c47ffbef1a1b1afd78ea19e2b29a413b3679d711f3b25e1501","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17465:6:25","type":""}],"src":"17367:232:25"},{"body":{"nodeType":"YulBlock","src":"17751:220:25","statements":[{"nodeType":"YulAssignment","src":"17761:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17827:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"17832:2:25","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17768:58:25"},"nodeType":"YulFunctionCall","src":"17768:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17761:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17933:3:25"}],"functionName":{"name":"store_literal_in_memory_951436ba811880c47ffbef1a1b1afd78ea19e2b29a413b3679d711f3b25e1501","nodeType":"YulIdentifier","src":"17844:88:25"},"nodeType":"YulFunctionCall","src":"17844:93:25"},"nodeType":"YulExpressionStatement","src":"17844:93:25"},{"nodeType":"YulAssignment","src":"17946:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17957:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"17962:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17953:3:25"},"nodeType":"YulFunctionCall","src":"17953:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17946:3:25"}]}]},"name":"abi_encode_t_stringliteral_951436ba811880c47ffbef1a1b1afd78ea19e2b29a413b3679d711f3b25e1501_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17739:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17747:3:25","type":""}],"src":"17605:366:25"},{"body":{"nodeType":"YulBlock","src":"18148:248:25","statements":[{"nodeType":"YulAssignment","src":"18158:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18170:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"18181:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18166:3:25"},"nodeType":"YulFunctionCall","src":"18166:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18158:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18205:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"18216:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18201:3:25"},"nodeType":"YulFunctionCall","src":"18201:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18224:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"18230:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18220:3:25"},"nodeType":"YulFunctionCall","src":"18220:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18194:6:25"},"nodeType":"YulFunctionCall","src":"18194:47:25"},"nodeType":"YulExpressionStatement","src":"18194:47:25"},{"nodeType":"YulAssignment","src":"18250:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18384:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_951436ba811880c47ffbef1a1b1afd78ea19e2b29a413b3679d711f3b25e1501_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18258:124:25"},"nodeType":"YulFunctionCall","src":"18258:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18250:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_951436ba811880c47ffbef1a1b1afd78ea19e2b29a413b3679d711f3b25e1501__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18128:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18143:4:25","type":""}],"src":"17977:419:25"},{"body":{"nodeType":"YulBlock","src":"18430:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18447:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18450:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18440:6:25"},"nodeType":"YulFunctionCall","src":"18440:88:25"},"nodeType":"YulExpressionStatement","src":"18440:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18544:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18547:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18537:6:25"},"nodeType":"YulFunctionCall","src":"18537:15:25"},"nodeType":"YulExpressionStatement","src":"18537:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18568:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18571:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18561:6:25"},"nodeType":"YulFunctionCall","src":"18561:15:25"},"nodeType":"YulExpressionStatement","src":"18561:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"18402:180:25"},{"body":{"nodeType":"YulBlock","src":"18694:129:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18716:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"18724:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18712:3:25"},"nodeType":"YulFunctionCall","src":"18712:14:25"},{"hexValue":"496e7465726e546f6b656e3a2074726561737572792077616c6c657420697320","kind":"string","nodeType":"YulLiteral","src":"18728:34:25","type":"","value":"InternToken: treasury wallet is "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18705:6:25"},"nodeType":"YulFunctionCall","src":"18705:58:25"},"nodeType":"YulExpressionStatement","src":"18705:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18784:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"18792:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18780:3:25"},"nodeType":"YulFunctionCall","src":"18780:15:25"},{"hexValue":"746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"18797:18:25","type":"","value":"the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18773:6:25"},"nodeType":"YulFunctionCall","src":"18773:43:25"},"nodeType":"YulExpressionStatement","src":"18773:43:25"}]},"name":"store_literal_in_memory_9db009b096b479d8f6933c5ffa2093b96a52991fb1e4cc0214d2ac9b27ecc8c7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18686:6:25","type":""}],"src":"18588:235:25"},{"body":{"nodeType":"YulBlock","src":"18975:220:25","statements":[{"nodeType":"YulAssignment","src":"18985:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19051:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19056:2:25","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18992:58:25"},"nodeType":"YulFunctionCall","src":"18992:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18985:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19157:3:25"}],"functionName":{"name":"store_literal_in_memory_9db009b096b479d8f6933c5ffa2093b96a52991fb1e4cc0214d2ac9b27ecc8c7","nodeType":"YulIdentifier","src":"19068:88:25"},"nodeType":"YulFunctionCall","src":"19068:93:25"},"nodeType":"YulExpressionStatement","src":"19068:93:25"},{"nodeType":"YulAssignment","src":"19170:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19181:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"19186:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19177:3:25"},"nodeType":"YulFunctionCall","src":"19177:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19170:3:25"}]}]},"name":"abi_encode_t_stringliteral_9db009b096b479d8f6933c5ffa2093b96a52991fb1e4cc0214d2ac9b27ecc8c7_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18963:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18971:3:25","type":""}],"src":"18829:366:25"},{"body":{"nodeType":"YulBlock","src":"19372:248:25","statements":[{"nodeType":"YulAssignment","src":"19382:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19394:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19405:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19390:3:25"},"nodeType":"YulFunctionCall","src":"19390:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19382:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19429:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"19440:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19425:3:25"},"nodeType":"YulFunctionCall","src":"19425:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19448:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"19454:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19444:3:25"},"nodeType":"YulFunctionCall","src":"19444:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19418:6:25"},"nodeType":"YulFunctionCall","src":"19418:47:25"},"nodeType":"YulExpressionStatement","src":"19418:47:25"},{"nodeType":"YulAssignment","src":"19474:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19608:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_9db009b096b479d8f6933c5ffa2093b96a52991fb1e4cc0214d2ac9b27ecc8c7_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19482:124:25"},"nodeType":"YulFunctionCall","src":"19482:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19474:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_9db009b096b479d8f6933c5ffa2093b96a52991fb1e4cc0214d2ac9b27ecc8c7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19352:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19367:4:25","type":""}],"src":"19201:419:25"},{"body":{"nodeType":"YulBlock","src":"19732:139:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19754:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"19762:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19750:3:25"},"nodeType":"YulFunctionCall","src":"19750:14:25"},{"hexValue":"496e7465726e546f6b656e3a2074726561737572792077616c6c65742063616e","kind":"string","nodeType":"YulLiteral","src":"19766:34:25","type":"","value":"InternToken: treasury wallet can"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19743:6:25"},"nodeType":"YulFunctionCall","src":"19743:58:25"},"nodeType":"YulExpressionStatement","src":"19743:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19822:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"19830:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19818:3:25"},"nodeType":"YulFunctionCall","src":"19818:15:25"},{"hexValue":"6e6f742062652074686520636f6e747261637420697473656c66","kind":"string","nodeType":"YulLiteral","src":"19835:28:25","type":"","value":"not be the contract itself"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19811:6:25"},"nodeType":"YulFunctionCall","src":"19811:53:25"},"nodeType":"YulExpressionStatement","src":"19811:53:25"}]},"name":"store_literal_in_memory_13a5323e5436fac0297bca735d666ae7c3ae2ce43d6cbffe5ac355835e8a9fb6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19724:6:25","type":""}],"src":"19626:245:25"},{"body":{"nodeType":"YulBlock","src":"20023:220:25","statements":[{"nodeType":"YulAssignment","src":"20033:74:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20099:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"20104:2:25","type":"","value":"58"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20040:58:25"},"nodeType":"YulFunctionCall","src":"20040:67:25"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20033:3:25"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20205:3:25"}],"functionName":{"name":"store_literal_in_memory_13a5323e5436fac0297bca735d666ae7c3ae2ce43d6cbffe5ac355835e8a9fb6","nodeType":"YulIdentifier","src":"20116:88:25"},"nodeType":"YulFunctionCall","src":"20116:93:25"},"nodeType":"YulExpressionStatement","src":"20116:93:25"},{"nodeType":"YulAssignment","src":"20218:19:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20229:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"20234:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20225:3:25"},"nodeType":"YulFunctionCall","src":"20225:12:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20218:3:25"}]}]},"name":"abi_encode_t_stringliteral_13a5323e5436fac0297bca735d666ae7c3ae2ce43d6cbffe5ac355835e8a9fb6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20011:3:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20019:3:25","type":""}],"src":"19877:366:25"},{"body":{"nodeType":"YulBlock","src":"20420:248:25","statements":[{"nodeType":"YulAssignment","src":"20430:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20442:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20453:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20438:3:25"},"nodeType":"YulFunctionCall","src":"20438:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20430:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20477:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20488:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20473:3:25"},"nodeType":"YulFunctionCall","src":"20473:17:25"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20496:4:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"20502:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20492:3:25"},"nodeType":"YulFunctionCall","src":"20492:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20466:6:25"},"nodeType":"YulFunctionCall","src":"20466:47:25"},"nodeType":"YulExpressionStatement","src":"20466:47:25"},{"nodeType":"YulAssignment","src":"20522:139:25","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20656:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_13a5323e5436fac0297bca735d666ae7c3ae2ce43d6cbffe5ac355835e8a9fb6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20530:124:25"},"nodeType":"YulFunctionCall","src":"20530:131:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20522:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_13a5323e5436fac0297bca735d666ae7c3ae2ce43d6cbffe5ac355835e8a9fb6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20400:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20415:4:25","type":""}],"src":"20249:419:25"},{"body":{"nodeType":"YulBlock","src":"20912:537:25","statements":[{"nodeType":"YulAssignment","src":"20922:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20934:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"20945:3:25","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20930:3:25"},"nodeType":"YulFunctionCall","src":"20930:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20922:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21003:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21016:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21027:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21012:3:25"},"nodeType":"YulFunctionCall","src":"21012:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"20959:43:25"},"nodeType":"YulFunctionCall","src":"20959:71:25"},"nodeType":"YulExpressionStatement","src":"20959:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21084:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21097:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21108:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21093:3:25"},"nodeType":"YulFunctionCall","src":"21093:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21040:43:25"},"nodeType":"YulFunctionCall","src":"21040:72:25"},"nodeType":"YulExpressionStatement","src":"21040:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21166:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21179:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21190:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21175:3:25"},"nodeType":"YulFunctionCall","src":"21175:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21122:43:25"},"nodeType":"YulFunctionCall","src":"21122:72:25"},"nodeType":"YulExpressionStatement","src":"21122:72:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21248:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21261:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21272:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21257:3:25"},"nodeType":"YulFunctionCall","src":"21257:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21204:43:25"},"nodeType":"YulFunctionCall","src":"21204:72:25"},"nodeType":"YulExpressionStatement","src":"21204:72:25"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"21330:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21343:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21354:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21339:3:25"},"nodeType":"YulFunctionCall","src":"21339:19:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21286:43:25"},"nodeType":"YulFunctionCall","src":"21286:73:25"},"nodeType":"YulExpressionStatement","src":"21286:73:25"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"21413:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21426:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21437:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21422:3:25"},"nodeType":"YulFunctionCall","src":"21422:19:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21369:43:25"},"nodeType":"YulFunctionCall","src":"21369:73:25"},"nodeType":"YulExpressionStatement","src":"21369:73:25"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20844:9:25","type":""},{"name":"value5","nodeType":"YulTypedName","src":"20856:6:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20864:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20872:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20880:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20888:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20896:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20907:4:25","type":""}],"src":"20674:775:25"},{"body":{"nodeType":"YulBlock","src":"21581:206:25","statements":[{"nodeType":"YulAssignment","src":"21591:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21603:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21614:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21599:3:25"},"nodeType":"YulFunctionCall","src":"21599:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21591:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21671:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21684:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21695:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21680:3:25"},"nodeType":"YulFunctionCall","src":"21680:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21627:43:25"},"nodeType":"YulFunctionCall","src":"21627:71:25"},"nodeType":"YulExpressionStatement","src":"21627:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21752:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21765:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21776:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21761:3:25"},"nodeType":"YulFunctionCall","src":"21761:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21708:43:25"},"nodeType":"YulFunctionCall","src":"21708:72:25"},"nodeType":"YulExpressionStatement","src":"21708:72:25"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21545:9:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21557:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21565:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21576:4:25","type":""}],"src":"21455:332:25"},{"body":{"nodeType":"YulBlock","src":"21947:288:25","statements":[{"nodeType":"YulAssignment","src":"21957:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21969:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"21980:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21965:3:25"},"nodeType":"YulFunctionCall","src":"21965:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21957:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22037:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22050:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22061:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22046:3:25"},"nodeType":"YulFunctionCall","src":"22046:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21993:43:25"},"nodeType":"YulFunctionCall","src":"21993:71:25"},"nodeType":"YulExpressionStatement","src":"21993:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22118:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22131:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22142:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22127:3:25"},"nodeType":"YulFunctionCall","src":"22127:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22074:43:25"},"nodeType":"YulFunctionCall","src":"22074:72:25"},"nodeType":"YulExpressionStatement","src":"22074:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22200:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22213:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22224:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22209:3:25"},"nodeType":"YulFunctionCall","src":"22209:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22156:43:25"},"nodeType":"YulFunctionCall","src":"22156:72:25"},"nodeType":"YulExpressionStatement","src":"22156:72:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21903:9:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21915:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21923:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21931:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21942:4:25","type":""}],"src":"21793:442:25"},{"body":{"nodeType":"YulBlock","src":"22451:454:25","statements":[{"nodeType":"YulAssignment","src":"22461:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22473:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22484:3:25","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22469:3:25"},"nodeType":"YulFunctionCall","src":"22469:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22461:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22542:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22555:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22566:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22551:3:25"},"nodeType":"YulFunctionCall","src":"22551:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"22498:43:25"},"nodeType":"YulFunctionCall","src":"22498:71:25"},"nodeType":"YulExpressionStatement","src":"22498:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22623:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22636:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22647:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22632:3:25"},"nodeType":"YulFunctionCall","src":"22632:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"22579:43:25"},"nodeType":"YulFunctionCall","src":"22579:72:25"},"nodeType":"YulExpressionStatement","src":"22579:72:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22705:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22718:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22729:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22714:3:25"},"nodeType":"YulFunctionCall","src":"22714:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"22661:43:25"},"nodeType":"YulFunctionCall","src":"22661:72:25"},"nodeType":"YulExpressionStatement","src":"22661:72:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22787:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22800:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22811:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22796:3:25"},"nodeType":"YulFunctionCall","src":"22796:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22743:43:25"},"nodeType":"YulFunctionCall","src":"22743:72:25"},"nodeType":"YulExpressionStatement","src":"22743:72:25"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"22869:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22882:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"22893:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22878:3:25"},"nodeType":"YulFunctionCall","src":"22878:19:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22825:43:25"},"nodeType":"YulFunctionCall","src":"22825:73:25"},"nodeType":"YulExpressionStatement","src":"22825:73:25"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22391:9:25","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22403:6:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22411:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22419:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22427:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22435:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22446:4:25","type":""}],"src":"22241:664:25"},{"body":{"nodeType":"YulBlock","src":"23089:367:25","statements":[{"nodeType":"YulAssignment","src":"23099:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23111:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"23122:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23107:3:25"},"nodeType":"YulFunctionCall","src":"23107:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23099:4:25"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23180:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23193:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"23204:1:25","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23189:3:25"},"nodeType":"YulFunctionCall","src":"23189:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23136:43:25"},"nodeType":"YulFunctionCall","src":"23136:71:25"},"nodeType":"YulExpressionStatement","src":"23136:71:25"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23257:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23270:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"23281:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23266:3:25"},"nodeType":"YulFunctionCall","src":"23266:18:25"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"23217:39:25"},"nodeType":"YulFunctionCall","src":"23217:68:25"},"nodeType":"YulExpressionStatement","src":"23217:68:25"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23339:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23352:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"23363:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23348:3:25"},"nodeType":"YulFunctionCall","src":"23348:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23295:43:25"},"nodeType":"YulFunctionCall","src":"23295:72:25"},"nodeType":"YulExpressionStatement","src":"23295:72:25"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23421:6:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23434:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"23445:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23430:3:25"},"nodeType":"YulFunctionCall","src":"23430:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23377:43:25"},"nodeType":"YulFunctionCall","src":"23377:72:25"},"nodeType":"YulExpressionStatement","src":"23377:72:25"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23037:9:25","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23049:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23057:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23065:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23073:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23084:4:25","type":""}],"src":"22911:545:25"},{"body":{"nodeType":"YulBlock","src":"23490:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23507:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23510:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23500:6:25"},"nodeType":"YulFunctionCall","src":"23500:88:25"},"nodeType":"YulExpressionStatement","src":"23500:88:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23604:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23607:4:25","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23597:6:25"},"nodeType":"YulFunctionCall","src":"23597:15:25"},"nodeType":"YulExpressionStatement","src":"23597:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23628:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23631:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23621:6:25"},"nodeType":"YulFunctionCall","src":"23621:15:25"},"nodeType":"YulExpressionStatement","src":"23621:15:25"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"23462:180:25"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_568fe67c8e8527f93d3e65af3d04697a8f476a266300b67a63d5e056e85c9519(memPtr) {\n\n        mstore(add(memPtr, 0), \"InternToken: mint to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_568fe67c8e8527f93d3e65af3d04697a8f476a266300b67a63d5e056e85c9519_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_568fe67c8e8527f93d3e65af3d04697a8f476a266300b67a63d5e056e85c9519(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_568fe67c8e8527f93d3e65af3d04697a8f476a266300b67a63d5e056e85c9519__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_568fe67c8e8527f93d3e65af3d04697a8f476a266300b67a63d5e056e85c9519_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ffbe722a9fd305986af135dde73be174202ccef47cd78653f16e32455e178c84(memPtr) {\n\n        mstore(add(memPtr, 0), \"InternToken: mint amount must be\")\n\n        mstore(add(memPtr, 32), \" greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_ffbe722a9fd305986af135dde73be174202ccef47cd78653f16e32455e178c84_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_ffbe722a9fd305986af135dde73be174202ccef47cd78653f16e32455e178c84(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ffbe722a9fd305986af135dde73be174202ccef47cd78653f16e32455e178c84__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ffbe722a9fd305986af135dde73be174202ccef47cd78653f16e32455e178c84_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_951436ba811880c47ffbef1a1b1afd78ea19e2b29a413b3679d711f3b25e1501(memPtr) {\n\n        mstore(add(memPtr, 0), \"InternToken: mint amount exceeds\")\n\n        mstore(add(memPtr, 32), \" total supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_951436ba811880c47ffbef1a1b1afd78ea19e2b29a413b3679d711f3b25e1501_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_951436ba811880c47ffbef1a1b1afd78ea19e2b29a413b3679d711f3b25e1501(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_951436ba811880c47ffbef1a1b1afd78ea19e2b29a413b3679d711f3b25e1501__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_951436ba811880c47ffbef1a1b1afd78ea19e2b29a413b3679d711f3b25e1501_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_9db009b096b479d8f6933c5ffa2093b96a52991fb1e4cc0214d2ac9b27ecc8c7(memPtr) {\n\n        mstore(add(memPtr, 0), \"InternToken: treasury wallet is \")\n\n        mstore(add(memPtr, 32), \"the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9db009b096b479d8f6933c5ffa2093b96a52991fb1e4cc0214d2ac9b27ecc8c7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_9db009b096b479d8f6933c5ffa2093b96a52991fb1e4cc0214d2ac9b27ecc8c7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9db009b096b479d8f6933c5ffa2093b96a52991fb1e4cc0214d2ac9b27ecc8c7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9db009b096b479d8f6933c5ffa2093b96a52991fb1e4cc0214d2ac9b27ecc8c7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_13a5323e5436fac0297bca735d666ae7c3ae2ce43d6cbffe5ac355835e8a9fb6(memPtr) {\n\n        mstore(add(memPtr, 0), \"InternToken: treasury wallet can\")\n\n        mstore(add(memPtr, 32), \"not be the contract itself\")\n\n    }\n\n    function abi_encode_t_stringliteral_13a5323e5436fac0297bca735d666ae7c3ae2ce43d6cbffe5ac355835e8a9fb6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 58)\n        store_literal_in_memory_13a5323e5436fac0297bca735d666ae7c3ae2ce43d6cbffe5ac355835e8a9fb6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_13a5323e5436fac0297bca735d666ae7c3ae2ce43d6cbffe5ac355835e8a9fb6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_13a5323e5436fac0297bca735d666ae7c3ae2ce43d6cbffe5ac355835e8a9fb6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3375":[{"length":32,"start":3949}],"3377":[{"length":32,"start":3908}],"3379":[{"length":32,"start":3822}],"3381":[{"length":32,"start":5668}],"3383":[{"length":32,"start":5701}],"3386":[{"length":32,"start":4874}],"3389":[{"length":32,"start":4933}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101735760003560e01c806370a08231116100de5780638da5cb5b11610097578063a9059cbb11610071578063a9059cbb146103f8578063d505accf14610428578063dd62ed3e14610444578063f2fde38b1461047457610173565b80638da5cb5b146103a057806395d89b41146103be578063a8602fea146103dc57610173565b806370a08231146102ec578063715018a61461031c57806379cc6790146103265780637ecebe00146103425780638456cb591461037257806384b0196e1461037c57610173565b80633644e515116101305780633644e515146102505780633f4ba83a1461026e57806340c10f191461027857806342966c68146102945780634626402b146102b05780635c975abb146102ce57610173565b806306fdde0314610178578063095ea7b31461019657806318160ddd146101c657806323b872dd146101e4578063313ce5671461021457806332cb6b0c14610232575b600080fd5b610180610490565b60405161018d9190611df0565b60405180910390f35b6101b060048036038101906101ab9190611eab565b610522565b6040516101bd9190611f06565b60405180910390f35b6101ce610545565b6040516101db9190611f30565b60405180910390f35b6101fe60048036038101906101f99190611f4b565b61054f565b60405161020b9190611f06565b60405180910390f35b61021c61057e565b6040516102299190611fba565b60405180910390f35b61023a610587565b6040516102479190611f30565b60405180910390f35b610258610595565b6040516102659190611fee565b60405180910390f35b6102766105a4565b005b610292600480360381019061028d9190611eab565b6105b6565b005b6102ae60048036038101906102a99190612009565b61074f565b005b6102b8610763565b6040516102c59190612045565b60405180910390f35b6102d6610789565b6040516102e39190611f06565b60405180910390f35b61030660048036038101906103019190612060565b6107a0565b6040516103139190611f30565b60405180910390f35b6103246107e8565b005b610340600480360381019061033b9190611eab565b6107fc565b005b61035c60048036038101906103579190612060565b61081c565b6040516103699190611f30565b60405180910390f35b61037a61082e565b005b610384610840565b6040516103979796959493929190612186565b60405180910390f35b6103a86108ea565b6040516103b59190612045565b60405180910390f35b6103c6610914565b6040516103d39190611df0565b60405180910390f35b6103f660048036038101906103f19190612060565b6109a6565b005b610412600480360381019061040d9190611eab565b610acf565b60405161041f9190611f06565b60405180910390f35b610442600480360381019061043d9190612262565b610af2565b005b61045e60048036038101906104599190612304565b610c3a565b60405161046b9190611f30565b60405180910390f35b61048e60048036038101906104899190612060565b610cc1565b005b60606003805461049f90612373565b80601f01602080910402602001604051908101604052809291908181526020018280546104cb90612373565b80156105185780601f106104ed57610100808354040283529160200191610518565b820191906000526020600020905b8154815290600101906020018083116104fb57829003601f168201915b5050505050905090565b60008061052d610d47565b905061053a818585610d4f565b600191505092915050565b6000600254905090565b60008061055a610d47565b9050610567858285610d61565b610572858585610df6565b60019150509392505050565b60006012905090565b69d3c21bcecceda100000081565b600061059f610eea565b905090565b6105ac610fa1565b6105b4611028565b565b6105be610fa1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361062d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062490612416565b60405180910390fd5b60008111610670576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610667906124a8565b60405180910390fd5b600061067a61057e565b600a610686919061262a565b826106919190612675565b905069d3c21bcecceda1000000816106a7610545565b6106b191906126b7565b11156106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e99061275d565b60405180910390fd5b6106fc838261108b565b8273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040516107429190611f30565b60405180910390a2505050565b61076061075a610d47565b8261110d565b50565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560009054906101000a900460ff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107f0610fa1565b6107fa600061118f565b565b61080e82610808610d47565b83610d61565b610818828261110d565b5050565b600061082782611255565b9050919050565b610836610fa1565b61083e61129e565b565b600060608060008060006060610854611301565b61085c61133c565b46306000801b600067ffffffffffffffff81111561087d5761087c61277d565b5b6040519080825280602002602001820160405280156108ab5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461092390612373565b80601f016020809104026020016040519081016040528092919081815260200182805461094f90612373565b801561099c5780601f106109715761010080835404028352916020019161099c565b820191906000526020600020905b81548152906001019060200180831161097f57829003601f168201915b5050505050905090565b6109ae610fa1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a149061281e565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a82906128b0565b60405180910390fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080610ada610d47565b9050610ae7818585610df6565b600191505092915050565b83421115610b3757836040517f62791302000000000000000000000000000000000000000000000000000000008152600401610b2e9190611f30565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b668c611377565b89604051602001610b7c969594939291906128d0565b6040516020818303038152906040528051906020012090506000610b9f826113ce565b90506000610baf828787876113e8565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c2357808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610c1a929190612931565b60405180910390fd5b610c2e8a8a8a610d4f565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610cc9610fa1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d3b5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d329190612045565b60405180910390fd5b610d448161118f565b50565b600033905090565b610d5c8383836001611418565b505050565b6000610d6d8484610c3a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610df05781811015610de0578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610dd79392919061295a565b60405180910390fd5b610def84848484036000611418565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e685760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e5f9190612045565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610eda5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ed19190612045565b60405180910390fd5b610ee58383836115ef565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610f6657507f000000000000000000000000000000000000000000000000000000000000000046145b15610f93577f00000000000000000000000000000000000000000000000000000000000000009050610f9e565b610f9b6115ff565b90505b90565b610fa9610d47565b73ffffffffffffffffffffffffffffffffffffffff16610fc76108ea565b73ffffffffffffffffffffffffffffffffffffffff161461102657610fea610d47565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161101d9190612045565b60405180910390fd5b565b611030611695565b6000600560006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611074610d47565b6040516110819190612045565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110fd5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110f49190612045565b60405180910390fd5b611109600083836115ef565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361117f5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111769190612045565b60405180910390fd5b61118b826000836115ef565b5050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6112a66116d5565b6001600560006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112ea610d47565b6040516112f79190612045565b60405180910390a1565b606061133760067f000000000000000000000000000000000000000000000000000000000000000061171690919063ffffffff16565b905090565b606061137260077f000000000000000000000000000000000000000000000000000000000000000061171690919063ffffffff16565b905090565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b60006113e16113db610eea565b836117c6565b9050919050565b6000806000806113fa88888888611807565b92509250925061140a82826118fb565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361148a5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016114819190612045565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114fc5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114f39190612045565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156115e9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115e09190611f30565b60405180910390a35b50505050565b6115fa838383611a5f565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000463060405160200161167a959493929190612991565b60405160208183030381529060405280519060200120905090565b61169d610789565b6116d3576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6116dd610789565b15611714576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b606060ff60001b83146117335761172c83611a77565b90506117c0565b81805461173f90612373565b80601f016020809104026020016040519081016040528092919081815260200182805461176b90612373565b80156117b85780601f1061178d576101008083540402835291602001916117b8565b820191906000526020600020905b81548152906001019060200180831161179b57829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156118475760006003859250925092506118f1565b60006001888888886040516000815260200160405260405161186c94939291906129e4565b6020604051602081039080840390855afa15801561188e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036118e257600060016000801b935093509350506118f1565b8060008060001b935093509350505b9450945094915050565b6000600381111561190f5761190e612a29565b5b82600381111561192257611921612a29565b5b0315611a5b576001600381111561193c5761193b612a29565b5b82600381111561194f5761194e612a29565b5b03611986576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561199a57611999612a29565b5b8260038111156119ad576119ac612a29565b5b036119f2578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016119e99190611f30565b60405180910390fd5b600380811115611a0557611a04612a29565b5b826003811115611a1857611a17612a29565b5b03611a5a57806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611a519190611fee565b60405180910390fd5b5b5050565b611a676116d5565b611a72838383611aeb565b505050565b60606000611a8483611d10565b90506000602067ffffffffffffffff811115611aa357611aa261277d565b5b6040519080825280601f01601f191660200182016040528015611ad55781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b3d578060026000828254611b3191906126b7565b92505081905550611c10565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611bc9578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611bc09392919061295a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c595780600260008282540392505081905550611ca6565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611d039190611f30565b60405180910390a3505050565b60008060ff8360001c169050601f811115611d57576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d9a578082015181840152602081019050611d7f565b60008484015250505050565b6000601f19601f8301169050919050565b6000611dc282611d60565b611dcc8185611d6b565b9350611ddc818560208601611d7c565b611de581611da6565b840191505092915050565b60006020820190508181036000830152611e0a8184611db7565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e4282611e17565b9050919050565b611e5281611e37565b8114611e5d57600080fd5b50565b600081359050611e6f81611e49565b92915050565b6000819050919050565b611e8881611e75565b8114611e9357600080fd5b50565b600081359050611ea581611e7f565b92915050565b60008060408385031215611ec257611ec1611e12565b5b6000611ed085828601611e60565b9250506020611ee185828601611e96565b9150509250929050565b60008115159050919050565b611f0081611eeb565b82525050565b6000602082019050611f1b6000830184611ef7565b92915050565b611f2a81611e75565b82525050565b6000602082019050611f456000830184611f21565b92915050565b600080600060608486031215611f6457611f63611e12565b5b6000611f7286828701611e60565b9350506020611f8386828701611e60565b9250506040611f9486828701611e96565b9150509250925092565b600060ff82169050919050565b611fb481611f9e565b82525050565b6000602082019050611fcf6000830184611fab565b92915050565b6000819050919050565b611fe881611fd5565b82525050565b60006020820190506120036000830184611fdf565b92915050565b60006020828403121561201f5761201e611e12565b5b600061202d84828501611e96565b91505092915050565b61203f81611e37565b82525050565b600060208201905061205a6000830184612036565b92915050565b60006020828403121561207657612075611e12565b5b600061208484828501611e60565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6120c28161208d565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6120fd81611e75565b82525050565b600061210f83836120f4565b60208301905092915050565b6000602082019050919050565b6000612133826120c8565b61213d81856120d3565b9350612148836120e4565b8060005b838110156121795781516121608882612103565b975061216b8361211b565b92505060018101905061214c565b5085935050505092915050565b600060e08201905061219b600083018a6120b9565b81810360208301526121ad8189611db7565b905081810360408301526121c18188611db7565b90506121d06060830187611f21565b6121dd6080830186612036565b6121ea60a0830185611fdf565b81810360c08301526121fc8184612128565b905098975050505050505050565b61221381611f9e565b811461221e57600080fd5b50565b6000813590506122308161220a565b92915050565b61223f81611fd5565b811461224a57600080fd5b50565b60008135905061225c81612236565b92915050565b600080600080600080600060e0888a03121561228157612280611e12565b5b600061228f8a828b01611e60565b97505060206122a08a828b01611e60565b96505060406122b18a828b01611e96565b95505060606122c28a828b01611e96565b94505060806122d38a828b01612221565b93505060a06122e48a828b0161224d565b92505060c06122f58a828b0161224d565b91505092959891949750929550565b6000806040838503121561231b5761231a611e12565b5b600061232985828601611e60565b925050602061233a85828601611e60565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061238b57607f821691505b60208210810361239e5761239d612344565b5b50919050565b7f496e7465726e546f6b656e3a206d696e7420746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612400602583611d6b565b915061240b826123a4565b604082019050919050565b6000602082019050818103600083015261242f816123f3565b9050919050565b7f496e7465726e546f6b656e3a206d696e7420616d6f756e74206d75737420626560008201527f2067726561746572207468616e20300000000000000000000000000000000000602082015250565b6000612492602f83611d6b565b915061249d82612436565b604082019050919050565b600060208201905081810360008301526124c181612485565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111561254e5780860481111561252a576125296124c8565b5b60018516156125395780820291505b8081029050612547856124f7565b945061250e565b94509492505050565b6000826125675760019050612623565b816125755760009050612623565b816001811461258b5760028114612595576125c4565b6001915050612623565b60ff8411156125a7576125a66124c8565b5b8360020a9150848211156125be576125bd6124c8565b5b50612623565b5060208310610133831016604e8410600b84101617156125f95782820a9050838111156125f4576125f36124c8565b5b612623565b6126068484846001612504565b9250905081840481111561261d5761261c6124c8565b5b81810290505b9392505050565b600061263582611e75565b915061264083611f9e565b925061266d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612557565b905092915050565b600061268082611e75565b915061268b83611e75565b925082820261269981611e75565b915082820484148315176126b0576126af6124c8565b5b5092915050565b60006126c282611e75565b91506126cd83611e75565b92508282019050808211156126e5576126e46124c8565b5b92915050565b7f496e7465726e546f6b656e3a206d696e7420616d6f756e74206578636565647360008201527f20746f74616c20737570706c7900000000000000000000000000000000000000602082015250565b6000612747602d83611d6b565b9150612752826126eb565b604082019050919050565b600060208201905081810360008301526127768161273a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f496e7465726e546f6b656e3a2074726561737572792077616c6c65742069732060008201527f746865207a65726f206164647265737300000000000000000000000000000000602082015250565b6000612808603083611d6b565b9150612813826127ac565b604082019050919050565b60006020820190508181036000830152612837816127fb565b9050919050565b7f496e7465726e546f6b656e3a2074726561737572792077616c6c65742063616e60008201527f6e6f742062652074686520636f6e747261637420697473656c66000000000000602082015250565b600061289a603a83611d6b565b91506128a58261283e565b604082019050919050565b600060208201905081810360008301526128c98161288d565b9050919050565b600060c0820190506128e56000830189611fdf565b6128f26020830188612036565b6128ff6040830187612036565b61290c6060830186611f21565b6129196080830185611f21565b61292660a0830184611f21565b979650505050505050565b60006040820190506129466000830185612036565b6129536020830184612036565b9392505050565b600060608201905061296f6000830186612036565b61297c6020830185611f21565b6129896040830184611f21565b949350505050565b600060a0820190506129a66000830188611fdf565b6129b36020830187611fdf565b6129c06040830186611fdf565b6129cd6060830185611f21565b6129da6080830184612036565b9695505050505050565b60006080820190506129f96000830187611fdf565b612a066020830186611fab565b612a136040830185611fdf565b612a206060830184611fdf565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220ebb6bfd07fd6f688ed14b6a3fbf6cd8ea66e62f76674fb4bcf89adc105aac07d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x474 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xA8602FEA EQ PUSH2 0x3DC JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x37C JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2CE JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x232 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1EAB JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0x545 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1FBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0x587 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH2 0x5A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x1EAB JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x2009 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D6 PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH2 0x7E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1EAB JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH2 0x82E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x384 PUSH2 0x840 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A8 PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C6 PUSH2 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x1DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1EAB JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x442 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x2262 JUMP JUMPDEST PUSH2 0xAF2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x2304 JUMP JUMPDEST PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0xCC1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x49F SWAP1 PUSH2 0x2373 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4CB SWAP1 PUSH2 0x2373 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x518 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x518 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x52D PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP PUSH2 0x53A DUP2 DUP6 DUP6 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x55A PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP PUSH2 0x567 DUP6 DUP3 DUP6 PUSH2 0xD61 JUMP JUMPDEST PUSH2 0x572 DUP6 DUP6 DUP6 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59F PUSH2 0xEEA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5AC PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x5B4 PUSH2 0x1028 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5BE PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x62D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x624 SWAP1 PUSH2 0x2416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x667 SWAP1 PUSH2 0x24A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x67A PUSH2 0x57E JUMP JUMPDEST PUSH1 0xA PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x262A JUMP JUMPDEST DUP3 PUSH2 0x691 SWAP2 SWAP1 PUSH2 0x2675 JUMP JUMPDEST SWAP1 POP PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH2 0x6A7 PUSH2 0x545 JUMP JUMPDEST PUSH2 0x6B1 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST GT ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E9 SWAP1 PUSH2 0x275D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6FC DUP4 DUP3 PUSH2 0x108B JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP3 PUSH1 0x40 MLOAD PUSH2 0x742 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x760 PUSH2 0x75A PUSH2 0xD47 JUMP JUMPDEST DUP3 PUSH2 0x110D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F0 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x7FA PUSH1 0x0 PUSH2 0x118F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x80E DUP3 PUSH2 0x808 PUSH2 0xD47 JUMP JUMPDEST DUP4 PUSH2 0xD61 JUMP JUMPDEST PUSH2 0x818 DUP3 DUP3 PUSH2 0x110D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x827 DUP3 PUSH2 0x1255 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x836 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x83E PUSH2 0x129E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x854 PUSH2 0x1301 JUMP JUMPDEST PUSH2 0x85C PUSH2 0x133C JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x87D JUMPI PUSH2 0x87C PUSH2 0x277D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8AB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x923 SWAP1 PUSH2 0x2373 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x94F SWAP1 PUSH2 0x2373 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x99C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x971 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x99C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x97F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9AE PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA14 SWAP1 PUSH2 0x281E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA82 SWAP1 PUSH2 0x28B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xADA PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE7 DUP2 DUP6 DUP6 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xB37 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2E SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xB66 DUP13 PUSH2 0x1377 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB7C SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xB9F DUP3 PUSH2 0x13CE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBAF DUP3 DUP8 DUP8 DUP8 PUSH2 0x13E8 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC23 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1A SWAP3 SWAP2 SWAP1 PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC2E DUP11 DUP11 DUP11 PUSH2 0xD4F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC9 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD3B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD32 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD44 DUP2 PUSH2 0x118F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD5C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1418 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6D DUP5 DUP5 PUSH2 0xC3A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xDF0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xDE0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x295A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEF DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1418 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE68 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5F SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED1 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEE5 DUP4 DUP4 DUP4 PUSH2 0x15EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xF66 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xF93 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xF9E JUMP JUMPDEST PUSH2 0xF9B PUSH2 0x15FF JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xFA9 PUSH2 0xD47 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFC7 PUSH2 0x8EA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1026 JUMPI PUSH2 0xFEA PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101D SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1030 PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1074 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1081 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10FD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F4 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1109 PUSH1 0x0 DUP4 DUP4 PUSH2 0x15EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1176 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x118B DUP3 PUSH1 0x0 DUP4 PUSH2 0x15EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A6 PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x12EA PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F7 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1337 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1716 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1372 PUSH1 0x7 PUSH32 0x0 PUSH2 0x1716 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E1 PUSH2 0x13DB PUSH2 0xEEA JUMP JUMPDEST DUP4 PUSH2 0x17C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x13FA DUP9 DUP9 DUP9 DUP9 PUSH2 0x1807 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x140A DUP3 DUP3 PUSH2 0x18FB JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x148A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1481 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14FC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F3 SWAP2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x15E9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x15E0 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x15FA DUP4 DUP4 DUP4 PUSH2 0x1A5F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x167A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2991 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x169D PUSH2 0x789 JUMP JUMPDEST PUSH2 0x16D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x16DD PUSH2 0x789 JUMP JUMPDEST ISZERO PUSH2 0x1714 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1733 JUMPI PUSH2 0x172C DUP4 PUSH2 0x1A77 JUMP JUMPDEST SWAP1 POP PUSH2 0x17C0 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x173F SWAP1 PUSH2 0x2373 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x176B SWAP1 PUSH2 0x2373 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x178D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x179B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1847 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x18F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x186C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x188E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18E2 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x18F1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x190F JUMPI PUSH2 0x190E PUSH2 0x2A29 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1922 JUMPI PUSH2 0x1921 PUSH2 0x2A29 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1A5B JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x193C JUMPI PUSH2 0x193B PUSH2 0x2A29 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x194F JUMPI PUSH2 0x194E PUSH2 0x2A29 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1986 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x199A JUMPI PUSH2 0x1999 PUSH2 0x2A29 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19AD JUMPI PUSH2 0x19AC PUSH2 0x2A29 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x19F2 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E9 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1A05 JUMPI PUSH2 0x1A04 PUSH2 0x2A29 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A18 JUMPI PUSH2 0x1A17 PUSH2 0x2A29 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1A5A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A51 SWAP2 SWAP1 PUSH2 0x1FEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1A67 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x1A72 DUP4 DUP4 DUP4 PUSH2 0x1AEB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1A84 DUP4 PUSH2 0x1D10 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AA3 JUMPI PUSH2 0x1AA2 PUSH2 0x277D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AD5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B3D JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B31 SWAP2 SWAP1 PUSH2 0x26B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1BC9 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x295A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C59 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1CA6 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D03 SWAP2 SWAP1 PUSH2 0x1F30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1D57 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D9A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D7F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC2 DUP3 PUSH2 0x1D60 JUMP JUMPDEST PUSH2 0x1DCC DUP2 DUP6 PUSH2 0x1D6B JUMP JUMPDEST SWAP4 POP PUSH2 0x1DDC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D7C JUMP JUMPDEST PUSH2 0x1DE5 DUP2 PUSH2 0x1DA6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E0A DUP2 DUP5 PUSH2 0x1DB7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E42 DUP3 PUSH2 0x1E17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E52 DUP2 PUSH2 0x1E37 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E6F DUP2 PUSH2 0x1E49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E88 DUP2 PUSH2 0x1E75 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EA5 DUP2 PUSH2 0x1E7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EC2 JUMPI PUSH2 0x1EC1 PUSH2 0x1E12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED0 DUP6 DUP3 DUP7 ADD PUSH2 0x1E60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EE1 DUP6 DUP3 DUP7 ADD PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F00 DUP2 PUSH2 0x1EEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F1B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F2A DUP2 PUSH2 0x1E75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F45 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F64 JUMPI PUSH2 0x1F63 PUSH2 0x1E12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F72 DUP7 DUP3 DUP8 ADD PUSH2 0x1E60 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F83 DUP7 DUP3 DUP8 ADD PUSH2 0x1E60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F94 DUP7 DUP3 DUP8 ADD PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FB4 DUP2 PUSH2 0x1F9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FCF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FE8 DUP2 PUSH2 0x1FD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2003 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x201F JUMPI PUSH2 0x201E PUSH2 0x1E12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x202D DUP5 DUP3 DUP6 ADD PUSH2 0x1E96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x203F DUP2 PUSH2 0x1E37 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x205A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2036 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2076 JUMPI PUSH2 0x2075 PUSH2 0x1E12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2084 DUP5 DUP3 DUP6 ADD PUSH2 0x1E60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C2 DUP2 PUSH2 0x208D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20FD DUP2 PUSH2 0x1E75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x210F DUP4 DUP4 PUSH2 0x20F4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2133 DUP3 PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x213D DUP2 DUP6 PUSH2 0x20D3 JUMP JUMPDEST SWAP4 POP PUSH2 0x2148 DUP4 PUSH2 0x20E4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2179 JUMPI DUP2 MLOAD PUSH2 0x2160 DUP9 DUP3 PUSH2 0x2103 JUMP JUMPDEST SWAP8 POP PUSH2 0x216B DUP4 PUSH2 0x211B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x214C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x219B PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x20B9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x21AD DUP2 DUP10 PUSH2 0x1DB7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x21C1 DUP2 DUP9 PUSH2 0x1DB7 JUMP JUMPDEST SWAP1 POP PUSH2 0x21D0 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x21DD PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x21EA PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1FDF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x21FC DUP2 DUP5 PUSH2 0x2128 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2213 DUP2 PUSH2 0x1F9E JUMP JUMPDEST DUP2 EQ PUSH2 0x221E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2230 DUP2 PUSH2 0x220A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x223F DUP2 PUSH2 0x1FD5 JUMP JUMPDEST DUP2 EQ PUSH2 0x224A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x225C DUP2 PUSH2 0x2236 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2281 JUMPI PUSH2 0x2280 PUSH2 0x1E12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x228F DUP11 DUP3 DUP12 ADD PUSH2 0x1E60 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x22A0 DUP11 DUP3 DUP12 ADD PUSH2 0x1E60 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x22B1 DUP11 DUP3 DUP12 ADD PUSH2 0x1E96 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x22C2 DUP11 DUP3 DUP12 ADD PUSH2 0x1E96 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x22D3 DUP11 DUP3 DUP12 ADD PUSH2 0x2221 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x22E4 DUP11 DUP3 DUP12 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x22F5 DUP11 DUP3 DUP12 ADD PUSH2 0x224D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x231B JUMPI PUSH2 0x231A PUSH2 0x1E12 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2329 DUP6 DUP3 DUP7 ADD PUSH2 0x1E60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x233A DUP6 DUP3 DUP7 ADD PUSH2 0x1E60 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x238B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x239E JUMPI PUSH2 0x239D PUSH2 0x2344 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E7465726E546F6B656E3A206D696E7420746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2400 PUSH1 0x25 DUP4 PUSH2 0x1D6B JUMP JUMPDEST SWAP2 POP PUSH2 0x240B DUP3 PUSH2 0x23A4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x242F DUP2 PUSH2 0x23F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E7465726E546F6B656E3A206D696E7420616D6F756E74206D757374206265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2067726561746572207468616E20300000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2492 PUSH1 0x2F DUP4 PUSH2 0x1D6B JUMP JUMPDEST SWAP2 POP PUSH2 0x249D DUP3 PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24C1 DUP2 PUSH2 0x2485 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x254E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x252A JUMPI PUSH2 0x2529 PUSH2 0x24C8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2539 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2547 DUP6 PUSH2 0x24F7 JUMP JUMPDEST SWAP5 POP PUSH2 0x250E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2567 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2623 JUMP JUMPDEST DUP2 PUSH2 0x2575 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2623 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x258B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2595 JUMPI PUSH2 0x25C4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2623 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x25A7 JUMPI PUSH2 0x25A6 PUSH2 0x24C8 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x25BE JUMPI PUSH2 0x25BD PUSH2 0x24C8 JUMP JUMPDEST JUMPDEST POP PUSH2 0x2623 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x25F9 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x25F4 JUMPI PUSH2 0x25F3 PUSH2 0x24C8 JUMP JUMPDEST JUMPDEST PUSH2 0x2623 JUMP JUMPDEST PUSH2 0x2606 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2504 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x261D JUMPI PUSH2 0x261C PUSH2 0x24C8 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2635 DUP3 PUSH2 0x1E75 JUMP JUMPDEST SWAP2 POP PUSH2 0x2640 DUP4 PUSH2 0x1F9E JUMP JUMPDEST SWAP3 POP PUSH2 0x266D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2557 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2680 DUP3 PUSH2 0x1E75 JUMP JUMPDEST SWAP2 POP PUSH2 0x268B DUP4 PUSH2 0x1E75 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2699 DUP2 PUSH2 0x1E75 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x26B0 JUMPI PUSH2 0x26AF PUSH2 0x24C8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C2 DUP3 PUSH2 0x1E75 JUMP JUMPDEST SWAP2 POP PUSH2 0x26CD DUP4 PUSH2 0x1E75 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26E5 JUMPI PUSH2 0x26E4 PUSH2 0x24C8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E7465726E546F6B656E3A206D696E7420616D6F756E742065786365656473 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F74616C20737570706C7900000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2747 PUSH1 0x2D DUP4 PUSH2 0x1D6B JUMP JUMPDEST SWAP2 POP PUSH2 0x2752 DUP3 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2776 DUP2 PUSH2 0x273A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E7465726E546F6B656E3A2074726561737572792077616C6C657420697320 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x746865207A65726F206164647265737300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2808 PUSH1 0x30 DUP4 PUSH2 0x1D6B JUMP JUMPDEST SWAP2 POP PUSH2 0x2813 DUP3 PUSH2 0x27AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2837 DUP2 PUSH2 0x27FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E7465726E546F6B656E3A2074726561737572792077616C6C65742063616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F742062652074686520636F6E747261637420697473656C66000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289A PUSH1 0x3A DUP4 PUSH2 0x1D6B JUMP JUMPDEST SWAP2 POP PUSH2 0x28A5 DUP3 PUSH2 0x283E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28C9 DUP2 PUSH2 0x288D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x28E5 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x28F2 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x28FF PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x290C PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x2919 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x2926 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1F21 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2946 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x2953 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2036 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x296F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x297C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x2989 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F21 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x29A6 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x29B3 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x29C0 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x29CD PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x29DA PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2036 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x29F9 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x2A06 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1FAB JUMP JUMPDEST PUSH2 0x2A13 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x2A20 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1FDF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0xB6 0xBF 0xD0 PUSH32 0xD6F688ED14B6A3FBF6CD8EA66E62F76674FB4BCF89ADC105AAC07D64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"582:3416:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;684:55:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2659:112:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1075:65:24;;;:::i;:::-;;1979:459;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;746:29:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1850:84:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1021:158:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2409:143:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1006:61:24;;;:::i;:::-;;5144:557:18;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1148:347:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3315:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1683:672:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:3;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;684:55:24:-;721:18;684:55;:::o;2659:112:7:-;2718:7;2744:20;:18;:20::i;:::-;2737:27;;2659:112;:::o;1075:65:24:-;1531:13:0;:11;:13::i;:::-;1122:10:24::1;:8;:10::i;:::-;1075:65::o:0;1979:459::-;1531:13:0;:11;:13::i;:::-;2071:1:24::1;2057:16;;:2;:16;;::::0;2049:66:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2143:1;2134:6;:10;2126:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2207:18;2243:10;:8;:10::i;:::-;2237:2;:16;;;;:::i;:::-;2228:6;:25;;;;:::i;:::-;2207:46;;721:18;2288:10;2272:13;:11;:13::i;:::-;:26;;;;:::i;:::-;:40;;2264:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;2373:21;2379:2;2383:10;2373:5;:21::i;:::-;2415:2;2410:20;;;2419:10;2410:20;;;;;;:::i;:::-;;;;;;;;2038:400;1979:459:::0;;:::o;618:87:5:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;746:29:24:-;;;;;;;;;;;;;:::o;1850:84:13:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:5:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;2409:143:7:-;2500:7;2526:19;2539:5;2526:12;:19::i;:::-;2519:26;;2409:143;;;:::o;1006:61:24:-;1531:13:0;:11;:13::i;:::-;1051:8:24::1;:6;:8::i;:::-;1006:61::o:0;5144:557:18:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;1148:347:24:-;1531:13:0;:11;:13::i;:::-;1263:1:24::1;1236:29;;:15;:29;;::::0;1228:90:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1364:4;1337:32;;:15;:32;;::::0;1329:103:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1462:15;1445:14;;:32;;;;;;;;;;;;;;;;;;1148:347:::0;:::o;3315:178:3:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;1683:672:7:-;1904:8;1886:15;:26;1882:97;;;1959:8;1935:33;;;;;;;;;;;:::i;:::-;;;;;;;;1882:97;1989:18;1024:95;2048:5;2055:7;2064:5;2071:16;2081:5;2071:9;:16::i;:::-;2089:8;2020:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2010:89;;;;;;1989:110;;2110:12;2125:28;2142:10;2125:16;:28::i;:::-;2110:43;;2164:14;2181:28;2195:4;2201:1;2204;2207;2181:13;:28::i;:::-;2164:45;;2233:5;2223:15;;:6;:15;;;2219:88;;2282:6;2290:5;2261:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2219:88;2317:31;2326:5;2333:7;2342:5;2317:8;:31::i;:::-;1872:483;;;1683:672;;;;;;;:::o;3551:140:3:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;3845:262:18:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2710:117:13:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;538:107:11:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;2463:115:13:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;6021:126:18:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;759:395:11:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:18:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6887:260:17:-;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;7131:9;7124:16;;;;;6887:260;;;;;;:::o;9701:432:3:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;3825:170:24:-;3957:30;3971:4;3977:2;3981:5;3957:13;:30::i;:::-;3825:170;;;:::o;4113:179:18:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;2202:126:13:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;2002:128::-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;3358:267:14:-;3452:13;1390:66;3510:17;;3500:5;3481:46;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3358:267;;;;;:::o;3326:374:19:-;3419:14;3501:4;3495:11;3531:10;3526:3;3519:23;3578:15;3571:4;3566:3;3562:14;3555:39;3630:10;3623:4;3618:3;3614:14;3607:34;3679:4;3674:3;3664:20;3654:30;;3470:224;3326:374;;;;:::o;5203:1551:17:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;1113:145:6:-;1474:19:13;:17;:19::i;:::-;1221:30:6::1;1235:4;1241:2;1245:5;1221:13;:30::i;:::-;1113:145:::0;;;:::o;2078:378:14:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2375:3;2370;2363:16;2415:4;2408;2403:3;2399:14;2392:28;2446:3;2439:10;;;;2078:378;;;:::o;6008:1107:3:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;2528:245:14:-;2589:7;2608:14;2661:4;2652;2625:33;;:40;2608:57;;2688:2;2679:6;:11;2675:69;;;2713:20;;;;;;;;;;;;;;2675:69;2760:6;2753:13;;;2528:245;;;:::o;7:99:25:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:118::-;5710:24;5728:5;5710:24;:::i;:::-;5705:3;5698:37;5623:118;;:::o;5747:222::-;5840:4;5878:2;5867:9;5863:18;5855:26;;5891:71;5959:1;5948:9;5944:17;5935:6;5891:71;:::i;:::-;5747:222;;;;:::o;5975:329::-;6034:6;6083:2;6071:9;6062:7;6058:23;6054:32;6051:119;;;6089:79;;:::i;:::-;6051:119;6209:1;6234:53;6279:7;6270:6;6259:9;6255:22;6234:53;:::i;:::-;6224:63;;6180:117;5975:329;;;;:::o;6310:149::-;6346:7;6386:66;6379:5;6375:78;6364:89;;6310:149;;;:::o;6465:115::-;6550:23;6567:5;6550:23;:::i;:::-;6545:3;6538:36;6465:115;;:::o;6586:114::-;6653:6;6687:5;6681:12;6671:22;;6586:114;;;:::o;6706:184::-;6805:11;6839:6;6834:3;6827:19;6879:4;6874:3;6870:14;6855:29;;6706:184;;;;:::o;6896:132::-;6963:4;6986:3;6978:11;;7016:4;7011:3;7007:14;6999:22;;6896:132;;;:::o;7034:108::-;7111:24;7129:5;7111:24;:::i;:::-;7106:3;7099:37;7034:108;;:::o;7148:179::-;7217:10;7238:46;7280:3;7272:6;7238:46;:::i;:::-;7316:4;7311:3;7307:14;7293:28;;7148:179;;;;:::o;7333:113::-;7403:4;7435;7430:3;7426:14;7418:22;;7333:113;;;:::o;7482:732::-;7601:3;7630:54;7678:5;7630:54;:::i;:::-;7700:86;7779:6;7774:3;7700:86;:::i;:::-;7693:93;;7810:56;7860:5;7810:56;:::i;:::-;7889:7;7920:1;7905:284;7930:6;7927:1;7924:13;7905:284;;;8006:6;8000:13;8033:63;8092:3;8077:13;8033:63;:::i;:::-;8026:70;;8119:60;8172:6;8119:60;:::i;:::-;8109:70;;7965:224;7952:1;7949;7945:9;7940:14;;7905:284;;;7909:14;8205:3;8198:10;;7606:608;;;7482:732;;;;:::o;8220:1215::-;8569:4;8607:3;8596:9;8592:19;8584:27;;8621:69;8687:1;8676:9;8672:17;8663:6;8621:69;:::i;:::-;8737:9;8731:4;8727:20;8722:2;8711:9;8707:18;8700:48;8765:78;8838:4;8829:6;8765:78;:::i;:::-;8757:86;;8890:9;8884:4;8880:20;8875:2;8864:9;8860:18;8853:48;8918:78;8991:4;8982:6;8918:78;:::i;:::-;8910:86;;9006:72;9074:2;9063:9;9059:18;9050:6;9006:72;:::i;:::-;9088:73;9156:3;9145:9;9141:19;9132:6;9088:73;:::i;:::-;9171;9239:3;9228:9;9224:19;9215:6;9171:73;:::i;:::-;9292:9;9286:4;9282:20;9276:3;9265:9;9261:19;9254:49;9320:108;9423:4;9414:6;9320:108;:::i;:::-;9312:116;;8220:1215;;;;;;;;;;:::o;9441:118::-;9512:22;9528:5;9512:22;:::i;:::-;9505:5;9502:33;9492:61;;9549:1;9546;9539:12;9492:61;9441:118;:::o;9565:135::-;9609:5;9647:6;9634:20;9625:29;;9663:31;9688:5;9663:31;:::i;:::-;9565:135;;;;:::o;9706:122::-;9779:24;9797:5;9779:24;:::i;:::-;9772:5;9769:35;9759:63;;9818:1;9815;9808:12;9759:63;9706:122;:::o;9834:139::-;9880:5;9918:6;9905:20;9896:29;;9934:33;9961:5;9934:33;:::i;:::-;9834:139;;;;:::o;9979:1199::-;10090:6;10098;10106;10114;10122;10130;10138;10187:3;10175:9;10166:7;10162:23;10158:33;10155:120;;;10194:79;;:::i;:::-;10155:120;10314:1;10339:53;10384:7;10375:6;10364:9;10360:22;10339:53;:::i;:::-;10329:63;;10285:117;10441:2;10467:53;10512:7;10503:6;10492:9;10488:22;10467:53;:::i;:::-;10457:63;;10412:118;10569:2;10595:53;10640:7;10631:6;10620:9;10616:22;10595:53;:::i;:::-;10585:63;;10540:118;10697:2;10723:53;10768:7;10759:6;10748:9;10744:22;10723:53;:::i;:::-;10713:63;;10668:118;10825:3;10852:51;10895:7;10886:6;10875:9;10871:22;10852:51;:::i;:::-;10842:61;;10796:117;10952:3;10979:53;11024:7;11015:6;11004:9;11000:22;10979:53;:::i;:::-;10969:63;;10923:119;11081:3;11108:53;11153:7;11144:6;11133:9;11129:22;11108:53;:::i;:::-;11098:63;;11052:119;9979:1199;;;;;;;;;;:::o;11184:474::-;11252:6;11260;11309:2;11297:9;11288:7;11284:23;11280:32;11277:119;;;11315:79;;:::i;:::-;11277:119;11435:1;11460:53;11505:7;11496:6;11485:9;11481:22;11460:53;:::i;:::-;11450:63;;11406:117;11562:2;11588:53;11633:7;11624:6;11613:9;11609:22;11588:53;:::i;:::-;11578:63;;11533:118;11184:474;;;;;:::o;11664:180::-;11712:77;11709:1;11702:88;11809:4;11806:1;11799:15;11833:4;11830:1;11823:15;11850:320;11894:6;11931:1;11925:4;11921:12;11911:22;;11978:1;11972:4;11968:12;11999:18;11989:81;;12055:4;12047:6;12043:17;12033:27;;11989:81;12117:2;12109:6;12106:14;12086:18;12083:38;12080:84;;12136:18;;:::i;:::-;12080:84;11901:269;11850:320;;;:::o;12176:224::-;12316:34;12312:1;12304:6;12300:14;12293:58;12385:7;12380:2;12372:6;12368:15;12361:32;12176:224;:::o;12406:366::-;12548:3;12569:67;12633:2;12628:3;12569:67;:::i;:::-;12562:74;;12645:93;12734:3;12645:93;:::i;:::-;12763:2;12758:3;12754:12;12747:19;;12406:366;;;:::o;12778:419::-;12944:4;12982:2;12971:9;12967:18;12959:26;;13031:9;13025:4;13021:20;13017:1;13006:9;13002:17;12995:47;13059:131;13185:4;13059:131;:::i;:::-;13051:139;;12778:419;;;:::o;13203:234::-;13343:34;13339:1;13331:6;13327:14;13320:58;13412:17;13407:2;13399:6;13395:15;13388:42;13203:234;:::o;13443:366::-;13585:3;13606:67;13670:2;13665:3;13606:67;:::i;:::-;13599:74;;13682:93;13771:3;13682:93;:::i;:::-;13800:2;13795:3;13791:12;13784:19;;13443:366;;;:::o;13815:419::-;13981:4;14019:2;14008:9;14004:18;13996:26;;14068:9;14062:4;14058:20;14054:1;14043:9;14039:17;14032:47;14096:131;14222:4;14096:131;:::i;:::-;14088:139;;13815:419;;;:::o;14240:180::-;14288:77;14285:1;14278:88;14385:4;14382:1;14375:15;14409:4;14406:1;14399:15;14426:102;14468:8;14515:5;14512:1;14508:13;14487:34;;14426:102;;;:::o;14534:848::-;14595:5;14602:4;14626:6;14617:15;;14650:5;14641:14;;14664:712;14685:1;14675:8;14672:15;14664:712;;;14780:4;14775:3;14771:14;14765:4;14762:24;14759:50;;;14789:18;;:::i;:::-;14759:50;14839:1;14829:8;14825:16;14822:451;;;15254:4;15247:5;15243:16;15234:25;;14822:451;15304:4;15298;15294:15;15286:23;;15334:32;15357:8;15334:32;:::i;:::-;15322:44;;14664:712;;;14534:848;;;;;;;:::o;15388:1073::-;15442:5;15633:8;15623:40;;15654:1;15645:10;;15656:5;;15623:40;15682:4;15672:36;;15699:1;15690:10;;15701:5;;15672:36;15768:4;15816:1;15811:27;;;;15852:1;15847:191;;;;15761:277;;15811:27;15829:1;15820:10;;15831:5;;;15847:191;15892:3;15882:8;15879:17;15876:43;;;15899:18;;:::i;:::-;15876:43;15948:8;15945:1;15941:16;15932:25;;15983:3;15976:5;15973:14;15970:40;;;15990:18;;:::i;:::-;15970:40;16023:5;;;15761:277;;16147:2;16137:8;16134:16;16128:3;16122:4;16119:13;16115:36;16097:2;16087:8;16084:16;16079:2;16073:4;16070:12;16066:35;16050:111;16047:246;;;16203:8;16197:4;16193:19;16184:28;;16238:3;16231:5;16228:14;16225:40;;;16245:18;;:::i;:::-;16225:40;16278:5;;16047:246;16318:42;16356:3;16346:8;16340:4;16337:1;16318:42;:::i;:::-;16303:57;;;;16392:4;16387:3;16383:14;16376:5;16373:25;16370:51;;;16401:18;;:::i;:::-;16370:51;16450:4;16443:5;16439:16;16430:25;;15388:1073;;;;;;:::o;16467:281::-;16525:5;16549:23;16567:4;16549:23;:::i;:::-;16541:31;;16593:25;16609:8;16593:25;:::i;:::-;16581:37;;16637:104;16674:66;16664:8;16658:4;16637:104;:::i;:::-;16628:113;;16467:281;;;;:::o;16754:410::-;16794:7;16817:20;16835:1;16817:20;:::i;:::-;16812:25;;16851:20;16869:1;16851:20;:::i;:::-;16846:25;;16906:1;16903;16899:9;16928:30;16946:11;16928:30;:::i;:::-;16917:41;;17107:1;17098:7;17094:15;17091:1;17088:22;17068:1;17061:9;17041:83;17018:139;;17137:18;;:::i;:::-;17018:139;16802:362;16754:410;;;;:::o;17170:191::-;17210:3;17229:20;17247:1;17229:20;:::i;:::-;17224:25;;17263:20;17281:1;17263:20;:::i;:::-;17258:25;;17306:1;17303;17299:9;17292:16;;17327:3;17324:1;17321:10;17318:36;;;17334:18;;:::i;:::-;17318:36;17170:191;;;;:::o;17367:232::-;17507:34;17503:1;17495:6;17491:14;17484:58;17576:15;17571:2;17563:6;17559:15;17552:40;17367:232;:::o;17605:366::-;17747:3;17768:67;17832:2;17827:3;17768:67;:::i;:::-;17761:74;;17844:93;17933:3;17844:93;:::i;:::-;17962:2;17957:3;17953:12;17946:19;;17605:366;;;:::o;17977:419::-;18143:4;18181:2;18170:9;18166:18;18158:26;;18230:9;18224:4;18220:20;18216:1;18205:9;18201:17;18194:47;18258:131;18384:4;18258:131;:::i;:::-;18250:139;;17977:419;;;:::o;18402:180::-;18450:77;18447:1;18440:88;18547:4;18544:1;18537:15;18571:4;18568:1;18561:15;18588:235;18728:34;18724:1;18716:6;18712:14;18705:58;18797:18;18792:2;18784:6;18780:15;18773:43;18588:235;:::o;18829:366::-;18971:3;18992:67;19056:2;19051:3;18992:67;:::i;:::-;18985:74;;19068:93;19157:3;19068:93;:::i;:::-;19186:2;19181:3;19177:12;19170:19;;18829:366;;;:::o;19201:419::-;19367:4;19405:2;19394:9;19390:18;19382:26;;19454:9;19448:4;19444:20;19440:1;19429:9;19425:17;19418:47;19482:131;19608:4;19482:131;:::i;:::-;19474:139;;19201:419;;;:::o;19626:245::-;19766:34;19762:1;19754:6;19750:14;19743:58;19835:28;19830:2;19822:6;19818:15;19811:53;19626:245;:::o;19877:366::-;20019:3;20040:67;20104:2;20099:3;20040:67;:::i;:::-;20033:74;;20116:93;20205:3;20116:93;:::i;:::-;20234:2;20229:3;20225:12;20218:19;;19877:366;;;:::o;20249:419::-;20415:4;20453:2;20442:9;20438:18;20430:26;;20502:9;20496:4;20492:20;20488:1;20477:9;20473:17;20466:47;20530:131;20656:4;20530:131;:::i;:::-;20522:139;;20249:419;;;:::o;20674:775::-;20907:4;20945:3;20934:9;20930:19;20922:27;;20959:71;21027:1;21016:9;21012:17;21003:6;20959:71;:::i;:::-;21040:72;21108:2;21097:9;21093:18;21084:6;21040:72;:::i;:::-;21122;21190:2;21179:9;21175:18;21166:6;21122:72;:::i;:::-;21204;21272:2;21261:9;21257:18;21248:6;21204:72;:::i;:::-;21286:73;21354:3;21343:9;21339:19;21330:6;21286:73;:::i;:::-;21369;21437:3;21426:9;21422:19;21413:6;21369:73;:::i;:::-;20674:775;;;;;;;;;:::o;21455:332::-;21576:4;21614:2;21603:9;21599:18;21591:26;;21627:71;21695:1;21684:9;21680:17;21671:6;21627:71;:::i;:::-;21708:72;21776:2;21765:9;21761:18;21752:6;21708:72;:::i;:::-;21455:332;;;;;:::o;21793:442::-;21942:4;21980:2;21969:9;21965:18;21957:26;;21993:71;22061:1;22050:9;22046:17;22037:6;21993:71;:::i;:::-;22074:72;22142:2;22131:9;22127:18;22118:6;22074:72;:::i;:::-;22156;22224:2;22213:9;22209:18;22200:6;22156:72;:::i;:::-;21793:442;;;;;;:::o;22241:664::-;22446:4;22484:3;22473:9;22469:19;22461:27;;22498:71;22566:1;22555:9;22551:17;22542:6;22498:71;:::i;:::-;22579:72;22647:2;22636:9;22632:18;22623:6;22579:72;:::i;:::-;22661;22729:2;22718:9;22714:18;22705:6;22661:72;:::i;:::-;22743;22811:2;22800:9;22796:18;22787:6;22743:72;:::i;:::-;22825:73;22893:3;22882:9;22878:19;22869:6;22825:73;:::i;:::-;22241:664;;;;;;;;:::o;22911:545::-;23084:4;23122:3;23111:9;23107:19;23099:27;;23136:71;23204:1;23193:9;23189:17;23180:6;23136:71;:::i;:::-;23217:68;23281:2;23270:9;23266:18;23257:6;23217:68;:::i;:::-;23295:72;23363:2;23352:9;23348:18;23339:6;23295:72;:::i;:::-;23377;23445:2;23434:9;23430:18;23421:6;23377:72;:::i;:::-;22911:545;;;;;;;:::o;23462:180::-;23510:77;23507:1;23500:88;23607:4;23604:1;23597:15;23631:4;23628:1;23621:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","MAX_SUPPLY()":"32cb6b0c","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","eip712Domain()":"84b0196e","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","setTreasuryWallet(address)":"a8602fea","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","treasuryWallet()":"4626402b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TaxTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasuryWallet\",\"type\":\"address\"}],\"name\":\"setTreasuryWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"mint(address,uint256)\":{\"details\":\"Mints `amount` tokens and assigns them to `to`, increasing the total supply. Requirements: - `to` cannot be the zero address. - `amount` must be greater than 0. - The total supply after minting must not exceed `MAX_SUPPLY`. Emits a {Mint} event.\",\"params\":{\"amount\":\"The number of tokens to mint.\",\"to\":\"The address to which the minted tokens will be assigned.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InternToken.sol\":\"InternToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/Events.sol\":{\"keccak256\":\"0xcce86908b28a899dad59cce7b3c649e3a670c079f2752a007c9e962b2ddff596\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://35327cbb3e50993ea1e820141b6370288ea200d702ec8472bff5e964ef9dc78c\",\"dweb:/ipfs/QmWUzeLeSMm8smqyENZFUfB1HjPjbDYy4QEtbZ2USzzJbE\"]},\"contracts/InternToken.sol\":{\"keccak256\":\"0x967876f600fab8ee0feffe5e1dd46032f4cbd1a8eb7b8f53cefc02d27658e4b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10b8a35e52c2330c10a4e6cbad762d91b1a5ac1e7e53174155191d39dcbbbf50\",\"dweb:/ipfs/QmdpKBYsfwMeYfDvee37623oZoMqXYG8Pr6KUY2Q4LYCGZ\"]}},\"version\":1}"}}}}}